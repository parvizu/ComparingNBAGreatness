!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=7)}([function(e,t,n){"use strict";e.exports=n(8)},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,u,l=o(e),s=1;s<arguments.length;s++){for(var c in n=Object(arguments[s]))a.call(n,c)&&(l[c]=n[c]);if(r){u=r(n);for(var f=0;f<u.length;f++)i.call(n,u[f])&&(l[u[f]]=n[u[f]])}}return l}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(9)},function(e,t){var n=/-+([a-z])/gi;function r(e,t,n){return 0!==n?t.toUpperCase():t}e.exports=function(e){var t=e.replace(n,r);return n.lastIndex=0,t}},function(e,t){e.exports=function(e,t){var n={};for(var r in e)e.hasOwnProperty(r)&&(n[r]=t(e[r]));return n}},function(e,t,n){var r;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/!function(){"use strict";var n={}.hasOwnProperty;function a(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var i=typeof r;if("string"===i||"number"===i)e.push(r);else if(Array.isArray(r)&&r.length){var o=a.apply(null,r);o&&e.push(o)}else if("object"===i)for(var u in r)n.call(r,u)&&r[u]&&e.push(u)}}return e.join(" ")}e.exports?(a.default=a,e.exports=a):void 0===(r=function(){return a}.apply(t,[]))||(e.exports=r)}()},function(e,t,n){var r=n(12);e.exports=r()},function(e,t,n){e.exports=n(35)},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(1),a="function"==typeof Symbol&&Symbol.for,i=a?Symbol.for("react.element"):60103,o=a?Symbol.for("react.portal"):60106,u=a?Symbol.for("react.fragment"):60107,l=a?Symbol.for("react.strict_mode"):60108,s=a?Symbol.for("react.profiler"):60114,c=a?Symbol.for("react.provider"):60109,f=a?Symbol.for("react.context"):60110,p=a?Symbol.for("react.forward_ref"):60112,d=a?Symbol.for("react.suspense"):60113,h=a?Symbol.for("react.memo"):60115,m=a?Symbol.for("react.lazy"):60116,g="function"==typeof Symbol&&Symbol.iterator;function v(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}function S(){}function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(v(85));this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},S.prototype=x.prototype;var A=w.prototype=new S;A.constructor=w,r(A,x.prototype),A.isPureReactComponent=!0;var E={current:null},N=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0};function k(e,t,n){var r,a={},o=null,u=null;if(null!=t)for(r in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(o=""+t.key),t)N.call(t,r)&&!M.hasOwnProperty(r)&&(a[r]=t[r]);var l=arguments.length-2;if(1===l)a.children=n;else if(1<l){for(var s=Array(l),c=0;c<l;c++)s[c]=arguments[c+2];a.children=s}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===a[r]&&(a[r]=l[r]);return{$$typeof:i,type:e,key:o,ref:u,props:a,_owner:E.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var T=/\/+/g,C=[];function P(e,t,n,r){if(C.length){var a=C.pop();return a.result=e,a.keyPrefix=t,a.func=n,a.context=r,a.count=0,a}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function D(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>C.length&&C.push(e)}function O(e,t,n){return null==e?0:function e(t,n,r,a){var u=typeof t;"undefined"!==u&&"boolean"!==u||(t=null);var l=!1;if(null===t)l=!0;else switch(u){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case i:case o:l=!0}}if(l)return r(a,t,""===n?"."+I(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+I(u=t[s],s);l+=e(u,c,r,a)}else if(null===t||"object"!=typeof t?c=null:c="function"==typeof(c=g&&t[g]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(u=t.next()).done;)l+=e(u=u.value,c=n+I(u,s++),r,a);else if("object"===u)throw r=""+t,Error(v(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return l}(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function z(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,a=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?R(e,r,n,(function(e){return e})):null!=e&&(_(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,a+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(T,"$&/")+"/")+n)),r.push(e))}function R(e,t,n,r,a){var i="";null!=n&&(i=(""+n).replace(T,"$&/")+"/"),O(e,L,t=P(t,i,r,a)),D(t)}var F={current:null};function j(){var e=F.current;if(null===e)throw Error(v(321));return e}var V={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:E,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return R(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;O(e,z,t=P(null,null,t,n)),D(t)},count:function(e){return O(e,(function(){return null}),null)},toArray:function(e){var t=[];return R(e,t,null,(function(e){return e})),t},only:function(e){if(!_(e))throw Error(v(143));return e}},t.Component=x,t.Fragment=u,t.Profiler=s,t.PureComponent=w,t.StrictMode=l,t.Suspense=d,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=V,t.cloneElement=function(e,t,n){if(null==e)throw Error(v(267,e));var a=r({},e.props),o=e.key,u=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(u=t.ref,l=E.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)N.call(t,c)&&!M.hasOwnProperty(c)&&(a[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)a.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:o,ref:u,props:a,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=k,t.createFactory=function(e){var t=k.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:p,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return j().useCallback(e,t)},t.useContext=function(e,t){return j().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return j().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return j().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return j().useLayoutEffect(e,t)},t.useMemo=function(e,t){return j().useMemo(e,t)},t.useReducer=function(e,t,n){return j().useReducer(e,t,n)},t.useRef=function(e){return j().useRef(e)},t.useState=function(e){return j().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),a=n(1),i=n(10);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(o(227));function u(e,t,n,r,a,i,o,u,l){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var l=!1,s=null,c=!1,f=null,p={onError:function(e){l=!0,s=e}};function d(e,t,n,r,a,i,o,c,f){l=!1,s=null,u.apply(p,arguments)}var h=null,m=null,g=null;function v(e,t,n){var r=e.type||"unknown-event";e.currentTarget=g(n),function(e,t,n,r,a,i,u,p,h){if(d.apply(this,arguments),l){if(!l)throw Error(o(198));var m=s;l=!1,s=null,c||(c=!0,f=m)}}(r,t,void 0,e),e.currentTarget=null}var y=null,b={};function x(){if(y)for(var e in b){var t=b[e],n=y.indexOf(e);if(!(-1<n))throw Error(o(96,e));if(!w[n]){if(!t.extractEvents)throw Error(o(97,e));for(var r in w[n]=t,n=t.eventTypes){var a=void 0,i=n[r],u=t,l=r;if(A.hasOwnProperty(l))throw Error(o(99,l));A[l]=i;var s=i.phasedRegistrationNames;if(s){for(a in s)s.hasOwnProperty(a)&&S(s[a],u,l);a=!0}else i.registrationName?(S(i.registrationName,u,l),a=!0):a=!1;if(!a)throw Error(o(98,r,e))}}}}function S(e,t,n){if(E[e])throw Error(o(100,e));E[e]=t,N[e]=t.eventTypes[n].dependencies}var w=[],A={},E={},N={};function M(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(o(102,t));b[t]=r,n=!0}}n&&x()}var k=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),_=null,T=null,C=null;function P(e){if(e=m(e)){if("function"!=typeof _)throw Error(o(280));var t=e.stateNode;t&&(t=h(t),_(e.stateNode,e.type,t))}}function D(e){T?C?C.push(e):C=[e]:T=e}function O(){if(T){var e=T,t=C;if(C=T=null,P(e),t)for(e=0;e<t.length;e++)P(t[e])}}function I(e,t){return e(t)}function z(e,t,n,r,a){return e(t,n,r,a)}function L(){}var R=I,F=!1,j=!1;function V(){null===T&&null===C||(L(),O())}function U(e,t,n){if(j)return e(t,n);j=!0;try{return R(e,t,n)}finally{j=!1,V()}}var q=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,B=Object.prototype.hasOwnProperty,$={},Y={};function H(e,t,n,r,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var W={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){W[e]=new H(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];W[t]=new H(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){W[e]=new H(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){W[e]=new H(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){W[e]=new H(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){W[e]=new H(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){W[e]=new H(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){W[e]=new H(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){W[e]=new H(e,5,!1,e.toLowerCase(),null,!1)}));var Q=/[\-:]([a-z])/g;function K(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(Q,K);W[t]=new H(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(Q,K);W[t]=new H(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(Q,K);W[t]=new H(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){W[e]=new H(e,1,!1,e.toLowerCase(),null,!1)})),W.xlinkHref=new H("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){W[e]=new H(e,1,!1,e.toLowerCase(),null,!0)}));var G=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var a=W.hasOwnProperty(t)?W[t]:null;(null!==a?0===a.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!B.call(Y,e)||!B.call($,e)&&(q.test(e)?Y[e]=!0:($[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}G.hasOwnProperty("ReactCurrentDispatcher")||(G.ReactCurrentDispatcher={current:null}),G.hasOwnProperty("ReactCurrentBatchConfig")||(G.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,ae=J?Symbol.for("react.profiler"):60114,ie=J?Symbol.for("react.provider"):60109,oe=J?Symbol.for("react.context"):60110,ue=J?Symbol.for("react.concurrent_mode"):60111,le=J?Symbol.for("react.forward_ref"):60112,se=J?Symbol.for("react.suspense"):60113,ce=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,pe=J?Symbol.for("react.lazy"):60116,de=J?Symbol.for("react.block"):60121,he="function"==typeof Symbol&&Symbol.iterator;function me(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=he&&e[he]||e["@@iterator"])?e:null}function ge(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case ae:return"Profiler";case re:return"StrictMode";case se:return"Suspense";case ce:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case oe:return"Context.Consumer";case ie:return"Context.Provider";case le:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ge(e.type);case de:return ge(e.render);case pe:if(e=1===e._status?e._result:null)return ge(e)}return null}function ve(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,a=e._debugSource,i=ge(e.type);n=null,r&&(n=ge(r.type)),r=i,i="",a?i=" (at "+a.fileName.replace(Z,"")+":"+a.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ye(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function xe(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Se(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function we(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ae(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ye(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Ee(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Ne(e,t){Ee(e,t);var n=ye(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ke(e,t.type,n):t.hasOwnProperty("defaultValue")&&ke(e,t.type,ye(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Me(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ke(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function _e(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Te(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ye(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function Ce(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Pe(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ye(n)}}function De(e,t){var n=ye(t.value),r=ye(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Ie="http://www.w3.org/1999/xhtml",ze="http://www.w3.org/2000/svg";function Le(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Re(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Le(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Fe,je=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,a){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==ze||"innerHTML"in e)e.innerHTML=t;else{for((Fe=Fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ve(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Ue(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var qe={animationend:Ue("Animation","AnimationEnd"),animationiteration:Ue("Animation","AnimationIteration"),animationstart:Ue("Animation","AnimationStart"),transitionend:Ue("Transition","TransitionEnd")},Be={},$e={};function Ye(e){if(Be[e])return Be[e];if(!qe[e])return e;var t,n=qe[e];for(t in n)if(n.hasOwnProperty(t)&&t in $e)return Be[e]=n[t];return e}k&&($e=document.createElement("div").style,"AnimationEvent"in window||(delete qe.animationend.animation,delete qe.animationiteration.animation,delete qe.animationstart.animation),"TransitionEvent"in window||delete qe.transitionend.transition);var He=Ye("animationend"),We=Ye("animationiteration"),Qe=Ye("animationstart"),Ke=Ye("transitionend"),Ge="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Xe=new("function"==typeof WeakMap?WeakMap:Map);function Ze(e){var t=Xe.get(e);return void 0===t&&(t=new Map,Xe.set(e,t)),t}function Je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Je(e)!==e)throw Error(o(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Je(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){n=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return tt(a),e;if(i===r)return tt(a),t;i=i.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=i;else{for(var u=!1,l=a.child;l;){if(l===n){u=!0,n=a,r=i;break}if(l===r){u=!0,r=a,n=i;break}l=l.sibling}if(!u){for(l=i.child;l;){if(l===n){u=!0,n=i,r=a;break}if(l===r){u=!0,r=i,n=a;break}l=l.sibling}if(!u)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(o(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function at(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var it=null;function ot(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)v(e,t[r],n[r]);else t&&v(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function ut(e){if(null!==e&&(it=rt(it,e)),e=it,it=null,e){if(at(e,ot),it)throw Error(o(95));if(c)throw e=f,c=!1,f=null,e}}function lt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function st(e){if(!k)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function pt(e,t,n,r){if(ct.length){var a=ct.pop();return a.topLevelType=e,a.eventSystemFlags=r,a.nativeEvent=t,a.targetInst=n,a}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function dt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=kn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var a=lt(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,o=e.eventSystemFlags;0===n&&(o|=64);for(var u=null,l=0;l<w.length;l++){var s=w[l];s&&(s=s.extractEvents(r,t,i,a,o))&&(u=rt(u,s))}ut(u)}}function ht(e,t,n){if(!n.has(e)){switch(e){case"scroll":Qt(t,"scroll",!0);break;case"focus":case"blur":Qt(t,"focus",!0),Qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":st(e)&&Qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ge.indexOf(e)&&Wt(e,t)}n.set(e,null)}}var mt,gt,vt,yt=!1,bt=[],xt=null,St=null,wt=null,At=new Map,Et=new Map,Nt=[],Mt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),kt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function _t(e,t,n,r,a){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:a,container:r}}function Tt(e,t){switch(e){case"focus":case"blur":xt=null;break;case"dragenter":case"dragleave":St=null;break;case"mouseover":case"mouseout":wt=null;break;case"pointerover":case"pointerout":At.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Et.delete(t.pointerId)}}function Ct(e,t,n,r,a,i){return null===e||e.nativeEvent!==i?(e=_t(t,n,r,a,i),null!==t&&(null!==(t=_n(t))&&gt(t)),e):(e.eventSystemFlags|=r,e)}function Pt(e){var t=kn(e.target);if(null!==t){var n=Je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){vt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Dt(e){if(null!==e.blockedOn)return!1;var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=_n(t);return null!==n&&gt(n),e.blockedOn=t,!1}return!0}function Ot(e,t,n){Dt(e)&&n.delete(t)}function It(){for(yt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=_n(e.blockedOn))&&mt(e);break}var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==xt&&Dt(xt)&&(xt=null),null!==St&&Dt(St)&&(St=null),null!==wt&&Dt(wt)&&(wt=null),At.forEach(Ot),Et.forEach(Ot)}function zt(e,t){e.blockedOn===t&&(e.blockedOn=null,yt||(yt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,It)))}function Lt(e){function t(t){return zt(t,e)}if(0<bt.length){zt(bt[0],e);for(var n=1;n<bt.length;n++){var r=bt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==xt&&zt(xt,e),null!==St&&zt(St,e),null!==wt&&zt(wt,e),At.forEach(t),Et.forEach(t),n=0;n<Nt.length;n++)(r=Nt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Nt.length&&null===(n=Nt[0]).blockedOn;)Pt(n),null===n.blockedOn&&Nt.shift()}var Rt={},Ft=new Map,jt=new Map,Vt=["abort","abort",He,"animationEnd",We,"animationIteration",Qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ke,"transitionEnd","waiting","waiting"];function Ut(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1],i="on"+(a[0].toUpperCase()+a.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},jt.set(r,t),Ft.set(r,i),Rt[a]=i}}Ut("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ut("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ut(Vt,2);for(var qt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Bt=0;Bt<qt.length;Bt++)jt.set(qt[Bt],0);var $t=i.unstable_UserBlockingPriority,Yt=i.unstable_runWithPriority,Ht=!0;function Wt(e,t){Qt(t,e,!1)}function Qt(e,t,n){var r=jt.get(t);switch(void 0===r?2:r){case 0:r=Kt.bind(null,t,1,e);break;case 1:r=Gt.bind(null,t,1,e);break;default:r=Xt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Kt(e,t,n,r){F||L();var a=Xt,i=F;F=!0;try{z(a,e,t,n,r)}finally{(F=i)||V()}}function Gt(e,t,n,r){Yt($t,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){if(Ht)if(0<bt.length&&-1<Mt.indexOf(e))e=_t(null,e,t,n,r),bt.push(e);else{var a=Zt(e,t,n,r);if(null===a)Tt(e,r);else if(-1<Mt.indexOf(e))e=_t(a,e,t,n,r),bt.push(e);else if(!function(e,t,n,r,a){switch(t){case"focus":return xt=Ct(xt,e,t,n,r,a),!0;case"dragenter":return St=Ct(St,e,t,n,r,a),!0;case"mouseover":return wt=Ct(wt,e,t,n,r,a),!0;case"pointerover":var i=a.pointerId;return At.set(i,Ct(At.get(i)||null,e,t,n,r,a)),!0;case"gotpointercapture":return i=a.pointerId,Et.set(i,Ct(Et.get(i)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r)){Tt(e,r),e=pt(e,r,null,t);try{U(dt,e)}finally{ft(e)}}}}function Zt(e,t,n,r){if(null!==(n=kn(n=lt(r)))){var a=Je(n);if(null===a)n=null;else{var i=a.tag;if(13===i){if(null!==(n=et(a)))return n;n=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;n=null}else a!==n&&(n=null)}}e=pt(e,r,n,t);try{U(dt,e)}finally{ft(e)}return null}var Jt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Jt.hasOwnProperty(e)&&Jt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(Jt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Jt[t]=Jt[e]}))}));var rn=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function an(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var un=Ie;function ln(e,t){var n=Ze(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=N[t];for(var r=0;r<t.length;r++)ht(t[r],e,n)}function sn(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function dn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mn=null,gn=null;function vn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"==typeof setTimeout?setTimeout:void 0,xn="function"==typeof clearTimeout?clearTimeout:void 0;function Sn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function wn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var An=Math.random().toString(36).slice(2),En="__reactInternalInstance$"+An,Nn="__reactEventHandlers$"+An,Mn="__reactContainere$"+An;function kn(e){var t=e[En];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Mn]||n[En]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=wn(e);null!==e;){if(n=e[En])return n;e=wn(e)}return t}n=(e=n).parentNode}return null}function _n(e){return!(e=e[En]||e[Mn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Tn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function Cn(e){return e[Nn]||null}function Pn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Dn(e,t){var n=e.stateNode;if(!n)return null;var r=h(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}function On(e,t,n){(t=Dn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function In(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Pn(t);for(t=n.length;0<t--;)On(n[t],"captured",e);for(t=0;t<n.length;t++)On(n[t],"bubbled",e)}}function zn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Dn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Ln(e){e&&e.dispatchConfig.registrationName&&zn(e._targetInst,null,e)}function Rn(e){at(e,In)}var Fn=null,jn=null,Vn=null;function Un(){if(Vn)return Vn;var e,t,n=jn,r=n.length,a="value"in Fn?Fn.value:Fn.textContent,i=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[i-t];t++);return Vn=a.slice(e,1<t?1-t:void 0)}function qn(){return!0}function Bn(){return!1}function $n(e,t,n,r){for(var a in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(a)&&((t=e[a])?this[a]=t(n):"target"===a?this.target=r:this[a]=n[a]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?qn:Bn,this.isPropagationStopped=Bn,this}function Yn(e,t,n,r){if(this.eventPool.length){var a=this.eventPool.pop();return this.call(a,e,t,n,r),a}return new this(e,t,n,r)}function Hn(e){if(!(e instanceof this))throw Error(o(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Wn(e){e.eventPool=[],e.getPooled=Yn,e.release=Hn}a($n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=qn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=qn)},persist:function(){this.isPersistent=qn},isPersistent:Bn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Bn,this._dispatchInstances=this._dispatchListeners=null}}),$n.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},$n.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return a(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=a({},r.Interface,e),n.extend=r.extend,Wn(n),n},Wn($n);var Qn=$n.extend({data:null}),Kn=$n.extend({data:null}),Gn=[9,13,27,32],Xn=k&&"CompositionEvent"in window,Zn=null;k&&"documentMode"in document&&(Zn=document.documentMode);var Jn=k&&"TextEvent"in window&&!Zn,er=k&&(!Xn||Zn&&8<Zn&&11>=Zn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function ar(e,t){switch(e){case"keyup":return-1!==Gn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var or=!1;var ur={eventTypes:nr,extractEvents:function(e,t,n,r){var a;if(Xn)e:{switch(e){case"compositionstart":var i=nr.compositionStart;break e;case"compositionend":i=nr.compositionEnd;break e;case"compositionupdate":i=nr.compositionUpdate;break e}i=void 0}else or?ar(e,n)&&(i=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=nr.compositionStart);return i?(er&&"ko"!==n.locale&&(or||i!==nr.compositionStart?i===nr.compositionEnd&&or&&(a=Un()):(jn="value"in(Fn=r)?Fn.value:Fn.textContent,or=!0)),i=Qn.getPooled(i,t,n,r),a?i.data=a:null!==(a=ir(n))&&(i.data=a),Rn(i),a=i):a=null,(e=Jn?function(e,t){switch(e){case"compositionend":return ir(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(or)return"compositionend"===e||!Xn&&ar(e,t)?(e=Un(),Vn=jn=Fn=null,or=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Kn.getPooled(nr.beforeInput,t,n,r)).data=e,Rn(t)):t=null,null===a?t:null===t?a:[a,t]}},lr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function sr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!lr[e.type]:"textarea"===t}var cr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=$n.getPooled(cr.change,e,t,n)).type="change",D(n),Rn(e),e}var pr=null,dr=null;function hr(e){ut(e)}function mr(e){if(Se(Tn(e)))return e}function gr(e,t){if("change"===e)return t}var vr=!1;function yr(){pr&&(pr.detachEvent("onpropertychange",br),dr=pr=null)}function br(e){if("value"===e.propertyName&&mr(dr))if(e=fr(dr,e,lt(e)),F)ut(e);else{F=!0;try{I(hr,e)}finally{F=!1,V()}}}function xr(e,t,n){"focus"===e?(yr(),dr=n,(pr=t).attachEvent("onpropertychange",br)):"blur"===e&&yr()}function Sr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return mr(dr)}function wr(e,t){if("click"===e)return mr(t)}function Ar(e,t){if("input"===e||"change"===e)return mr(t)}k&&(vr=st("input")&&(!document.documentMode||9<document.documentMode));var Er={eventTypes:cr,_isInputEventSupported:vr,extractEvents:function(e,t,n,r){var a=t?Tn(t):window,i=a.nodeName&&a.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===a.type)var o=gr;else if(sr(a))if(vr)o=Ar;else{o=Sr;var u=xr}else(i=a.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===a.type||"radio"===a.type)&&(o=wr);if(o&&(o=o(e,t)))return fr(o,n,r);u&&u(e,a,t),"blur"===e&&(e=a._wrapperState)&&e.controlled&&"number"===a.type&&ke(a,"number",a.value)}},Nr=$n.extend({view:null,detail:null}),Mr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function kr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Mr[e])&&!!t[e]}function _r(){return kr}var Tr=0,Cr=0,Pr=!1,Dr=!1,Or=Nr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:_r,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Tr;return Tr=e.screenX,Pr?"mousemove"===e.type?e.screenX-t:0:(Pr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Cr;return Cr=e.screenY,Dr?"mousemove"===e.type?e.screenY-t:0:(Dr=!0,0)}}),Ir=Or.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),zr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Lr={eventTypes:zr,extractEvents:function(e,t,n,r,a){var i="mouseover"===e||"pointerover"===e,o="mouseout"===e||"pointerout"===e;if(i&&0==(32&a)&&(n.relatedTarget||n.fromElement)||!o&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,o)?(o=t,null!==(t=(t=n.relatedTarget||n.toElement)?kn(t):null)&&(t!==Je(t)||5!==t.tag&&6!==t.tag)&&(t=null)):o=null;if(o===t)return null;if("mouseout"===e||"mouseover"===e)var u=Or,l=zr.mouseLeave,s=zr.mouseEnter,c="mouse";else"pointerout"!==e&&"pointerover"!==e||(u=Ir,l=zr.pointerLeave,s=zr.pointerEnter,c="pointer");if(e=null==o?i:Tn(o),i=null==t?i:Tn(t),(l=u.getPooled(l,o,n,r)).type=c+"leave",l.target=e,l.relatedTarget=i,(n=u.getPooled(s,t,n,r)).type=c+"enter",n.target=i,n.relatedTarget=e,c=t,(r=o)&&c)e:{for(s=c,o=0,e=u=r;e;e=Pn(e))o++;for(e=0,t=s;t;t=Pn(t))e++;for(;0<o-e;)u=Pn(u),o--;for(;0<e-o;)s=Pn(s),e--;for(;o--;){if(u===s||u===s.alternate)break e;u=Pn(u),s=Pn(s)}u=null}else u=null;for(s=u,u=[];r&&r!==s&&(null===(o=r.alternate)||o!==s);)u.push(r),r=Pn(r);for(r=[];c&&c!==s&&(null===(o=c.alternate)||o!==s);)r.push(c),c=Pn(c);for(c=0;c<u.length;c++)zn(u[c],"bubbled",l);for(c=r.length;0<c--;)zn(r[c],"captured",n);return 0==(64&a)?[l]:[l,n]}};var Rr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Fr=Object.prototype.hasOwnProperty;function jr(e,t){if(Rr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Fr.call(t,n[r])||!Rr(e[n[r]],t[n[r]]))return!1;return!0}var Vr=k&&"documentMode"in document&&11>=document.documentMode,Ur={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},qr=null,Br=null,$r=null,Yr=!1;function Hr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Yr||null==qr||qr!==cn(n)?null:("selectionStart"in(n=qr)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},$r&&jr($r,n)?null:($r=n,(e=$n.getPooled(Ur.select,Br,e,t)).type="select",e.target=qr,Rn(e),e))}var Wr={eventTypes:Ur,extractEvents:function(e,t,n,r,a,i){if(!(i=!(a=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{a=Ze(a),i=N.onSelect;for(var o=0;o<i.length;o++)if(!a.has(i[o])){a=!1;break e}a=!0}i=!a}if(i)return null;switch(a=t?Tn(t):window,e){case"focus":(sr(a)||"true"===a.contentEditable)&&(qr=a,Br=t,$r=null);break;case"blur":$r=Br=qr=null;break;case"mousedown":Yr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Yr=!1,Hr(n,r);case"selectionchange":if(Vr)break;case"keydown":case"keyup":return Hr(n,r)}return null}},Qr=$n.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Kr=$n.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Gr=Nr.extend({relatedTarget:null});function Xr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Zr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Jr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ea=Nr.extend({key:function(e){if(e.key){var t=Zr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Xr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Jr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:_r,charCode:function(e){return"keypress"===e.type?Xr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Xr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),ta=Or.extend({dataTransfer:null}),na=Nr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:_r}),ra=$n.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),aa=Or.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),ia={eventTypes:Rt,extractEvents:function(e,t,n,r){var a=Ft.get(e);if(!a)return null;switch(e){case"keypress":if(0===Xr(n))return null;case"keydown":case"keyup":e=ea;break;case"blur":case"focus":e=Gr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Or;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=ta;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=na;break;case He:case We:case Qe:e=Qr;break;case Ke:e=ra;break;case"scroll":e=Nr;break;case"wheel":e=aa;break;case"copy":case"cut":case"paste":e=Kr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ir;break;default:e=$n}return Rn(t=e.getPooled(a,t,n,r)),t}};if(y)throw Error(o(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x(),h=Cn,m=_n,g=Tn,M({SimpleEventPlugin:ia,EnterLeaveEventPlugin:Lr,ChangeEventPlugin:Er,SelectEventPlugin:Wr,BeforeInputEventPlugin:ur});var oa=[],ua=-1;function la(e){0>ua||(e.current=oa[ua],oa[ua]=null,ua--)}function sa(e,t){ua++,oa[ua]=e.current,e.current=t}var ca={},fa={current:ca},pa={current:!1},da=ca;function ha(e,t){var n=e.type.contextTypes;if(!n)return ca;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,i={};for(a in n)i[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function ma(e){return null!=(e=e.childContextTypes)}function ga(){la(pa),la(fa)}function va(e,t,n){if(fa.current!==ca)throw Error(o(168));sa(fa,t),sa(pa,n)}function ya(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(o(108,ge(t)||"Unknown",i));return a({},n,{},r)}function ba(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ca,da=fa.current,sa(fa,e),sa(pa,pa.current),!0}function xa(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=ya(e,t,da),r.__reactInternalMemoizedMergedChildContext=e,la(pa),la(fa),sa(fa,e)):la(pa),sa(pa,n)}var Sa=i.unstable_runWithPriority,wa=i.unstable_scheduleCallback,Aa=i.unstable_cancelCallback,Ea=i.unstable_requestPaint,Na=i.unstable_now,Ma=i.unstable_getCurrentPriorityLevel,ka=i.unstable_ImmediatePriority,_a=i.unstable_UserBlockingPriority,Ta=i.unstable_NormalPriority,Ca=i.unstable_LowPriority,Pa=i.unstable_IdlePriority,Da={},Oa=i.unstable_shouldYield,Ia=void 0!==Ea?Ea:function(){},za=null,La=null,Ra=!1,Fa=Na(),ja=1e4>Fa?Na:function(){return Na()-Fa};function Va(){switch(Ma()){case ka:return 99;case _a:return 98;case Ta:return 97;case Ca:return 96;case Pa:return 95;default:throw Error(o(332))}}function Ua(e){switch(e){case 99:return ka;case 98:return _a;case 97:return Ta;case 96:return Ca;case 95:return Pa;default:throw Error(o(332))}}function qa(e,t){return e=Ua(e),Sa(e,t)}function Ba(e,t,n){return e=Ua(e),wa(e,t,n)}function $a(e){return null===za?(za=[e],La=wa(ka,Ha)):za.push(e),Da}function Ya(){if(null!==La){var e=La;La=null,Aa(e)}Ha()}function Ha(){if(!Ra&&null!==za){Ra=!0;var e=0;try{var t=za;qa(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),za=null}catch(t){throw null!==za&&(za=za.slice(e+1)),wa(ka,Ya),t}finally{Ra=!1}}}function Wa(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Qa(e,t){if(e&&e.defaultProps)for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Ka={current:null},Ga=null,Xa=null,Za=null;function Ja(){Za=Xa=Ga=null}function ei(e){var t=Ka.current;la(Ka),e.type._context._currentValue=t}function ti(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ni(e,t){Ga=e,Za=Xa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Co=!0),e.firstContext=null)}function ri(e,t){if(Za!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Za=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Xa){if(null===Ga)throw Error(o(308));Xa=t,Ga.dependencies={expirationTime:0,firstContext:t,responders:null}}else Xa=Xa.next=t;return e._currentValue}var ai=!1;function ii(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function oi(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ui(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function li(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function si(e,t){var n=e.alternate;null!==n&&oi(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function ci(e,t,n,r){var i=e.updateQueue;ai=!1;var o=i.baseQueue,u=i.shared.pending;if(null!==u){if(null!==o){var l=o.next;o.next=u.next,u.next=l}o=u,i.shared.pending=null,null!==(l=e.alternate)&&(null!==(l=l.updateQueue)&&(l.baseQueue=u))}if(null!==o){l=o.next;var s=i.baseState,c=0,f=null,p=null,d=null;if(null!==l)for(var h=l;;){if((u=h.expirationTime)<r){var m={expirationTime:h.expirationTime,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null};null===d?(p=d=m,f=s):d=d.next=m,u>c&&(c=u)}else{null!==d&&(d=d.next={expirationTime:1073741823,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null}),il(u,h.suspenseConfig);e:{var g=e,v=h;switch(u=t,m=n,v.tag){case 1:if("function"==typeof(g=v.payload)){s=g.call(m,s,u);break e}s=g;break e;case 3:g.effectTag=-4097&g.effectTag|64;case 0:if(null==(u="function"==typeof(g=v.payload)?g.call(m,s,u):g))break e;s=a({},s,u);break e;case 2:ai=!0}}null!==h.callback&&(e.effectTag|=32,null===(u=i.effects)?i.effects=[h]:u.push(h))}if(null===(h=h.next)||h===l){if(null===(u=i.shared.pending))break;h=o.next=u.next,u.next=l,i.baseQueue=o=u,i.shared.pending=null}}null===d?f=s:d.next=p,i.baseState=f,i.baseQueue=d,ol(c),e.expirationTime=c,e.memoizedState=s}}function fi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=a,a=n,"function"!=typeof r)throw Error(o(191,r));r.call(a)}}}var pi=G.ReactCurrentBatchConfig,di=(new r.Component).refs;function hi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var mi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Hu(),a=pi.suspense;(a=ui(r=Wu(r,e,a),a)).payload=t,null!=n&&(a.callback=n),li(e,a),Qu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Hu(),a=pi.suspense;(a=ui(r=Wu(r,e,a),a)).tag=1,a.payload=t,null!=n&&(a.callback=n),li(e,a),Qu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Hu(),r=pi.suspense;(r=ui(n=Wu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),li(e,r),Qu(e,n)}};function gi(e,t,n,r,a,i,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,o):!t.prototype||!t.prototype.isPureReactComponent||(!jr(n,r)||!jr(a,i))}function vi(e,t,n){var r=!1,a=ca,i=t.contextType;return"object"==typeof i&&null!==i?i=ri(i):(a=ma(t)?da:fa.current,i=(r=null!=(r=t.contextTypes))?ha(e,a):ca),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=mi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=i),t}function yi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&mi.enqueueReplaceState(t,t.state,null)}function bi(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=di,ii(e);var i=t.contextType;"object"==typeof i&&null!==i?a.context=ri(i):(i=ma(t)?da:fa.current,a.context=ha(e,i)),ci(e,n,a,r),a.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(hi(e,t,i,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&mi.enqueueReplaceState(a,a.state,null),ci(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.effectTag|=4)}var xi=Array.isArray;function Si(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===di&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function wi(e,t){if("textarea"!==e.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ai(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Ml(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Tl(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=Si(e,t,n),r.return=e,r):((r=kl(n.type,n.key,n.props,null,e.mode,r)).ref=Si(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Cl(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=_l(n,e.mode,r,i)).return=e,t):((t=a(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Tl(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=kl(t.type,t.key,t.props,null,e.mode,n)).ref=Si(e,null,t),n.return=e,n;case te:return(t=Cl(t,e.mode,n)).return=e,t}if(xi(t)||me(t))return(t=_l(t,e.mode,n,null)).return=e,t;wi(e,t)}return null}function d(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===a?n.type===ne?f(e,t,n.props.children,r,a):s(e,t,n,r):null;case te:return n.key===a?c(e,t,n,r):null}if(xi(n)||me(n))return null!==a?null:f(e,t,n,r,null);wi(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,a,r.key):s(t,e,r,a);case te:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(xi(r)||me(r))return f(t,e=e.get(n)||null,r,a,null);wi(t,r)}return null}function m(a,o,u,l){for(var s=null,c=null,f=o,m=o=0,g=null;null!==f&&m<u.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var v=d(a,f,u[m],l);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(a,f),o=i(v,o,m),null===c?s=v:c.sibling=v,c=v,f=g}if(m===u.length)return n(a,f),s;if(null===f){for(;m<u.length;m++)null!==(f=p(a,u[m],l))&&(o=i(f,o,m),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(a,f);m<u.length;m++)null!==(g=h(f,a,m,u[m],l))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),o=i(g,o,m),null===c?s=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return t(a,e)})),s}function g(a,u,l,s){var c=me(l);if("function"!=typeof c)throw Error(o(150));if(null==(l=c.call(l)))throw Error(o(151));for(var f=c=null,m=u,g=u=0,v=null,y=l.next();null!==m&&!y.done;g++,y=l.next()){m.index>g?(v=m,m=null):v=m.sibling;var b=d(a,m,y.value,s);if(null===b){null===m&&(m=v);break}e&&m&&null===b.alternate&&t(a,m),u=i(b,u,g),null===f?c=b:f.sibling=b,f=b,m=v}if(y.done)return n(a,m),c;if(null===m){for(;!y.done;g++,y=l.next())null!==(y=p(a,y.value,s))&&(u=i(y,u,g),null===f?c=y:f.sibling=y,f=y);return c}for(m=r(a,m);!y.done;g++,y=l.next())null!==(y=h(m,a,g,y.value,s))&&(e&&null!==y.alternate&&m.delete(null===y.key?g:y.key),u=i(y,u,g),null===f?c=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return t(a,e)})),c}return function(e,r,i,l){var s="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;s&&(i=i.props.children);var c="object"==typeof i&&null!==i;if(c)switch(i.$$typeof){case ee:e:{for(c=i.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(i.type===ne){n(e,s.sibling),(r=a(s,i.props.children)).return=e,e=r;break e}break;default:if(s.elementType===i.type){n(e,s.sibling),(r=a(s,i.props)).ref=Si(e,s,i),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}i.type===ne?((r=_l(i.props.children,e.mode,l,i.key)).return=e,e=r):((l=kl(i.type,i.key,i.props,null,e.mode,l)).ref=Si(e,r,i),l.return=e,e=l)}return u(e);case te:e:{for(s=i.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=a(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Cl(i,e.mode,l)).return=e,e=r}return u(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,i)).return=e,e=r):(n(e,r),(r=Tl(i,e.mode,l)).return=e,e=r),u(e);if(xi(i))return m(e,r,i,l);if(me(i))return g(e,r,i,l);if(c&&wi(e,i),void 0===i&&!s)switch(e.tag){case 1:case 0:throw e=e.type,Error(o(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Ei=Ai(!0),Ni=Ai(!1),Mi={},ki={current:Mi},_i={current:Mi},Ti={current:Mi};function Ci(e){if(e===Mi)throw Error(o(174));return e}function Pi(e,t){switch(sa(Ti,t),sa(_i,e),sa(ki,Mi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Re(null,"");break;default:t=Re(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}la(ki),sa(ki,t)}function Di(){la(ki),la(_i),la(Ti)}function Oi(e){Ci(Ti.current);var t=Ci(ki.current),n=Re(t,e.type);t!==n&&(sa(_i,e),sa(ki,n))}function Ii(e){_i.current===e&&(la(ki),la(_i))}var zi={current:0};function Li(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ri(e,t){return{responder:e,props:t}}var Fi=G.ReactCurrentDispatcher,ji=G.ReactCurrentBatchConfig,Vi=0,Ui=null,qi=null,Bi=null,$i=!1;function Yi(){throw Error(o(321))}function Hi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Rr(e[n],t[n]))return!1;return!0}function Wi(e,t,n,r,a,i){if(Vi=i,Ui=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Fi.current=null===e||null===e.memoizedState?vo:yo,e=n(r,a),t.expirationTime===Vi){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(o(301));i+=1,Bi=qi=null,t.updateQueue=null,Fi.current=bo,e=n(r,a)}while(t.expirationTime===Vi)}if(Fi.current=go,t=null!==qi&&null!==qi.next,Vi=0,Bi=qi=Ui=null,$i=!1,t)throw Error(o(300));return e}function Qi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Bi?Ui.memoizedState=Bi=e:Bi=Bi.next=e,Bi}function Ki(){if(null===qi){var e=Ui.alternate;e=null!==e?e.memoizedState:null}else e=qi.next;var t=null===Bi?Ui.memoizedState:Bi.next;if(null!==t)Bi=t,qi=e;else{if(null===e)throw Error(o(310));e={memoizedState:(qi=e).memoizedState,baseState:qi.baseState,baseQueue:qi.baseQueue,queue:qi.queue,next:null},null===Bi?Ui.memoizedState=Bi=e:Bi=Bi.next=e}return Bi}function Gi(e,t){return"function"==typeof t?t(e):t}function Xi(e){var t=Ki(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=qi,a=r.baseQueue,i=n.pending;if(null!==i){if(null!==a){var u=a.next;a.next=i.next,i.next=u}r.baseQueue=a=i,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var l=u=i=null,s=a;do{var c=s.expirationTime;if(c<Vi){var f={expirationTime:s.expirationTime,suspenseConfig:s.suspenseConfig,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===l?(u=l=f,i=r):l=l.next=f,c>Ui.expirationTime&&(Ui.expirationTime=c,ol(c))}else null!==l&&(l=l.next={expirationTime:1073741823,suspenseConfig:s.suspenseConfig,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),il(c,s.suspenseConfig),r=s.eagerReducer===e?s.eagerState:e(r,s.action);s=s.next}while(null!==s&&s!==a);null===l?i=r:l.next=u,Rr(r,t.memoizedState)||(Co=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=l,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Zi(e){var t=Ki(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var u=a=a.next;do{i=e(i,u.action),u=u.next}while(u!==a);Rr(i,t.memoizedState)||(Co=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function Ji(e){var t=Qi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Gi,lastRenderedState:e}).dispatch=mo.bind(null,Ui,e),[t.memoizedState,e]}function eo(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Ui.updateQueue)?(t={lastEffect:null},Ui.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function to(){return Ki().memoizedState}function no(e,t,n,r){var a=Qi();Ui.effectTag|=e,a.memoizedState=eo(1|t,n,void 0,void 0===r?null:r)}function ro(e,t,n,r){var a=Ki();r=void 0===r?null:r;var i=void 0;if(null!==qi){var o=qi.memoizedState;if(i=o.destroy,null!==r&&Hi(r,o.deps))return void eo(t,n,i,r)}Ui.effectTag|=e,a.memoizedState=eo(1|t,n,i,r)}function ao(e,t){return no(516,4,e,t)}function io(e,t){return ro(516,4,e,t)}function oo(e,t){return ro(4,2,e,t)}function uo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function lo(e,t,n){return n=null!=n?n.concat([e]):null,ro(4,2,uo.bind(null,t,e),n)}function so(){}function co(e,t){return Qi().memoizedState=[e,void 0===t?null:t],e}function fo(e,t){var n=Ki();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Hi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function po(e,t){var n=Ki();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Hi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ho(e,t,n){var r=Va();qa(98>r?98:r,(function(){e(!0)})),qa(97<r?97:r,(function(){var r=ji.suspense;ji.suspense=void 0===t?null:t;try{e(!1),n()}finally{ji.suspense=r}}))}function mo(e,t,n){var r=Hu(),a=pi.suspense;a={expirationTime:r=Wu(r,e,a),suspenseConfig:a,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),t.pending=a,i=e.alternate,e===Ui||null!==i&&i===Ui)$i=!0,a.expirationTime=Vi,Ui.expirationTime=Vi;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var o=t.lastRenderedState,u=i(o,n);if(a.eagerReducer=i,a.eagerState=u,Rr(u,o))return}catch(e){}Qu(e,r)}}var go={readContext:ri,useCallback:Yi,useContext:Yi,useEffect:Yi,useImperativeHandle:Yi,useLayoutEffect:Yi,useMemo:Yi,useReducer:Yi,useRef:Yi,useState:Yi,useDebugValue:Yi,useResponder:Yi,useDeferredValue:Yi,useTransition:Yi},vo={readContext:ri,useCallback:co,useContext:ri,useEffect:ao,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,no(4,2,uo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return no(4,2,e,t)},useMemo:function(e,t){var n=Qi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Qi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=mo.bind(null,Ui,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Qi().memoizedState=e},useState:Ji,useDebugValue:so,useResponder:Ri,useDeferredValue:function(e,t){var n=Ji(e),r=n[0],a=n[1];return ao((function(){var n=ji.suspense;ji.suspense=void 0===t?null:t;try{a(e)}finally{ji.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ji(!1),n=t[0];return t=t[1],[co(ho.bind(null,t,e),[t,e]),n]}},yo={readContext:ri,useCallback:fo,useContext:ri,useEffect:io,useImperativeHandle:lo,useLayoutEffect:oo,useMemo:po,useReducer:Xi,useRef:to,useState:function(){return Xi(Gi)},useDebugValue:so,useResponder:Ri,useDeferredValue:function(e,t){var n=Xi(Gi),r=n[0],a=n[1];return io((function(){var n=ji.suspense;ji.suspense=void 0===t?null:t;try{a(e)}finally{ji.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Xi(Gi),n=t[0];return t=t[1],[fo(ho.bind(null,t,e),[t,e]),n]}},bo={readContext:ri,useCallback:fo,useContext:ri,useEffect:io,useImperativeHandle:lo,useLayoutEffect:oo,useMemo:po,useReducer:Zi,useRef:to,useState:function(){return Zi(Gi)},useDebugValue:so,useResponder:Ri,useDeferredValue:function(e,t){var n=Zi(Gi),r=n[0],a=n[1];return io((function(){var n=ji.suspense;ji.suspense=void 0===t?null:t;try{a(e)}finally{ji.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Zi(Gi),n=t[0];return t=t[1],[fo(ho.bind(null,t,e),[t,e]),n]}},xo=null,So=null,wo=!1;function Ao(e,t){var n=El(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Eo(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function No(e){if(wo){var t=So;if(t){var n=t;if(!Eo(e,t)){if(!(t=Sn(n.nextSibling))||!Eo(e,t))return e.effectTag=-1025&e.effectTag|2,wo=!1,void(xo=e);Ao(xo,n)}xo=e,So=Sn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,wo=!1,xo=e}}function Mo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;xo=e}function ko(e){if(e!==xo)return!1;if(!wo)return Mo(e),wo=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yn(t,e.memoizedProps))for(t=So;t;)Ao(e,t),t=Sn(t.nextSibling);if(Mo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){So=Sn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}So=null}}else So=xo?Sn(e.stateNode.nextSibling):null;return!0}function _o(){So=xo=null,wo=!1}var To=G.ReactCurrentOwner,Co=!1;function Po(e,t,n,r){t.child=null===e?Ni(t,null,n,r):Ei(t,e.child,n,r)}function Do(e,t,n,r,a){n=n.render;var i=t.ref;return ni(t,a),r=Wi(e,t,n,r,i,a),null===e||Co?(t.effectTag|=1,Po(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=a&&(e.expirationTime=0),Qo(e,t,a))}function Oo(e,t,n,r,a,i){if(null===e){var o=n.type;return"function"!=typeof o||Nl(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=kl(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Io(e,t,o,r,a,i))}return o=e.child,a<i&&(a=o.memoizedProps,(n=null!==(n=n.compare)?n:jr)(a,r)&&e.ref===t.ref)?Qo(e,t,i):(t.effectTag|=1,(e=Ml(o,r)).ref=t.ref,e.return=t,t.child=e)}function Io(e,t,n,r,a,i){return null!==e&&jr(e.memoizedProps,r)&&e.ref===t.ref&&(Co=!1,a<i)?(t.expirationTime=e.expirationTime,Qo(e,t,i)):Lo(e,t,n,r,i)}function zo(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Lo(e,t,n,r,a){var i=ma(n)?da:fa.current;return i=ha(t,i),ni(t,a),n=Wi(e,t,n,r,i,a),null===e||Co?(t.effectTag|=1,Po(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=a&&(e.expirationTime=0),Qo(e,t,a))}function Ro(e,t,n,r,a){if(ma(n)){var i=!0;ba(t)}else i=!1;if(ni(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),vi(t,n,r),bi(t,n,r,a),r=!0;else if(null===e){var o=t.stateNode,u=t.memoizedProps;o.props=u;var l=o.context,s=n.contextType;"object"==typeof s&&null!==s?s=ri(s):s=ha(t,s=ma(n)?da:fa.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(u!==r||l!==s)&&yi(t,o,r,s),ai=!1;var p=t.memoizedState;o.state=p,ci(t,r,o,a),l=t.memoizedState,u!==r||p!==l||pa.current||ai?("function"==typeof c&&(hi(t,n,c,r),l=t.memoizedState),(u=ai||gi(t,n,u,r,p,l,s))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.effectTag|=4)):("function"==typeof o.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),o.props=r,o.state=l,o.context=s,r=u):("function"==typeof o.componentDidMount&&(t.effectTag|=4),r=!1)}else o=t.stateNode,oi(e,t),u=t.memoizedProps,o.props=t.type===t.elementType?u:Qa(t.type,u),l=o.context,"object"==typeof(s=n.contextType)&&null!==s?s=ri(s):s=ha(t,s=ma(n)?da:fa.current),(f="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(u!==r||l!==s)&&yi(t,o,r,s),ai=!1,l=t.memoizedState,o.state=l,ci(t,r,o,a),p=t.memoizedState,u!==r||l!==p||pa.current||ai?("function"==typeof c&&(hi(t,n,c,r),p=t.memoizedState),(c=ai||gi(t,n,u,r,l,p,s))?(f||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,p,s),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,p,s)),"function"==typeof o.componentDidUpdate&&(t.effectTag|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof o.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof o.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),o.props=r,o.state=p,o.context=s,r=c):("function"!=typeof o.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof o.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return Fo(e,t,n,r,i,a)}function Fo(e,t,n,r,a,i){zo(e,t);var o=0!=(64&t.effectTag);if(!r&&!o)return a&&xa(t,n,!1),Qo(e,t,i);r=t.stateNode,To.current=t;var u=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&o?(t.child=Ei(t,e.child,null,i),t.child=Ei(t,null,u,i)):Po(e,t,u,i),t.memoizedState=r.state,a&&xa(t,n,!0),t.child}function jo(e){var t=e.stateNode;t.pendingContext?va(0,t.pendingContext,t.pendingContext!==t.context):t.context&&va(0,t.context,!1),Pi(e,t.containerInfo)}var Vo,Uo,qo,Bo={dehydrated:null,retryTime:0};function $o(e,t,n){var r,a=t.mode,i=t.pendingProps,o=zi.current,u=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&o)&&(null===e||null!==e.memoizedState)),r?(u=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(o|=1),sa(zi,1&o),null===e){if(void 0!==i.fallback&&No(t),u){if(u=i.fallback,(i=_l(null,a,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=_l(u,a,n,null)).return=t,i.sibling=n,t.memoizedState=Bo,t.child=i,n}return a=i.children,t.memoizedState=null,t.child=Ni(t,null,a,n)}if(null!==e.memoizedState){if(a=(e=e.child).sibling,u){if(i=i.fallback,(n=Ml(e,e.pendingProps)).return=t,0==(2&t.mode)&&(u=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=u;null!==u;)u.return=n,u=u.sibling;return(a=Ml(a,i)).return=t,n.sibling=a,n.childExpirationTime=0,t.memoizedState=Bo,t.child=n,a}return n=Ei(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,u){if(u=i.fallback,(i=_l(null,a,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=_l(u,a,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Bo,t.child=i,n}return t.memoizedState=null,t.child=Ei(t,e,i.children,n)}function Yo(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ti(e.return,t)}function Ho(e,t,n,r,a,i){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:a,lastEffect:i}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailExpiration=0,o.tailMode=a,o.lastEffect=i)}function Wo(e,t,n){var r=t.pendingProps,a=r.revealOrder,i=r.tail;if(Po(e,t,r.children,n),0!=(2&(r=zi.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yo(e,n);else if(19===e.tag)Yo(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(sa(zi,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Li(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Ho(t,!1,a,n,i,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Li(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Ho(t,!0,n,null,i,t.lastEffect);break;case"together":Ho(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Qo(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&ol(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Ml(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ml(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ko(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Go(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ma(t.type)&&ga(),null;case 3:return Di(),la(pa),la(fa),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!ko(t)||(t.effectTag|=4),null;case 5:Ii(t),n=Ci(Ti.current);var i=t.type;if(null!==e&&null!=t.stateNode)Uo(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(o(166));return null}if(e=Ci(ki.current),ko(t)){r=t.stateNode,i=t.type;var u=t.memoizedProps;switch(r[En]=t,r[Nn]=u,i){case"iframe":case"object":case"embed":Wt("load",r);break;case"video":case"audio":for(e=0;e<Ge.length;e++)Wt(Ge[e],r);break;case"source":Wt("error",r);break;case"img":case"image":case"link":Wt("error",r),Wt("load",r);break;case"form":Wt("reset",r),Wt("submit",r);break;case"details":Wt("toggle",r);break;case"input":Ae(r,u),Wt("invalid",r),ln(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!u.multiple},Wt("invalid",r),ln(n,"onChange");break;case"textarea":Pe(r,u),Wt("invalid",r),ln(n,"onChange")}for(var l in an(i,u),e=null,u)if(u.hasOwnProperty(l)){var s=u[l];"children"===l?"string"==typeof s?r.textContent!==s&&(e=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(e=["children",""+s]):E.hasOwnProperty(l)&&null!=s&&ln(n,l)}switch(i){case"input":xe(r),Me(r,u,!0);break;case"textarea":xe(r),Oe(r);break;case"select":case"option":break;default:"function"==typeof u.onClick&&(r.onclick=sn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(l=9===n.nodeType?n:n.ownerDocument,e===un&&(e=Le(i)),e===un?"script"===i?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(i,{is:r.is}):(e=l.createElement(i),"select"===i&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,i),e[En]=t,e[Nn]=r,Vo(e,t),t.stateNode=e,l=on(i,r),i){case"iframe":case"object":case"embed":Wt("load",e),s=r;break;case"video":case"audio":for(s=0;s<Ge.length;s++)Wt(Ge[s],e);s=r;break;case"source":Wt("error",e),s=r;break;case"img":case"image":case"link":Wt("error",e),Wt("load",e),s=r;break;case"form":Wt("reset",e),Wt("submit",e),s=r;break;case"details":Wt("toggle",e),s=r;break;case"input":Ae(e,r),s=we(e,r),Wt("invalid",e),ln(n,"onChange");break;case"option":s=_e(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},s=a({},r,{value:void 0}),Wt("invalid",e),ln(n,"onChange");break;case"textarea":Pe(e,r),s=Ce(e,r),Wt("invalid",e),ln(n,"onChange");break;default:s=r}an(i,s);var c=s;for(u in c)if(c.hasOwnProperty(u)){var f=c[u];"style"===u?nn(e,f):"dangerouslySetInnerHTML"===u?null!=(f=f?f.__html:void 0)&&je(e,f):"children"===u?"string"==typeof f?("textarea"!==i||""!==f)&&Ve(e,f):"number"==typeof f&&Ve(e,""+f):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(E.hasOwnProperty(u)?null!=f&&ln(n,u):null!=f&&X(e,u,f,l))}switch(i){case"input":xe(e),Me(e,r,!1);break;case"textarea":xe(e),Oe(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ye(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Te(e,!!r.multiple,n,!1):null!=r.defaultValue&&Te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof s.onClick&&(e.onclick=sn)}vn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)qo(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));n=Ci(Ti.current),Ci(ki.current),ko(t)?(n=t.stateNode,r=t.memoizedProps,n[En]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[En]=t,t.stateNode=n)}return null;case 13:return la(zi),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&ko(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(u=t.firstEffect)?(t.firstEffect=i,i.nextEffect=u):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&zi.current)?ku===xu&&(ku=Su):(ku!==xu&&ku!==Su||(ku=wu),0!==Du&&null!==Eu&&(Ol(Eu,Mu),Il(Eu,Du)))),(n||r)&&(t.effectTag|=4),null);case 4:return Di(),null;case 10:return ei(t),null;case 17:return ma(t.type)&&ga(),null;case 19:if(la(zi),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(u=r.rendering)){if(i)Ko(r,!1);else if(ku!==xu||null!==e&&0!=(64&e.effectTag))for(u=t.child;null!==u;){if(null!==(e=Li(u))){for(t.effectTag|=64,Ko(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)u=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=u,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,u=e.dependencies,i.dependencies=null===u?null:{expirationTime:u.expirationTime,firstContext:u.firstContext,responders:u.responders}),r=r.sibling;return sa(zi,1&zi.current|2),t.child}u=u.sibling}}else{if(!i)if(null!==(e=Li(u))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Ko(r,!0),null===r.tail&&"hidden"===r.tailMode&&!u.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*ja()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,Ko(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=r.last)?n.sibling=u:t.child=u,r.last=u)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=ja()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=ja(),n.sibling=null,t=zi.current,sa(zi,i?1&t|2:1&t),n):null}throw Error(o(156,t.tag))}function Xo(e){switch(e.tag){case 1:ma(e.type)&&ga();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Di(),la(pa),la(fa),0!=(64&(t=e.effectTag)))throw Error(o(285));return e.effectTag=-4097&t|64,e;case 5:return Ii(e),null;case 13:return la(zi),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return la(zi),null;case 4:return Di(),null;case 10:return ei(e),null;default:return null}}function Zo(e,t){return{value:e,source:t,stack:ve(t)}}Vo=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Uo=function(e,t,n,r,i){var o=e.memoizedProps;if(o!==r){var u,l,s=t.stateNode;switch(Ci(ki.current),e=null,n){case"input":o=we(s,o),r=we(s,r),e=[];break;case"option":o=_e(s,o),r=_e(s,r),e=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),e=[];break;case"textarea":o=Ce(s,o),r=Ce(s,r),e=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(s.onclick=sn)}for(u in an(n,r),n=null,o)if(!r.hasOwnProperty(u)&&o.hasOwnProperty(u)&&null!=o[u])if("style"===u)for(l in s=o[u])s.hasOwnProperty(l)&&(n||(n={}),n[l]="");else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(E.hasOwnProperty(u)?e||(e=[]):(e=e||[]).push(u,null));for(u in r){var c=r[u];if(s=null!=o?o[u]:void 0,r.hasOwnProperty(u)&&c!==s&&(null!=c||null!=s))if("style"===u)if(s){for(l in s)!s.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in c)c.hasOwnProperty(l)&&s[l]!==c[l]&&(n||(n={}),n[l]=c[l])}else n||(e||(e=[]),e.push(u,n)),n=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(u,c)):"children"===u?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(E.hasOwnProperty(u)?(null!=c&&ln(i,u),e||s===c||(e=[])):(e=e||[]).push(u,c))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},qo=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Jo="function"==typeof WeakSet?WeakSet:Set;function eu(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ve(n)),null!==n&&ge(n.type),t=t.value,null!==e&&1===e.tag&&ge(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tu(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){yl(e,t)}else t.current=null}function nu(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Qa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(o(163))}function ru(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function au(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function iu(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void au(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Qa(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&fi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&vn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Lt(n)))));case 19:case 17:case 20:case 21:return}throw Error(o(163))}function ou(e,t,n){switch("function"==typeof wl&&wl(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;qa(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var a=t;try{n()}catch(e){yl(a,e)}}e=e.next}while(e!==r)}))}break;case 1:tu(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){yl(e,t)}}(t,n);break;case 5:tu(t);break;case 4:cu(e,t,n)}}function uu(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&uu(t)}function lu(e){return 5===e.tag||3===e.tag||4===e.tag}function su(e){e:{for(var t=e.return;null!==t;){if(lu(t)){var n=t;break e}t=t.return}throw Error(o(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(o(161))}16&n.effectTag&&(Ve(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||lu(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var a=t.tag,i=5===a||6===a;if(i)t=i?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=sn));else if(4!==a&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var a=t.tag,i=5===a||6===a;if(i)t=i?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==a&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function cu(e,t,n){for(var r,a,i=t,u=!1;;){if(!u){u=i.return;e:for(;;){if(null===u)throw Error(o(160));switch(r=u.stateNode,u.tag){case 5:a=!1;break e;case 3:case 4:r=r.containerInfo,a=!0;break e}u=u.return}u=!0}if(5===i.tag||6===i.tag){e:for(var l=e,s=i,c=n,f=s;;)if(ou(l,f,c),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===s)break e;for(;null===f.sibling;){if(null===f.return||f.return===s)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}a?(l=r,s=i.stateNode,8===l.nodeType?l.parentNode.removeChild(s):l.removeChild(s)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,a=!0,i.child.return=i,i=i.child;continue}}else if(ou(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(u=!1)}i.sibling.return=i.return,i=i.sibling}}function fu(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ru(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,a=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Nn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Ee(n,r),on(e,a),t=on(e,r),a=0;a<i.length;a+=2){var u=i[a],l=i[a+1];"style"===u?nn(n,l):"dangerouslySetInnerHTML"===u?je(n,l):"children"===u?Ve(n,l):X(n,u,l,t)}switch(e){case"input":Ne(n,r);break;case"textarea":De(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Te(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Te(n,!!r.multiple,r.defaultValue,!0):Te(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(o(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Lt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Iu=ja()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,a=null!=(a=e.memoizedProps.style)&&a.hasOwnProperty("display")?a.display:null,i.style.display=tn("display",a));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void pu(t);case 19:return void pu(t);case 17:return}throw Error(o(163))}function pu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Jo),t.forEach((function(t){var r=xl.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var du="function"==typeof WeakMap?WeakMap:Map;function hu(e,t,n){(n=ui(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Lu||(Lu=!0,Ru=r),eu(e,t)},n}function mu(e,t,n){(n=ui(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return eu(e,t),r(a)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Fu?Fu=new Set([this]):Fu.add(this),eu(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var gu,vu=Math.ceil,yu=G.ReactCurrentDispatcher,bu=G.ReactCurrentOwner,xu=0,Su=3,wu=4,Au=0,Eu=null,Nu=null,Mu=0,ku=xu,_u=null,Tu=1073741823,Cu=1073741823,Pu=null,Du=0,Ou=!1,Iu=0,zu=null,Lu=!1,Ru=null,Fu=null,ju=!1,Vu=null,Uu=90,qu=null,Bu=0,$u=null,Yu=0;function Hu(){return 0!=(48&Au)?1073741821-(ja()/10|0):0!==Yu?Yu:Yu=1073741821-(ja()/10|0)}function Wu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Va();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&Au))return Mu;if(null!==n)e=Wa(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Wa(e,150,100);break;case 97:case 96:e=Wa(e,5e3,250);break;case 95:e=2;break;default:throw Error(o(326))}return null!==Eu&&e===Mu&&--e,e}function Qu(e,t){if(50<Bu)throw Bu=0,$u=null,Error(o(185));if(null!==(e=Ku(e,t))){var n=Va();1073741823===t?0!=(8&Au)&&0==(48&Au)?Ju(e):(Xu(e),0===Au&&Ya()):Xu(e),0==(4&Au)||98!==n&&99!==n||(null===qu?qu=new Map([[e,t]]):(void 0===(n=qu.get(e))||n>t)&&qu.set(e,t))}}function Ku(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,a=null;if(null===r&&3===e.tag)a=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){a=r.stateNode;break}r=r.return}return null!==a&&(Eu===a&&(ol(t),ku===wu&&Ol(a,Mu)),Il(a,t)),a}function Gu(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Dl(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Xu(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=$a(Ju.bind(null,e));else{var t=Gu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Hu();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var a=e.callbackPriority;if(e.callbackExpirationTime===t&&a>=r)return;n!==Da&&Aa(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?$a(Ju.bind(null,e)):Ba(r,Zu.bind(null,e),{timeout:10*(1073741821-t)-ja()}),e.callbackNode=t}}}function Zu(e,t){if(Yu=0,t)return zl(e,t=Hu()),Xu(e),null;var n=Gu(e);if(0!==n){if(t=e.callbackNode,0!=(48&Au))throw Error(o(327));if(ml(),e===Eu&&n===Mu||nl(e,n),null!==Nu){var r=Au;Au|=16;for(var a=al();;)try{ll();break}catch(t){rl(e,t)}if(Ja(),Au=r,yu.current=a,1===ku)throw t=_u,nl(e,n),Ol(e,n),Xu(e),t;if(null===Nu)switch(a=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=ku,Eu=null,r){case xu:case 1:throw Error(o(345));case 2:zl(e,2<n?2:n);break;case Su:if(Ol(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fl(a)),1073741823===Tu&&10<(a=Iu+500-ja())){if(Ou){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,nl(e,n);break}}if(0!==(i=Gu(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=bn(pl.bind(null,e),a);break}pl(e);break;case wu:if(Ol(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fl(a)),Ou&&(0===(a=e.lastPingedTime)||a>=n)){e.lastPingedTime=n,nl(e,n);break}if(0!==(a=Gu(e))&&a!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Cu?r=10*(1073741821-Cu)-ja():1073741823===Tu?r=0:(r=10*(1073741821-Tu)-5e3,0>(r=(a=ja())-r)&&(r=0),(n=10*(1073741821-n)-a)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*vu(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=bn(pl.bind(null,e),r);break}pl(e);break;case 5:if(1073741823!==Tu&&null!==Pu){i=Tu;var u=Pu;if(0>=(r=0|u.busyMinDurationMs)?r=0:(a=0|u.busyDelayMs,r=(i=ja()-(10*(1073741821-i)-(0|u.timeoutMs||5e3)))<=a?0:a+r-i),10<r){Ol(e,n),e.timeoutHandle=bn(pl.bind(null,e),r);break}}pl(e);break;default:throw Error(o(329))}if(Xu(e),e.callbackNode===t)return Zu.bind(null,e)}}return null}function Ju(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&Au))throw Error(o(327));if(ml(),e===Eu&&t===Mu||nl(e,t),null!==Nu){var n=Au;Au|=16;for(var r=al();;)try{ul();break}catch(t){rl(e,t)}if(Ja(),Au=n,yu.current=r,1===ku)throw n=_u,nl(e,t),Ol(e,t),Xu(e),n;if(null!==Nu)throw Error(o(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Eu=null,pl(e),Xu(e)}return null}function el(e,t){var n=Au;Au|=1;try{return e(t)}finally{0===(Au=n)&&Ya()}}function tl(e,t){var n=Au;Au&=-2,Au|=8;try{return e(t)}finally{0===(Au=n)&&Ya()}}function nl(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,xn(n)),null!==Nu)for(n=Nu.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ga();break;case 3:Di(),la(pa),la(fa);break;case 5:Ii(r);break;case 4:Di();break;case 13:case 19:la(zi);break;case 10:ei(r)}n=n.return}Eu=e,Nu=Ml(e.current,null),Mu=t,ku=xu,_u=null,Cu=Tu=1073741823,Pu=null,Du=0,Ou=!1}function rl(e,t){for(;;){try{if(Ja(),Fi.current=go,$i)for(var n=Ui.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Vi=0,Bi=qi=Ui=null,$i=!1,null===Nu||null===Nu.return)return ku=1,_u=t,Nu=null;e:{var a=e,i=Nu.return,o=Nu,u=t;if(t=Mu,o.effectTag|=2048,o.firstEffect=o.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var l=u;if(0==(2&o.mode)){var s=o.alternate;s?(o.updateQueue=s.updateQueue,o.memoizedState=s.memoizedState,o.expirationTime=s.expirationTime):(o.updateQueue=null,o.memoizedState=null)}var c=0!=(1&zi.current),f=i;do{var p;if(p=13===f.tag){var d=f.memoizedState;if(null!==d)p=null!==d.dehydrated;else{var h=f.memoizedProps;p=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!c)}}if(p){var m=f.updateQueue;if(null===m){var g=new Set;g.add(l),f.updateQueue=g}else m.add(l);if(0==(2&f.mode)){if(f.effectTag|=64,o.effectTag&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var v=ui(1073741823,null);v.tag=2,li(o,v)}o.expirationTime=1073741823;break e}u=void 0,o=t;var y=a.pingCache;if(null===y?(y=a.pingCache=new du,u=new Set,y.set(l,u)):void 0===(u=y.get(l))&&(u=new Set,y.set(l,u)),!u.has(o)){u.add(o);var b=bl.bind(null,a,l,o);l.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);u=Error((ge(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ve(o))}5!==ku&&(ku=2),u=Zo(u,o),f=i;do{switch(f.tag){case 3:l=u,f.effectTag|=4096,f.expirationTime=t,si(f,hu(f,l,t));break e;case 1:l=u;var x=f.type,S=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof x.getDerivedStateFromError||null!==S&&"function"==typeof S.componentDidCatch&&(null===Fu||!Fu.has(S)))){f.effectTag|=4096,f.expirationTime=t,si(f,mu(f,l,t));break e}}f=f.return}while(null!==f)}Nu=cl(Nu)}catch(e){t=e;continue}break}}function al(){var e=yu.current;return yu.current=go,null===e?go:e}function il(e,t){e<Tu&&2<e&&(Tu=e),null!==t&&e<Cu&&2<e&&(Cu=e,Pu=t)}function ol(e){e>Du&&(Du=e)}function ul(){for(;null!==Nu;)Nu=sl(Nu)}function ll(){for(;null!==Nu&&!Oa();)Nu=sl(Nu)}function sl(e){var t=gu(e.alternate,e,Mu);return e.memoizedProps=e.pendingProps,null===t&&(t=cl(e)),bu.current=null,t}function cl(e){Nu=e;do{var t=Nu.alternate;if(e=Nu.return,0==(2048&Nu.effectTag)){if(t=Go(t,Nu,Mu),1===Mu||1!==Nu.childExpirationTime){for(var n=0,r=Nu.child;null!==r;){var a=r.expirationTime,i=r.childExpirationTime;a>n&&(n=a),i>n&&(n=i),r=r.sibling}Nu.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Nu.firstEffect),null!==Nu.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Nu.firstEffect),e.lastEffect=Nu.lastEffect),1<Nu.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Nu:e.firstEffect=Nu,e.lastEffect=Nu))}else{if(null!==(t=Xo(Nu)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Nu.sibling))return t;Nu=e}while(null!==Nu);return ku===xu&&(ku=5),null}function fl(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function pl(e){var t=Va();return qa(99,dl.bind(null,e,t)),null}function dl(e,t){do{ml()}while(null!==Vu);if(0!=(48&Au))throw Error(o(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var a=fl(n);if(e.firstPendingTime=a,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Eu&&(Nu=Eu=null,Mu=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,a=n.firstEffect):a=n:a=n.firstEffect,null!==a){var i=Au;Au|=32,bu.current=null,mn=Ht;var u=dn();if(hn(u)){if("selectionStart"in u)var l={start:u.selectionStart,end:u.selectionEnd};else e:{var s=(l=(l=u.ownerDocument)&&l.defaultView||window).getSelection&&l.getSelection();if(s&&0!==s.rangeCount){l=s.anchorNode;var c=s.anchorOffset,f=s.focusNode;s=s.focusOffset;try{l.nodeType,f.nodeType}catch(e){l=null;break e}var p=0,d=-1,h=-1,m=0,g=0,v=u,y=null;t:for(;;){for(var b;v!==l||0!==c&&3!==v.nodeType||(d=p+c),v!==f||0!==s&&3!==v.nodeType||(h=p+s),3===v.nodeType&&(p+=v.nodeValue.length),null!==(b=v.firstChild);)y=v,v=b;for(;;){if(v===u)break t;if(y===l&&++m===c&&(d=p),y===f&&++g===s&&(h=p),null!==(b=v.nextSibling))break;y=(v=y).parentNode}v=b}l=-1===d||-1===h?null:{start:d,end:h}}else l=null}l=l||{start:0,end:0}}else l=null;gn={activeElementDetached:null,focusedElem:u,selectionRange:l},Ht=!1,zu=a;do{try{hl()}catch(e){if(null===zu)throw Error(o(330));yl(zu,e),zu=zu.nextEffect}}while(null!==zu);zu=a;do{try{for(u=e,l=t;null!==zu;){var x=zu.effectTag;if(16&x&&Ve(zu.stateNode,""),128&x){var S=zu.alternate;if(null!==S){var w=S.ref;null!==w&&("function"==typeof w?w(null):w.current=null)}}switch(1038&x){case 2:su(zu),zu.effectTag&=-3;break;case 6:su(zu),zu.effectTag&=-3,fu(zu.alternate,zu);break;case 1024:zu.effectTag&=-1025;break;case 1028:zu.effectTag&=-1025,fu(zu.alternate,zu);break;case 4:fu(zu.alternate,zu);break;case 8:cu(u,c=zu,l),uu(c)}zu=zu.nextEffect}}catch(e){if(null===zu)throw Error(o(330));yl(zu,e),zu=zu.nextEffect}}while(null!==zu);if(w=gn,S=dn(),x=w.focusedElem,l=w.selectionRange,S!==x&&x&&x.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(x.ownerDocument.documentElement,x)){null!==l&&hn(x)&&(S=l.start,void 0===(w=l.end)&&(w=S),"selectionStart"in x?(x.selectionStart=S,x.selectionEnd=Math.min(w,x.value.length)):(w=(S=x.ownerDocument||document)&&S.defaultView||window).getSelection&&(w=w.getSelection(),c=x.textContent.length,u=Math.min(l.start,c),l=void 0===l.end?u:Math.min(l.end,c),!w.extend&&u>l&&(c=l,l=u,u=c),c=pn(x,u),f=pn(x,l),c&&f&&(1!==w.rangeCount||w.anchorNode!==c.node||w.anchorOffset!==c.offset||w.focusNode!==f.node||w.focusOffset!==f.offset)&&((S=S.createRange()).setStart(c.node,c.offset),w.removeAllRanges(),u>l?(w.addRange(S),w.extend(f.node,f.offset)):(S.setEnd(f.node,f.offset),w.addRange(S))))),S=[];for(w=x;w=w.parentNode;)1===w.nodeType&&S.push({element:w,left:w.scrollLeft,top:w.scrollTop});for("function"==typeof x.focus&&x.focus(),x=0;x<S.length;x++)(w=S[x]).element.scrollLeft=w.left,w.element.scrollTop=w.top}Ht=!!mn,gn=mn=null,e.current=n,zu=a;do{try{for(x=e;null!==zu;){var A=zu.effectTag;if(36&A&&iu(x,zu.alternate,zu),128&A){S=void 0;var E=zu.ref;if(null!==E){var N=zu.stateNode;switch(zu.tag){case 5:S=N;break;default:S=N}"function"==typeof E?E(S):E.current=S}}zu=zu.nextEffect}}catch(e){if(null===zu)throw Error(o(330));yl(zu,e),zu=zu.nextEffect}}while(null!==zu);zu=null,Ia(),Au=i}else e.current=n;if(ju)ju=!1,Vu=e,Uu=t;else for(zu=a;null!==zu;)t=zu.nextEffect,zu.nextEffect=null,zu=t;if(0===(t=e.firstPendingTime)&&(Fu=null),1073741823===t?e===$u?Bu++:(Bu=0,$u=e):Bu=0,"function"==typeof Sl&&Sl(n.stateNode,r),Xu(e),Lu)throw Lu=!1,e=Ru,Ru=null,e;return 0!=(8&Au)||Ya(),null}function hl(){for(;null!==zu;){var e=zu.effectTag;0!=(256&e)&&nu(zu.alternate,zu),0==(512&e)||ju||(ju=!0,Ba(97,(function(){return ml(),null}))),zu=zu.nextEffect}}function ml(){if(90!==Uu){var e=97<Uu?97:Uu;return Uu=90,qa(e,gl)}}function gl(){if(null===Vu)return!1;var e=Vu;if(Vu=null,0!=(48&Au))throw Error(o(331));var t=Au;for(Au|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ru(5,n),au(5,n)}}catch(t){if(null===e)throw Error(o(330));yl(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Au=t,Ya(),!0}function vl(e,t,n){li(e,t=hu(e,t=Zo(n,t),1073741823)),null!==(e=Ku(e,1073741823))&&Xu(e)}function yl(e,t){if(3===e.tag)vl(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){vl(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Fu||!Fu.has(r))){li(n,e=mu(n,e=Zo(t,e),1073741823)),null!==(n=Ku(n,1073741823))&&Xu(n);break}}n=n.return}}function bl(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Eu===e&&Mu===n?ku===wu||ku===Su&&1073741823===Tu&&ja()-Iu<500?nl(e,Mu):Ou=!0:Dl(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Xu(e)))}function xl(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Wu(t=Hu(),e,null)),null!==(e=Ku(e,t))&&Xu(e)}gu=function(e,t,n){var r=t.expirationTime;if(null!==e){var a=t.pendingProps;if(e.memoizedProps!==a||pa.current)Co=!0;else{if(r<n){switch(Co=!1,t.tag){case 3:jo(t),_o();break;case 5:if(Oi(t),4&t.mode&&1!==n&&a.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:ma(t.type)&&ba(t);break;case 4:Pi(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,a=t.type._context,sa(Ka,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?$o(e,t,n):(sa(zi,1&zi.current),null!==(t=Qo(e,t,n))?t.sibling:null);sa(zi,1&zi.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Wo(e,t,n);t.effectTag|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null),sa(zi,zi.current),!r)return null}return Qo(e,t,n)}Co=!1}}else Co=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,a=ha(t,fa.current),ni(t,n),a=Wi(null,t,r,e,a,n),t.effectTag|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ma(r)){var i=!0;ba(t)}else i=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ii(t);var u=r.getDerivedStateFromProps;"function"==typeof u&&hi(t,r,u,e),a.updater=mi,t.stateNode=a,a._reactInternalFiber=t,bi(t,r,e,n),t=Fo(null,t,r,!0,i,n)}else t.tag=0,Po(null,t,a,n),t=t.child;return t;case 16:e:{if(a=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(a),1!==a._status)throw a._result;switch(a=a._result,t.type=a,i=t.tag=function(e){if("function"==typeof e)return Nl(e)?1:0;if(null!=e){if((e=e.$$typeof)===le)return 11;if(e===fe)return 14}return 2}(a),e=Qa(a,e),i){case 0:t=Lo(null,t,a,e,n);break e;case 1:t=Ro(null,t,a,e,n);break e;case 11:t=Do(null,t,a,e,n);break e;case 14:t=Oo(null,t,a,Qa(a.type,e),r,n);break e}throw Error(o(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Lo(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 1:return r=t.type,a=t.pendingProps,Ro(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 3:if(jo(t),r=t.updateQueue,null===e||null===r)throw Error(o(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,oi(e,t),ci(t,r,null,n),(r=t.memoizedState.element)===a)_o(),t=Qo(e,t,n);else{if((a=t.stateNode.hydrate)&&(So=Sn(t.stateNode.containerInfo.firstChild),xo=t,a=wo=!0),a)for(n=Ni(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Po(e,t,r,n),_o();t=t.child}return t;case 5:return Oi(t),null===e&&No(t),r=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,u=a.children,yn(r,a)?u=null:null!==i&&yn(r,i)&&(t.effectTag|=16),zo(e,t),4&t.mode&&1!==n&&a.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Po(e,t,u,n),t=t.child),t;case 6:return null===e&&No(t),null;case 13:return $o(e,t,n);case 4:return Pi(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ei(t,null,r,n):Po(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Do(e,t,r,a=t.elementType===r?a:Qa(r,a),n);case 7:return Po(e,t,t.pendingProps,n),t.child;case 8:case 12:return Po(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,u=t.memoizedProps,i=a.value;var l=t.type._context;if(sa(Ka,l._currentValue),l._currentValue=i,null!==u)if(l=u.value,0===(i=Rr(l,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,i):1073741823))){if(u.children===a.children&&!pa.current){t=Qo(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var s=l.dependencies;if(null!==s){u=l.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&i)){1===l.tag&&((c=ui(n,null)).tag=2,li(l,c)),l.expirationTime<n&&(l.expirationTime=n),null!==(c=l.alternate)&&c.expirationTime<n&&(c.expirationTime=n),ti(l.return,n),s.expirationTime<n&&(s.expirationTime=n);break}c=c.next}}else u=10===l.tag&&l.type===t.type?null:l.child;if(null!==u)u.return=l;else for(u=l;null!==u;){if(u===t){u=null;break}if(null!==(l=u.sibling)){l.return=u.return,u=l;break}u=u.return}l=u}Po(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(i=t.pendingProps).children,ni(t,n),r=r(a=ri(a,i.unstable_observedBits)),t.effectTag|=1,Po(e,t,r,n),t.child;case 14:return i=Qa(a=t.type,t.pendingProps),Oo(e,t,a,i=Qa(a.type,i),r,n);case 15:return Io(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Qa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,ma(r)?(e=!0,ba(t)):e=!1,ni(t,n),vi(t,r,a),bi(t,r,a,n),Fo(null,t,r,!0,e,n);case 19:return Wo(e,t,n)}throw Error(o(156,t.tag))};var Sl=null,wl=null;function Al(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function El(e,t,n,r){return new Al(e,t,n,r)}function Nl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ml(e,t){var n=e.alternate;return null===n?((n=El(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function kl(e,t,n,r,a,i){var u=2;if(r=e,"function"==typeof e)Nl(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case ne:return _l(n.children,a,i,t);case ue:u=8,a|=7;break;case re:u=8,a|=1;break;case ae:return(e=El(12,n,t,8|a)).elementType=ae,e.type=ae,e.expirationTime=i,e;case se:return(e=El(13,n,t,a)).type=se,e.elementType=se,e.expirationTime=i,e;case ce:return(e=El(19,n,t,a)).elementType=ce,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:u=10;break e;case oe:u=9;break e;case le:u=11;break e;case fe:u=14;break e;case pe:u=16,r=null;break e;case de:u=22;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=El(u,n,t,a)).elementType=e,t.type=r,t.expirationTime=i,t}function _l(e,t,n,r){return(e=El(7,e,r,t)).expirationTime=n,e}function Tl(e,t,n){return(e=El(6,e,null,t)).expirationTime=n,e}function Cl(e,t,n){return(t=El(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Pl(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Dl(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Ol(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Il(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function zl(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Ll(e,t,n,r){var a=t.current,i=Hu(),u=pi.suspense;i=Wu(i,a,u);e:if(n){t:{if(Je(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(o(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(ma(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(o(171))}if(1===n.tag){var s=n.type;if(ma(s)){n=ya(n,s,l);break e}}n=l}else n=ca;return null===t.context?t.context=n:t.pendingContext=n,(t=ui(i,u)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),li(a,t),Qu(a,i),i}function Rl(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fl(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function jl(e,t){Fl(e,t),(e=e.alternate)&&Fl(e,t)}function Vl(e,t,n){var r=new Pl(e,t,n=null!=n&&!0===n.hydrate),a=El(3,null,null,2===t?7:1===t?3:0);r.current=a,a.stateNode=r,ii(a),e[Mn]=r.current,n&&0!==t&&function(e,t){var n=Ze(t);Mt.forEach((function(e){ht(e,t,n)})),kt.forEach((function(e){ht(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Ul(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ql(e,t,n,r,a){var i=n._reactRootContainer;if(i){var o=i._internalRoot;if("function"==typeof a){var u=a;a=function(){var e=Rl(o);u.call(e)}}Ll(t,o,e,a)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Vl(e,0,t?{hydrate:!0}:void 0)}(n,r),o=i._internalRoot,"function"==typeof a){var l=a;a=function(){var e=Rl(o);l.call(e)}}tl((function(){Ll(t,o,e,a)}))}return Rl(o)}function Bl(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function $l(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ul(t))throw Error(o(200));return Bl(e,t,null,n)}Vl.prototype.render=function(e){Ll(e,this._internalRoot,null,null)},Vl.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ll(null,e,null,(function(){t[Mn]=null}))},mt=function(e){if(13===e.tag){var t=Wa(Hu(),150,100);Qu(e,t),jl(e,t)}},gt=function(e){13===e.tag&&(Qu(e,3),jl(e,3))},vt=function(e){if(13===e.tag){var t=Hu();Qu(e,t=Wu(t,e,null)),jl(e,t)}},_=function(e,t,n){switch(t){case"input":if(Ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=Cn(r);if(!a)throw Error(o(90));Se(r),Ne(r,a)}}}break;case"textarea":De(e,n);break;case"select":null!=(t=n.value)&&Te(e,!!n.multiple,t,!1)}},I=el,z=function(e,t,n,r,a){var i=Au;Au|=4;try{return qa(98,e.bind(null,t,n,r,a))}finally{0===(Au=i)&&Ya()}},L=function(){0==(49&Au)&&(function(){if(null!==qu){var e=qu;qu=null,e.forEach((function(e,t){zl(t,e),Xu(t)})),Ya()}}(),ml())},R=function(e,t){var n=Au;Au|=2;try{return e(t)}finally{0===(Au=n)&&Ya()}};var Yl,Hl,Wl={Events:[_n,Tn,Cn,M,A,Rn,function(e){at(e,Ln)},D,O,Xt,ut,ml,{current:!1}]};Hl=(Yl={findFiberByHostInstance:kn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Sl=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},wl=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(a({},Yl,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:G.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Hl?Hl(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Wl,t.createPortal=$l,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw Error(o(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&Au))throw Error(o(187));var n=Au;Au|=1;try{return qa(99,e.bind(null,t))}finally{Au=n,Ya()}},t.hydrate=function(e,t,n){if(!Ul(t))throw Error(o(200));return ql(null,e,t,!0,n)},t.render=function(e,t,n){if(!Ul(t))throw Error(o(200));return ql(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ul(e))throw Error(o(40));return!!e._reactRootContainer&&(tl((function(){ql(null,null,e,!1,(function(){e._reactRootContainer=null,e[Mn]=null}))})),!0)},t.unstable_batchedUpdates=el,t.unstable_createPortal=function(e,t){return $l(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Ul(n))throw Error(o(200));if(null==e||void 0===e._reactInternalFiber)throw Error(o(38));return ql(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(11)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,a,i,o,u;if("undefined"==typeof window||"function"!=typeof MessageChannel){var l=null,s=null,c=function(){if(null!==l)try{var e=t.unstable_now();l(!0,e),l=null}catch(e){throw setTimeout(c,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==l?setTimeout(r,0,e):(l=e,setTimeout(c,0))},a=function(e,t){s=setTimeout(e,t)},i=function(){clearTimeout(s)},o=function(){return!1},u=t.unstable_forceFrameRate=function(){}}else{var p=window.performance,d=window.Date,h=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var g=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof p&&"function"==typeof p.now)t.unstable_now=function(){return p.now()};else{var v=d.now();t.unstable_now=function(){return d.now()-v}}var y=!1,b=null,x=-1,S=5,w=0;o=function(){return t.unstable_now()>=w},u=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):S=0<e?Math.floor(1e3/e):5};var A=new MessageChannel,E=A.port2;A.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();w=e+S;try{b(!0,e)?E.postMessage(null):(y=!1,b=null)}catch(e){throw E.postMessage(null),e}}else y=!1},r=function(e){b=e,y||(y=!0,E.postMessage(null))},a=function(e,n){x=h((function(){e(t.unstable_now())}),n)},i=function(){m(x),x=-1}}function N(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<_(a,t)))break e;e[r]=t,e[n]=a,n=r}}function M(e){return void 0===(e=e[0])?null:e}function k(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var i=2*(r+1)-1,o=e[i],u=i+1,l=e[u];if(void 0!==o&&0>_(o,n))void 0!==l&&0>_(l,o)?(e[r]=l,e[u]=n,r=u):(e[r]=o,e[i]=n,r=i);else{if(!(void 0!==l&&0>_(l,n)))break e;e[r]=l,e[u]=n,r=u}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var T=[],C=[],P=1,D=null,O=3,I=!1,z=!1,L=!1;function R(e){for(var t=M(C);null!==t;){if(null===t.callback)k(C);else{if(!(t.startTime<=e))break;k(C),t.sortIndex=t.expirationTime,N(T,t)}t=M(C)}}function F(e){if(L=!1,R(e),!z)if(null!==M(T))z=!0,r(j);else{var t=M(C);null!==t&&a(F,t.startTime-e)}}function j(e,n){z=!1,L&&(L=!1,i()),I=!0;var r=O;try{for(R(n),D=M(T);null!==D&&(!(D.expirationTime>n)||e&&!o());){var u=D.callback;if(null!==u){D.callback=null,O=D.priorityLevel;var l=u(D.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?D.callback=l:D===M(T)&&k(T),R(n)}else k(T);D=M(T)}if(null!==D)var s=!0;else{var c=M(C);null!==c&&a(F,c.startTime-n),s=!1}return s}finally{D=null,O=r,I=!1}}function V(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var U=u;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){z||I||(z=!0,r(j))},t.unstable_getCurrentPriorityLevel=function(){return O},t.unstable_getFirstCallbackNode=function(){return M(T)},t.unstable_next=function(e){switch(O){case 1:case 2:case 3:var t=3;break;default:t=O}var n=O;O=t;try{return e()}finally{O=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=U,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=O;O=e;try{return t()}finally{O=n}},t.unstable_scheduleCallback=function(e,n,o){var u=t.unstable_now();if("object"==typeof o&&null!==o){var l=o.delay;l="number"==typeof l&&0<l?u+l:u,o="number"==typeof o.timeout?o.timeout:V(e)}else o=V(e),l=u;return e={id:P++,callback:n,priorityLevel:e,startTime:l,expirationTime:o=l+o,sortIndex:-1},l>u?(e.sortIndex=l,N(C,e),null===M(T)&&e===M(C)&&(L?i():L=!0,a(F,l-u))):(e.sortIndex=o,N(T,e),z||I||(z=!0,r(j))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();R(e);var n=M(T);return n!==D&&null!==D&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<D.expirationTime||o()},t.unstable_wrapCallback=function(e){var t=O;return function(){var n=O;O=t;try{return e.apply(this,arguments)}finally{O=n}}}},function(e,t,n){var r=n(13),a=n(23),i=n(24);e.exports=function(){var e=r(),t=a(),n={Element:e,defaultView:t,withFauxDOM:i(e),createElement:function(t){return new e(t)},createElementNS:function(e,t){return this.createElement(t)},compareDocumentPosition:function(){return 8}};return e.prototype.ownerDocument=n,n}},function(e,t,n){var r=n(0),a=n(14),i=n(15),o=n(3),u=n(19),l=n(20),s=n(21),c=n(4),f=n(22);e.exports=function(){function e(e,t){this.nodeName=e,this.parentNode=t,this.childNodes=[],this.eventListeners={},this.text="";var n=this,r=this.props={ref:function(e){n.component=e},style:{setProperty:function(e,t){r.style[f(e)]=t},getProperty:function(e){return r.style[f(e)]||""},getPropertyValue:function(e){return r.style.getProperty(e)},removeProperty:function(e){delete r.style[f(e)]}}};this.style=r.style}return e.ELEMENT_NODE=1,e.DOCUMENT_POSITION_DISCONNECTED=1,e.DOCUMENT_POSITION_PRECEDING=2,e.DOCUMENT_POSITION_FOLLOWING=4,e.DOCUMENT_POSITION_CONTAINS=8,e.DOCUMENT_POSITION_CONTAINED_BY=16,e.prototype.nodeType=1,e.prototype.eventNameMappings={blur:"onBlur",change:"onChange",click:"onClick",contextmenu:"onContextMenu",copy:"onCopy",cut:"onCut",doubleclick:"onDoubleClick",drag:"onDrag",dragend:"onDragEnd",dragenter:"onDragEnter",dragexit:"onDragExit",dragleave:"onDragLeave",dragover:"onDragOver",dragstart:"onDragStart",drop:"onDrop",error:"onError",focus:"onFocus",input:"onInput",keydown:"onKeyDown",keypress:"onKeyPress",keyup:"onKeyUp",load:"onLoad",mousedown:"onMouseDown",mouseenter:"onMouseEnter",mouseleave:"onMouseLeave",mousemove:"onMouseMove",mouseout:"onMouseOut",mouseover:"onMouseOver",mouseup:"onMouseUp",paste:"onPaste",scroll:"onScroll",submit:"onSubmit",touchcancel:"onTouchCancel",touchend:"onTouchEnd",touchmove:"onTouchMove",touchstart:"onTouchStart",wheel:"onWheel"},e.prototype.skipNameTransformationExpressions=[/^data-/,/^aria-/],e.prototype.attributeNameMappings={class:"className"},e.prototype.attributeToPropName=function(e){return this.skipNameTransformationExpressions.map((function(t){return t.test(e)})).some(Boolean)?e:this.attributeNameMappings[e]||o(e)},e.prototype.setAttribute=function(e,t){if("style"===e&&u(t)){var n=a.parse(t);for(var r in n)this.style.setProperty(r,n[r])}else this.props[this.attributeToPropName(e)]=t},e.prototype.getAttribute=function(e){return this.props[this.attributeToPropName(e)]},e.prototype.getAttributeNode=function(e){var t=this.getAttribute(e);if(!l(t))return{value:t,specified:!0}},e.prototype.removeAttribute=function(e){delete this.props[this.attributeToPropName(e)]},e.prototype.eventToPropName=function(e){return this.eventNameMappings[e]||e},e.prototype.addEventListener=function(e,t){var n=this.eventToPropName(e);this.eventListeners[n]=this.eventListeners[n]||[],this.eventListeners[n].push(t)},e.prototype.removeEventListener=function(e,t){var n=this.eventListeners[this.eventToPropName(e)];if(n){var r=n.indexOf(t);-1!==r&&n.splice(r,1)}},e.prototype.appendChild=function(t){return t instanceof e&&(t.parentNode=this),this.childNodes.push(t),t},e.prototype.insertBefore=function(e,t){var n=this.childNodes.indexOf(t);return e.parentNode=this,-1!==n?this.childNodes.splice(n,0,e):this.childNodes.push(e),e},e.prototype.removeChild=function(e){var t=this.childNodes.indexOf(e);this.childNodes.splice(t,1)},e.prototype.querySelector=function(){return this.querySelectorAll.apply(this,arguments)[0]||null},e.prototype.querySelectorAll=function(e){if(!e)throw new Error("Not enough arguments");return i(e,this)},e.prototype.getElementsByTagName=function(e){var t,n=this.children;if(0===n.length)return[];t="*"!==e?n.filter((function(t){return t.nodeName===e})):n;var r=n.map((function(t){return t.getElementsByTagName(e)}));return t.concat.apply(t,r)},e.prototype.getElementById=function(e){var t=this.children;if(0===t.length)return null;var n=t.filter((function(t){return t.getAttribute("id")===e}))[0];return n||(t.map((function(t){return t.getElementById(e)})).filter((function(e){return null!==e}))[0]||null)},e.prototype.getBoundingClientRect=function(){if(this.component)return this.component.getBoundingClientRect()},e.prototype.cloneNode=function(t){void 0===t&&(t=!0);var n,a=new e(this.nodeName,this.parentNode);for(n in this.nodeType&&(a.nodeType=this.nodeType),this.props)this.props.hasOwnProperty(n)&&"ref"!==n&&"style"!==n&&(a.props[n]=this.props[n]);for(n in this.style)this.style.hasOwnProperty(n)&&-1===["setProperty","getProperty","getPropertyValue","removeProperty"].indexOf(n)&&(a.style[n]=this.style[n]);return t&&(a.childNodes=this.childNodes.map((function(t){return t.nodeType?((t=t.cloneNode(!0))instanceof e&&(t.parentNode=a),t):r.cloneElement(t)}))),a},e.prototype.toReact=function(t){t=t||0;var n=s({},this.props);n.style=s({},n.style);var a=this;return l(n.key)&&(n.key="faux-dom-"+t),delete n.style.setProperty,delete n.style.getProperty,delete n.style.getPropertyValue,delete n.style.removeProperty,s(n,c(this.eventListeners,(function(e){return function(t){var n;t&&((n=t.nativeEvent).syntheticEvent=t),c(e,(function(e){e.call(a,n)}))}}))),r.createElement(this.nodeName,n,this.text||this.children.map((function(t,n){return t instanceof e?t.toReact(n):t})))},e.prototype.compareDocumentPosition=function(t){function n(e,t){for(;t.parentNode;)if((t=t.parentNode)===e)return!0;return!1}function r(e){for(;e.parentNode;)e=e.parentNode;return e}if(this===t)return 0;var a=r(this);if(a!==r(t))return e.DOCUMENT_POSITION_DISCONNECTED;var i,o,u=n(i=this,o=t)?e.DOCUMENT_POSITION_CONTAINED_BY+e.DOCUMENT_POSITION_FOLLOWING:!!n(o,i)&&e.DOCUMENT_POSITION_CONTAINS+e.DOCUMENT_POSITION_PRECEDING;if(u)return u;var l=function e(t,n,r){return t.reduce((function(t,a){return!1!==t?t:a===n?n:a===r?r:!!a.childNodes&&e(a.childNodes,n,r)}),!1)}([a],this,t);return l===this?e.DOCUMENT_POSITION_FOLLOWING:l===t?e.DOCUMENT_POSITION_PRECEDING:e.DOCUMENT_POSITION_DISCONNECTED},Object.defineProperties(e.prototype,{nextSibling:{get:function(){var e=this.parentNode.children,t=e.indexOf(this);return e[t+1]}},previousSibling:{get:function(){var e=this.parentNode.children,t=e.indexOf(this);return e[t-1]}},innerHTML:{get:function(){return this.text},set:function(e){this.text=e}},textContent:{get:function(){return this.text},set:function(e){this.text=e}},children:{get:function(){return this.childNodes.filter((function(e){return!e.nodeType||1===e.nodeType}))}}}),["setAttribute","getAttribute","getAttributeNode","removeAttribute","getElementsByTagName","getElementById"].forEach((function(t){var n=e.prototype[t];e.prototype[t+"NS"]=function(){return n.apply(this,Array.prototype.slice.call(arguments,1))}})),e}},function(e,t){function n(e,t){var n=(t=t||{}).preserveNumbers,r={};return function(e){var t,n=[],r=0,a=/url\([^\)]+$/,i="";for(;r<e.length;)-1===(t=e.indexOf(";",r))&&(t=e.length),i+=e.substring(r,t),a.test(i)?(i+=";",r=t+1):(n.push(i),i="",r=t+1);return n}(e).map((function(e){return e.trim()})).filter(Boolean).forEach((function(e){var t,a=e.indexOf(":"),i=e.substr(0,a).trim(),o=e.substr(a+1).trim();n&&(t=o,!isNaN(parseFloat(t))&&isFinite(t))&&(o=Number(o)),r[i]=o})),r}function r(e){return Object.keys(e).map((function(t){return t+":"+e[t]})).join(";")}e.exports.parse=n,e.exports.stringify=r,e.exports.normalize=function(e,t){return r(n(e,t))}},function(e,t,n){e.exports=n(16)},function(e,t,n){var r,a,i=n(17),o=n(18),u={},l=0,s={},c=function(e,t){return r?i.getSimpleAttr(e,t):i.attr(e,t)},f=i.hasSingleClass,p=i.isTag,d=/^(([+-]?(?:\d+)?)?n)?([+-]?\d+)?$/,h=/\\([\da-fA-F]{1,6}[\x20\t\r\n\f]?|.)/g,m=function(e,t){var n="0x"+t-65536;return isNaN(n)?t:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},g={"nth-child":function(e,t){var n=w(t),r=n.a,a=n.b;if(0===r&&0===a)return 0;var i=0,o=e.parentNode;if(o)for(var u,l,s=o.childNodes,c=0,f=s.length;c<f;c++)if(1===(u=s[c]).nodeType&&void 0!==(l=A(++i,r,a,u===e)))return l;return 0},"nth-last-child":function(e,t){var n=w(t),r=n.a,a=n.b;if(0===r&&0===a)return 0;var i=0,o=e.parentNode;if(o)for(var u,l,s=o.childNodes,c=s.length-1;c>=0;c--)if(1===(u=s[c]).nodeType&&void 0!==(l=A(++i,r,a,u===e)))return l;return 0},"nth-of-type":function(e,t){var n=w(t),r=n.a,a=n.b;if(0===r&&0===a)return 0;var i=0,o=e.parentNode;if(o)for(var u,l,s=o.childNodes,c=e.tagName,f=0,p=s.length;f<p;f++)if((u=s[f]).tagName===c&&void 0!==(l=A(++i,r,a,u===e)))return l;return 0},"nth-last-of-type":function(e,t){var n=w(t),r=n.a,a=n.b;if(0===r&&0===a)return 0;var i=0,o=e.parentNode;if(o)for(var u,l,s=o.childNodes,c=s.length,f=e.tagName,p=c-1;p>=0;p--)if((u=s[p]).tagName===f&&void 0!==(l=A(++i,r,a,u===e)))return l;return 0},lang:function(e,t){var n;t=x(t.toLowerCase());do{if(n=r?e.getAttribute("xml:lang")||e.getAttribute("lang"):e.lang)return(n=n.toLowerCase())===t||0===n.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1},not:function(e,t){return!a[t.t](e,t.value)}},v={empty:function(e){for(var t,n=e.childNodes,r=0,a=n.length-1;r<a;r++)if(1===(t=n[r].nodeType)||3===t||4===t||5===t)return 0;return 1},root:function(e){return 9===e.nodeType||e.ownerDocument&&e===e.ownerDocument.documentElement},"first-child":function(e){return g["nth-child"](e,1)},"last-child":function(e){return g["nth-last-child"](e,1)},"first-of-type":function(e){return g["nth-of-type"](e,1)},"last-of-type":function(e){return g["nth-last-of-type"](e,1)},"only-child":function(e){return v["first-child"](e)&&v["last-child"](e)},"only-of-type":function(e){return v["first-of-type"](e)&&v["last-of-type"](e)},focus:function(e){var t=e.ownerDocument;return t&&e===t.activeElement&&(!t.hasFocus||t.hasFocus())&&!!(e.type||e.href||e.tabIndex>=0)},target:function(e){var t=location.hash;return t&&t.slice(1)===c(e,"id")},enabled:function(e){return!e.disabled},disabled:function(e){return e.disabled},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&e.checked||"option"===t&&e.selected}},y={"~=":function(e,t){return!t||t.indexOf(" ")>-1?0:-1!==(" "+e+" ").indexOf(" "+t+" ")},"|=":function(e,t){return-1!==(" "+e).indexOf(" "+t+"-")},"^=":function(e,t){return t&&i.startsWith(e,t)},"$=":function(e,t){return t&&i.endsWith(e,t)},"*=":function(e,t){return t&&-1!==e.indexOf(t)},"=":function(e,t){return e===t}},b={">":{dir:"parentNode",immediate:1}," ":{dir:"parentNode"},"+":{dir:"previousSibling",immediate:1},"~":{dir:"previousSibling"}};function x(e){return e.replace(h,m)}function S(e,t){do{e=e[t]}while(e&&1!==e.nodeType);return e}function w(e){var t,n=0,r=0;return"number"==typeof e?r=e:"odd"===e?(n=2,r=1):"even"===e?(n=2,r=0):(t=e.replace(/\s/g,"").match(d))&&(t[1]?(n=parseInt(t[2],10),isNaN(n)&&(n="-"===t[2]?-1:1)):n=0,r=parseInt(t[3],10)||0),{a:n,b:r}}function A(e,t,n,r){if(0===t){if(e===n)return r}else if((e-n)/t>=0&&(e-n)%t==0&&r)return 1}function E(e,t){if(!t)return!0;if(!e)return!1;if(9===e.nodeType)return!1;var n,r,i=1,o=t.suffix;if("tag"===t.t&&(i&=a.tag(e,t.value)),i&&o)for(n=o.length,r=0;i&&r<n;r++){var u=o[r],l=u.t;a[l]&&(i&=a[l](e,u.value))}return i}function N(e,t){var n,r=t;do{if(!E(e,r))return null;if(!(r=r.prev))return!0;e=S(e,(n=b[r.nextCombinator]).dir)}while(e&&n.immediate);return e?{el:e,match:r}:null}function M(e,t){var n;return(n=function(e){var t;return r?(t=e.getAttribute("_ks_data_selector_id_"))||e.setAttribute("_ks_data_selector_id_",t=+new Date+"_"+ ++l):(t=e._ks_data_selector_id_)||(t=e._ks_data_selector_id_=+new Date+"_"+ ++l),t}(e)+"_"+(t.order||0))in s||(s[n]=function(e,t){var n=function(e,t){var n,r=1,a=e,i=t;do{if(!(r&=E(e,t)))return(n=b[t.nextCombinator]).immediate?{el:S(a,b[i.nextCombinator].dir),match:i}:{el:e&&S(e,n.dir),match:t};if(!(t=t&&t.prev))return!0;if(e=S(e,(n=b[t.nextCombinator]).dir),!n.immediate)return{el:e,match:t}}while(e);return{el:S(a,b[i.nextCombinator].dir),match:i}}(e,t);if(!0===n)return!0;for(e=n.el,t=n.match;e;){if(M(e,t))return!0;e=S(e,b[t.nextCombinator].dir)}return!1}(e,t)),s[n]}function k(e,t,n){u[e]||(u[e]=o.parse(e));var a,l,f,p,d=u[e],h=0,m=d.length,g=[];for(n&&(t=t||n[0].ownerDocument),a=t&&t.ownerDocument||"undefined"!=typeof document&&document,t&&9===t.nodeType&&!a&&(a=t),p=(f=t=t||a)&&(f.ownerDocument||f).documentElement,r=!!p&&"html"!==p.nodeName.toLowerCase();h<m;h++){s={};var v,y,b,x,S=(l=d[h]).suffix,w=n,A=null;if(!w){if(S&&!r)for(v=0,y=S.length;v<y;v++){var E=S[v];if("id"===E.t){A=E.value;break}}if(A){var k=!t.getElementById,_=i.contains(a,t),T=k?_?a.getElementById(A):null:t.getElementById(A);if(!T&&k||T&&c(T,"id")!==A){for(var C=i.getElementsByTagName("*",t),P=C.length,D=0;D<P;D++)if(T=C[D],c(T,"id")===A){w=[T];break}D===P&&(w=[])}else _&&T&&t!==a&&(T=i.contains(t,T)?T:null),w=T?[T]:[]}else w=i.getElementsByTagName(l.value||"*",t)}if(b=0,x=w.length)for(;b<x;b++){var O=w[b],I=N(O,l);(!0===I||I&&M(I.el,I.match))&&g.push(O)}}return m>1&&(g=i.unique(g)),g}a={tag:p,cls:f,id:function(e,t){return c(e,"id")===t},attrib:function(e,t){var n=t.ident;r||(n=n.toLowerCase());var a=c(e,n),i=t.match;if(!i&&void 0!==a)return 1;if(i){if(void 0===a)return 0;var o=y[i];if(o)return o(a+"",t.value+"")}return 0},pseudo:function(e,t){var n,r,a;if(r=t.fn){if(!(n=g[r]))throw new SyntaxError("Syntax error: not support pseudo: "+r);return n(e,t.param)}if(a=t.ident){if(!v[a])throw new SyntaxError("Syntax error: not support pseudo: "+a);return v[a](e)}return 0}},o.lexer.yy={trim:i.trim,unEscape:x,unEscapeStr:function(e){return this.unEscape(e.slice(1,-1))}},e.exports=k,k.parse=function(e){return o.parse(e)},k.matches=function(e,t){return k(e,null,t)},k.util=i,k.version="@VERSION@"},function(e,t){var n,r=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,a=/^(?:button|input|object|select|textarea)$/i,i=/^a(?:rea)?$/i,o=/:|^on/,u={},l={tabindex:{get:function(e){var t=e.getAttributeNode("tabindex");return t&&t.specified?parseInt(t.value,10):a.test(e.nodeName)||i.test(e.nodeName)&&e.href?0:void 0}}},s={get:function(e,t){return e[n[t]||t]?t.toLowerCase():void 0}},c={};l.style={get:function(e){return e.style.cssText}},n={hidefocus:"hideFocus",tabindex:"tabIndex",readonly:"readOnly",for:"htmlFor",class:"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"};var f="undefined"!=typeof navigator?navigator.userAgent:"",p="undefined"!=typeof document?document:{};function d(e,t){for(var n in t)e[n]=t[n]}var h=function(){var e,t,n;if((e=f.match(/MSIE ([^;]*)|Trident.*; rv(?:\s|:)?([0-9.]+)/))&&(t=e[1]||e[2]))return p.documentMode||(n=0,parseFloat(t.replace(/\./g,(function(){return 0==n++?".":""}))))}();(h&&h<8&&(l.style.set=function(e,t){e.style.cssText=t},d(c,{get:function(e,t){var n=e.getAttributeNode(t);return n&&(n.specified||n.nodeValue)?n.nodeValue:void 0}}),d(u,n),l.tabIndex=l.tabindex,function(e,t){for(var n=0,r=e.length;n<r&&!1!==t(e[n],n);n++);}(["href","src","width","height","colSpan","rowSpan"],(function(e){l[e]={get:function(t){var n=t.getAttribute(e,2);return null===n?void 0:n}}})),l.placeholder={get:function(e,t){return e[t]||c.get(e,t)}}),h)&&((l.href=l.href||{}).set=function(e,t,n){var r,a=e.childNodes,i=a.length,o=i>0;for(i-=1;i>=0;i--)3!==a[i].nodeType&&(o=0);o&&((r=e.ownerDocument.createElement("b")).style.display="none",e.appendChild(r)),e.setAttribute(n,""+t),r&&e.removeChild(r)});var m,g=/^[\s\xa0]+|[\s\xa0]+$/g,v=String.prototype.trim;if(m=function(e,t){return t.getElementsByTagName(e)},p.createElement){var y=p.createElement("div");y.appendChild(document.createComment("")),y.getElementsByTagName("*").length&&(m=function(e,t){var n=t.getElementsByTagName(e),r="*"===e;if(r||"number"!=typeof n.length){for(var a,i=[],o=0;a=n[o++];)r&&1!==a.nodeType||i.push(a);return i}return n})}var b="sourceIndex"in(p&&p.documentElement||{})?function(e,t){return e.sourceIndex-t.sourceIndex}:function(e,t){return e.compareDocumentPosition&&t.compareDocumentPosition?4&e.compareDocumentPosition(t)?-1:1:e.compareDocumentPosition?-1:1},x=e.exports={ie:h,unique:function(){var e,t=!0;function n(t,n){return t===n?(e=!0,0):b(t,n)}return[0,0].sort((function(){return t=!1,0})),function(r){if(e=t,r.sort(n),e)for(var a=1,i=r.length;a<i;)r[a]===r[a-1]?(r.splice(a,1),--i):a++;return r}}(),getElementsByTagName:m,getSimpleAttr:function(e,t){var n=e&&e.getAttributeNode(t);if(n&&n.specified)return"value"in n?n.value:n.nodeValue},contains:h?function(e,t){return 9===e.nodeType&&(e=e.documentElement),e===(t=t.parentNode)||!(!t||1!==t.nodeType)&&(e.contains&&e.contains(t))}:function(e,t){return!!(16&e.compareDocumentPosition(t))},isTag:function(e,t){return"*"===t||e.nodeName.toLowerCase()===t.toLowerCase()},hasSingleClass:function(e,t){var n=e&&x.getSimpleAttr(e,"class");return n&&(n=n.replace(/[\r\t\n]/g," "))&&(" "+n+" ").indexOf(" "+t+" ")>-1},startsWith:function(e,t){return 0===e.lastIndexOf(t,0)},endsWith:function(e,t){var n=e.length-t.length;return n>=0&&e.indexOf(t,n)===n},trim:v?function(e){return null==e?"":v.call(e)}:function(e){return null==e?"":(e+"").replace(g,"")},attr:function(e,t){var n,a;if(t=t.toLowerCase(),t=u[t]||t,n=r.test(t)?s:o.test(t)?c:l[t],e&&1===e.nodeType){if("form"===e.nodeName.toLowerCase()&&(n=c),n&&n.get)return n.get(e,t);if(""===(a=e.getAttribute(t))){var i=e.getAttributeNode(t);if(!i||!i.specified)return}return null===a?void 0:a}}}},function(e,t,n){var r=function(e){var t={},n=1,r=2,a=0,i=0,o=1,u=2;function l(e,t){for(var n in t)e[n]=t[n]}function s(e,t,n){if(e){var r,a,i,o=0;if(n=n||null,u=e,"[object Array]"!==Object.prototype.toString.call(u)){for(r in e)if(!1===t.call(n,e[r],r,e))break}else for(i=e.length,a=e[0];o<i&&!1!==t.call(n,a,o,e);a=e[++o]);}var u}var c=function(e){this.rules=[],l(this,e),this.resetInput(this.input)};c.prototype={resetInput:function(e){l(this,{input:e,matched:"",stateStack:[c.STATIC.INITIAL],match:"",text:"",firstLine:1,lineNumber:1,lastLine:1,firstColumn:1,lastColumn:1})},getCurrentRules:function(){var e=this.stateStack[this.stateStack.length-1],t=[];return this.mapState&&(e=this.mapState(e)),s(this.rules,(function(n){var r=n.state||n[3];r?function(e,t){for(var n=0,r=t.length;n<r;n++)if(t[n]===e)return!0;return!1}(e,r)&&t.push(n):e===c.STATIC.INITIAL&&t.push(n)})),t},pushState:function(e){this.stateStack.push(e)},popState:function(e){var t;for(e=e||1;e--;)t=this.stateStack.pop();return t},showDebugInfo:function(){var e=c.STATIC.DEBUG_CONTEXT_LIMIT,t=this.matched,n=this.match,r=this.input,a=((t=t.slice(0,t.length-n.length)).length>e?"...":"")+t.slice(0-e).replace(/\n/," "),i=n+r;return a+(i=i.slice(0,e)+(i.length>e?"...":""))+"\n"+new Array(a.length+1).join("-")+"^"},mapSymbol:function(e){return this.symbolMap[e]},mapReverseSymbol:function(e){var t,n=this.symbolMap,r=this.reverseSymbolMap;if(!r&&n)for(t in r=this.reverseSymbolMap={},n)r[n[t]]=t;return r?r[e]:e},lex:function(){var e,t,n,r,a,i=this.input,o=this.getCurrentRules();if(this.match=this.text="",!i)return this.mapSymbol(c.STATIC.END_TAG);for(e=0;e<o.length;e++){var u,s=(t=o[e]).regexp||t[1],f=t.token||t[0],p=t.action||t[2]||void 0;if(n=i.match(s))return(a=n[0].match(/\n.*/g))&&(this.lineNumber+=a.length),l(this,{firstLine:this.lastLine,lastLine:this.lineNumber+1,firstColumn:this.lastColumn,lastColumn:a?a[a.length-1].length-1:this.lastColumn+n[0].length}),u=this.match=n[0],this.matches=n,this.text=u,this.matched+=u,r=void 0===(r=p&&p.call(this))?f:this.mapSymbol(r),i=i.slice(u.length),this.input=i,r||this.lex()}}},c.STATIC={INITIAL:"I",DEBUG_CONTEXT_LIMIT:20,END_TAG:"$EOF"};var f=new c({rules:[["b",/^\[(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["c",/^(?:[\t\r\n\f\x20]*)\]/,function(){this.text=this.yy.trim(this.text)}],["d",/^(?:[\t\r\n\f\x20]*)~=(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["e",/^(?:[\t\r\n\f\x20]*)\|=(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["f",/^(?:[\t\r\n\f\x20]*)\^=(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["g",/^(?:[\t\r\n\f\x20]*)\$=(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["h",/^(?:[\t\r\n\f\x20]*)\*=(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["i",/^(?:[\t\r\n\f\x20]*)\=(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["j",/^(?:(?:[\w]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))(?:[\w\d-]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))*)\(/,function(){this.text=this.yy.trim(this.text).slice(0,-1),this.pushState("fn")}],["k",/^[^\)]*/,function(){this.popState()},["fn"]],["l",/^(?:[\t\r\n\f\x20]*)\)/,function(){this.text=this.yy.trim(this.text)}],["m",/^:not\((?:[\t\r\n\f\x20]*)/i,function(){this.text=this.yy.trim(this.text)}],["n",/^(?:(?:[\w]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))(?:[\w\d-]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))*)/,function(){this.text=this.yy.unEscape(this.text)}],["o",/^"(\\"|[^"])*"/,function(){this.text=this.yy.unEscapeStr(this.text)}],["o",/^'(\\'|[^'])*'/,function(){this.text=this.yy.unEscapeStr(this.text)}],["p",/^#(?:(?:[\w\d-]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))+)/,function(){this.text=this.yy.unEscape(this.text.slice(1))}],["q",/^\.(?:(?:[\w]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))(?:[\w\d-]|[^\x00-\xa0]|(?:\\[^\n\r\f0-9a-f]))*)/,function(){this.text=this.yy.unEscape(this.text.slice(1))}],["r",/^(?:[\t\r\n\f\x20]*),(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["s",/^::?/,0],["t",/^(?:[\t\r\n\f\x20]*)\+(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["u",/^(?:[\t\r\n\f\x20]*)>(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["v",/^(?:[\t\r\n\f\x20]*)~(?:[\t\r\n\f\x20]*)/,function(){this.text=this.yy.trim(this.text)}],["w",/^\*/,0],["x",/^(?:[\t\r\n\f\x20]+)/,0],["y",/^./,0]]});return t.lexer=f,f.symbolMap={$EOF:"a",LEFT_BRACKET:"b",RIGHT_BRACKET:"c",INCLUDES:"d",DASH_MATCH:"e",PREFIX_MATCH:"f",SUFFIX_MATCH:"g",SUBSTRING_MATCH:"h",ALL_MATCH:"i",FUNCTION:"j",PARAMETER:"k",RIGHT_PARENTHESES:"l",NOT:"m",IDENT:"n",STRING:"o",HASH:"p",CLASS:"q",COMMA:"r",COLON:"s",PLUS:"t",GREATER:"u",TILDE:"v",UNIVERSAL:"w",S:"x",INVALID:"y",$START:"z",selectors_group:"aa",selector:"ab",simple_selector_sequence:"ac",combinator:"ad",type_selector:"ae",id_selector:"af",class_selector:"ag",attrib_match:"ah",attrib:"ai",attrib_val:"aj",pseudo:"ak",negation:"al",negation_arg:"am",suffix_selector:"an",suffix_selectors:"ao"},t.productions=[["z",["aa"]],["aa",["ab"],function(){return[this.$1]}],["aa",["aa","r","ab"],function(){this.$1.push(this.$3)}],["ab",["ac"]],["ab",["ab","ad","ac"],function(){var e;return this.$1.nextCombinator=this.$3.prevCombinator=this.$2,e=this.$1.order=this.$1.order||0,this.$3.order=e+1,this.$3.prev=this.$1,this.$1.next=this.$3,this.$3}],["ad",["t"]],["ad",["u"]],["ad",["v"]],["ad",["x"],function(){return" "}],["ae",["n"],function(){return{t:"tag",value:this.$1}}],["ae",["w"],function(){return{t:"tag",value:this.$1}}],["af",["p"],function(){return{t:"id",value:this.$1}}],["ag",["q"],function(){return{t:"cls",value:this.$1}}],["ah",["f"]],["ah",["g"]],["ah",["h"]],["ah",["i"]],["ah",["d"]],["ah",["e"]],["ai",["b","n","c"],function(){return{t:"attrib",value:{ident:this.$2}}}],["aj",["n"]],["aj",["o"]],["ai",["b","n","ah","aj","c"],function(){return{t:"attrib",value:{ident:this.$2,match:this.$3,value:this.$4}}}],["ak",["s","j","k","l"],function(){return{t:"pseudo",value:{fn:this.$2.toLowerCase(),param:this.$3}}}],["ak",["s","n"],function(){return{t:"pseudo",value:{ident:this.$2.toLowerCase()}}}],["al",["m","am","l"],function(){return{t:"pseudo",value:{fn:"not",param:this.$2}}}],["am",["ae"]],["am",["af"]],["am",["ag"]],["am",["ai"]],["am",["ak"]],["an",["af"]],["an",["ag"]],["an",["ai"]],["an",["ak"]],["an",["al"]],["ao",["an"],function(){return[this.$1]}],["ao",["ao","an"],function(){this.$1.push(this.$2)}],["ac",["ae"]],["ac",["ao"],function(){return{suffix:this.$1}}],["ac",["ae","ao"],function(){return{t:"tag",value:this.$1.value,suffix:this.$2}}]],t.table={gotos:{0:{aa:8,ab:9,ae:10,af:11,ag:12,ai:13,ak:14,al:15,an:16,ao:17,ac:18},2:{ae:20,af:21,ag:22,ai:23,ak:24,am:25},9:{ad:33},10:{af:11,ag:12,ai:13,ak:14,al:15,an:16,ao:34},17:{af:11,ag:12,ai:13,ak:14,al:15,an:35},19:{ah:43},28:{ab:46,ae:10,af:11,ag:12,ai:13,ak:14,al:15,an:16,ao:17,ac:18},33:{ae:10,af:11,ag:12,ai:13,ak:14,al:15,an:16,ao:17,ac:47},34:{af:11,ag:12,ai:13,ak:14,al:15,an:35},43:{aj:50},46:{ad:33}},action:{0:{b:[1,void 0,1],m:[1,void 0,2],n:[1,void 0,3],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6],w:[1,void 0,7]},1:{n:[1,void 0,19]},2:{b:[1,void 0,1],n:[1,void 0,3],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6],w:[1,void 0,7]},3:{a:[2,9],r:[2,9],t:[2,9],u:[2,9],v:[2,9],x:[2,9],p:[2,9],q:[2,9],b:[2,9],s:[2,9],m:[2,9],l:[2,9]},4:{a:[2,11],r:[2,11],t:[2,11],u:[2,11],v:[2,11],x:[2,11],p:[2,11],q:[2,11],b:[2,11],s:[2,11],m:[2,11],l:[2,11]},5:{a:[2,12],r:[2,12],t:[2,12],u:[2,12],v:[2,12],x:[2,12],p:[2,12],q:[2,12],b:[2,12],s:[2,12],m:[2,12],l:[2,12]},6:{j:[1,void 0,26],n:[1,void 0,27]},7:{a:[2,10],r:[2,10],t:[2,10],u:[2,10],v:[2,10],x:[2,10],p:[2,10],q:[2,10],b:[2,10],s:[2,10],m:[2,10],l:[2,10]},8:{a:[0],r:[1,void 0,28]},9:{a:[2,1],r:[2,1],t:[1,void 0,29],u:[1,void 0,30],v:[1,void 0,31],x:[1,void 0,32]},10:{a:[2,38],r:[2,38],t:[2,38],u:[2,38],v:[2,38],x:[2,38],b:[1,void 0,1],m:[1,void 0,2],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6]},11:{a:[2,31],r:[2,31],t:[2,31],u:[2,31],v:[2,31],x:[2,31],p:[2,31],q:[2,31],b:[2,31],s:[2,31],m:[2,31]},12:{a:[2,32],r:[2,32],t:[2,32],u:[2,32],v:[2,32],x:[2,32],p:[2,32],q:[2,32],b:[2,32],s:[2,32],m:[2,32]},13:{a:[2,33],r:[2,33],t:[2,33],u:[2,33],v:[2,33],x:[2,33],p:[2,33],q:[2,33],b:[2,33],s:[2,33],m:[2,33]},14:{a:[2,34],r:[2,34],t:[2,34],u:[2,34],v:[2,34],x:[2,34],p:[2,34],q:[2,34],b:[2,34],s:[2,34],m:[2,34]},15:{a:[2,35],r:[2,35],t:[2,35],u:[2,35],v:[2,35],x:[2,35],p:[2,35],q:[2,35],b:[2,35],s:[2,35],m:[2,35]},16:{a:[2,36],r:[2,36],t:[2,36],u:[2,36],v:[2,36],x:[2,36],p:[2,36],q:[2,36],b:[2,36],s:[2,36],m:[2,36]},17:{a:[2,39],r:[2,39],t:[2,39],u:[2,39],v:[2,39],x:[2,39],b:[1,void 0,1],m:[1,void 0,2],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6]},18:{a:[2,3],r:[2,3],t:[2,3],u:[2,3],v:[2,3],x:[2,3]},19:{c:[1,void 0,36],d:[1,void 0,37],e:[1,void 0,38],f:[1,void 0,39],g:[1,void 0,40],h:[1,void 0,41],i:[1,void 0,42]},20:{l:[2,26]},21:{l:[2,27]},22:{l:[2,28]},23:{l:[2,29]},24:{l:[2,30]},25:{l:[1,void 0,44]},26:{k:[1,void 0,45]},27:{a:[2,24],r:[2,24],t:[2,24],u:[2,24],v:[2,24],x:[2,24],p:[2,24],q:[2,24],b:[2,24],s:[2,24],m:[2,24],l:[2,24]},28:{b:[1,void 0,1],m:[1,void 0,2],n:[1,void 0,3],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6],w:[1,void 0,7]},29:{n:[2,5],w:[2,5],p:[2,5],q:[2,5],b:[2,5],s:[2,5],m:[2,5]},30:{n:[2,6],w:[2,6],p:[2,6],q:[2,6],b:[2,6],s:[2,6],m:[2,6]},31:{n:[2,7],w:[2,7],p:[2,7],q:[2,7],b:[2,7],s:[2,7],m:[2,7]},32:{n:[2,8],w:[2,8],p:[2,8],q:[2,8],b:[2,8],s:[2,8],m:[2,8]},33:{b:[1,void 0,1],m:[1,void 0,2],n:[1,void 0,3],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6],w:[1,void 0,7]},34:{a:[2,40],r:[2,40],t:[2,40],u:[2,40],v:[2,40],x:[2,40],b:[1,void 0,1],m:[1,void 0,2],p:[1,void 0,4],q:[1,void 0,5],s:[1,void 0,6]},35:{a:[2,37],r:[2,37],t:[2,37],u:[2,37],v:[2,37],x:[2,37],p:[2,37],q:[2,37],b:[2,37],s:[2,37],m:[2,37]},36:{a:[2,19],r:[2,19],t:[2,19],u:[2,19],v:[2,19],x:[2,19],p:[2,19],q:[2,19],b:[2,19],s:[2,19],m:[2,19],l:[2,19]},37:{n:[2,17],o:[2,17]},38:{n:[2,18],o:[2,18]},39:{n:[2,13],o:[2,13]},40:{n:[2,14],o:[2,14]},41:{n:[2,15],o:[2,15]},42:{n:[2,16],o:[2,16]},43:{n:[1,void 0,48],o:[1,void 0,49]},44:{a:[2,25],r:[2,25],t:[2,25],u:[2,25],v:[2,25],x:[2,25],p:[2,25],q:[2,25],b:[2,25],s:[2,25],m:[2,25]},45:{l:[1,void 0,51]},46:{a:[2,2],r:[2,2],t:[1,void 0,29],u:[1,void 0,30],v:[1,void 0,31],x:[1,void 0,32]},47:{a:[2,4],r:[2,4],t:[2,4],u:[2,4],v:[2,4],x:[2,4]},48:{c:[2,20]},49:{c:[2,21]},50:{c:[1,void 0,52]},51:{a:[2,23],r:[2,23],t:[2,23],u:[2,23],v:[2,23],x:[2,23],p:[2,23],q:[2,23],b:[2,23],s:[2,23],m:[2,23],l:[2,23]},52:{a:[2,22],r:[2,22],t:[2,22],u:[2,22],v:[2,22],x:[2,22],p:[2,22],q:[2,22],b:[2,22],s:[2,22],m:[2,22],l:[2,22]}}},t.parse=function(e,t){var l,s,c,f=this.lexer,p=this.table,d=p.gotos,h=p.action,m=this.productions,g=[null],v=t?"in file: "+t+" ":"",y=[0];for(f.resetInput(e);;){if(l=y[y.length-1],s||(s=f.lex()),!(c=s?h[l]&&h[l][s]:null)){var b,x=[];if(h[l])for(var S in h[l])x.push(this.lexer.mapReverseSymbol(S));throw b=v+"syntax error at line "+f.lineNumber+":\n"+f.showDebugInfo()+"\nexpect "+x.join(", "),new Error(b)}switch(c[i]){case n:y.push(s),g.push(f.text),y.push(c[u]),s=null;break;case r:var w,A=m[c[o]],E=A.symbol||A[0],N=A.action||A[2],M=(A.rhs||A[1]).length,k=0,_=g[g.length-M];for(w=void 0,this.$$=_;k<M;k++)this["$"+(M-k)]=g[g.length-1-k];N&&(w=N.call(this)),_=void 0!==w?w:this.$$,y=y.slice(0,-1*M*2),g=g.slice(0,-1*M),y.push(E),g.push(_);var T=d[y[y.length-2]][y[y.length-1]];y.push(T);break;case a:return _}}},t}();e.exports=r},function(e,t){e.exports=function(e){return"string"==typeof e}},function(e,t){e.exports=function(e){return void 0===e}},function(e,t){e.exports=function(e){for(var t,n=arguments,r=1;r<n.length;r++)for(var a in t=n[r])e[a]=t[a];return e}},function(e,t,n){var r=n(3);e.exports=function(e){var t=r(e);return t.charAt(0).toUpperCase()===e.charAt(0)?e.charAt(0)+t.slice(1):"-"===e.charAt(0)?0===t.indexOf("ms")?t:t.charAt(0).toUpperCase()+t.slice(1):t}},function(e,t){e.exports=function(){return{getComputedStyle:function(e){return{getPropertyValue:e.style.getProperty}}}}},function(e,t,n){var r=n(0),a=n(25),i=n(4),o=n(29);e.exports=function(e){return function(t){var n=a({componentWillMount:function(){this.connectedFauxDOM={},this.animateFauxDOMUntil=0},componentWillUnmount:function(){this.stopAnimatingFauxDOM(),this.stopDrawFauxDOM()},connectFauxDOM:function(t,n,r){return this.connectedFauxDOM[n]&&!r||(this.connectedFauxDOM[n]="string"!=typeof t?t:new e(t),this.drawFauxDOMTimeout=setTimeout(this.drawFauxDOM)),this.connectedFauxDOM[n]},drawFauxDOM:function(){var e=i(this.connectedFauxDOM,(function(e){return e.toReact()}));this.setState(e)},animateFauxDOM:function(e){this.animateFauxDOMUntil=Math.max(Date.now()+e,this.animateFauxDOMUntil),this.fauxDOMAnimationInterval||(this.fauxDOMAnimationInterval=setInterval(function(){Date.now()<this.animateFauxDOMUntil?this.drawFauxDOM():this.stopAnimatingFauxDOM()}.bind(this),16))},stopAnimatingFauxDOM:function(){this.fauxDOMAnimationInterval=clearInterval(this.fauxDOMAnimationInterval),this.animateFauxDOMUntil=0},stopDrawFauxDOM:function(){this.drawFauxDOMTimeout=clearTimeout(this.drawFauxDOMTimeout)},isAnimatingFauxDOM:function(){return!!this.fauxDOMAnimationInterval},render:function(){var e=Object.assign({},this.props,this.state,{connectFauxDOM:this.connectFauxDOM,drawFauxDOM:this.drawFauxDOM,animateFauxDOM:this.animateFauxDOM,stopAnimatingFauxDOM:this.stopAnimatingFauxDOM,isAnimatingFauxDOM:this.isAnimatingFauxDOM});return r.createElement(t,e)}});return n.displayName="WithFauxDOM("+function(e){return e.displayName||e.name||"Component"}(t)+")",o(n,t),n}}},function(e,t,n){"use strict";var r=n(0),a=n(26);if(void 0===r)throw Error("create-react-class could not find the React object. If you are using script tags, make sure that React is being loaded before create-react-class.");var i=(new r.Component).updater;e.exports=a(r.Component,r.isValidElement,i)},function(e,t,n){"use strict";var r=n(1),a=n(27),i=n(28);e.exports=function(e,t,n){var o=[],u={mixins:"DEFINE_MANY",statics:"DEFINE_MANY",propTypes:"DEFINE_MANY",contextTypes:"DEFINE_MANY",childContextTypes:"DEFINE_MANY",getDefaultProps:"DEFINE_MANY_MERGED",getInitialState:"DEFINE_MANY_MERGED",getChildContext:"DEFINE_MANY_MERGED",render:"DEFINE_ONCE",componentWillMount:"DEFINE_MANY",componentDidMount:"DEFINE_MANY",componentWillReceiveProps:"DEFINE_MANY",shouldComponentUpdate:"DEFINE_ONCE",componentWillUpdate:"DEFINE_MANY",componentDidUpdate:"DEFINE_MANY",componentWillUnmount:"DEFINE_MANY",UNSAFE_componentWillMount:"DEFINE_MANY",UNSAFE_componentWillReceiveProps:"DEFINE_MANY",UNSAFE_componentWillUpdate:"DEFINE_MANY",updateComponent:"OVERRIDE_BASE"},l={getDerivedStateFromProps:"DEFINE_MANY_MERGED"},s={displayName:function(e,t){e.displayName=t},mixins:function(e,t){if(t)for(var n=0;n<t.length;n++)f(e,t[n])},childContextTypes:function(e,t){e.childContextTypes=r({},e.childContextTypes,t)},contextTypes:function(e,t){e.contextTypes=r({},e.contextTypes,t)},getDefaultProps:function(e,t){e.getDefaultProps?e.getDefaultProps=d(e.getDefaultProps,t):e.getDefaultProps=t},propTypes:function(e,t){e.propTypes=r({},e.propTypes,t)},statics:function(e,t){!function(e,t){if(!t)return;for(var n in t){var r=t[n];if(t.hasOwnProperty(n)){if(i(!(n in s),'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.',n),n in e){var a=l.hasOwnProperty(n)?l[n]:null;return i("DEFINE_MANY_MERGED"===a,"ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",n),void(e[n]=d(e[n],r))}e[n]=r}}}(e,t)},autobind:function(){}};function c(e,t){var n=u.hasOwnProperty(t)?u[t]:null;y.hasOwnProperty(t)&&i("OVERRIDE_BASE"===n,"ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.",t),e&&i("DEFINE_MANY"===n||"DEFINE_MANY_MERGED"===n,"ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",t)}function f(e,n){if(n){i("function"!=typeof n,"ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object."),i(!t(n),"ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");var r=e.prototype,a=r.__reactAutoBindPairs;for(var o in n.hasOwnProperty("mixins")&&s.mixins(e,n.mixins),n)if(n.hasOwnProperty(o)&&"mixins"!==o){var l=n[o],f=r.hasOwnProperty(o);if(c(f,o),s.hasOwnProperty(o))s[o](e,l);else{var p=u.hasOwnProperty(o);if("function"==typeof l&&!p&&!f&&!1!==n.autobind)a.push(o,l),r[o]=l;else if(f){var m=u[o];i(p&&("DEFINE_MANY_MERGED"===m||"DEFINE_MANY"===m),"ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.",m,o),"DEFINE_MANY_MERGED"===m?r[o]=d(r[o],l):"DEFINE_MANY"===m&&(r[o]=h(r[o],l))}else r[o]=l}}}else;}function p(e,t){for(var n in i(e&&t&&"object"==typeof e&&"object"==typeof t,"mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects."),t)t.hasOwnProperty(n)&&(i(void 0===e[n],"mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.",n),e[n]=t[n]);return e}function d(e,t){return function(){var n=e.apply(this,arguments),r=t.apply(this,arguments);if(null==n)return r;if(null==r)return n;var a={};return p(a,n),p(a,r),a}}function h(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function m(e,t){return t.bind(e)}var g={componentDidMount:function(){this.__isMounted=!0}},v={componentWillUnmount:function(){this.__isMounted=!1}},y={replaceState:function(e,t){this.updater.enqueueReplaceState(this,e,t)},isMounted:function(){return!!this.__isMounted}},b=function(){};return r(b.prototype,e.prototype,y),function(e){var t=function(e,r,o){this.__reactAutoBindPairs.length&&function(e){for(var t=e.__reactAutoBindPairs,n=0;n<t.length;n+=2){var r=t[n],a=t[n+1];e[r]=m(e,a)}}(this),this.props=e,this.context=r,this.refs=a,this.updater=o||n,this.state=null;var u=this.getInitialState?this.getInitialState():null;i("object"==typeof u&&!Array.isArray(u),"%s.getInitialState(): must return an object or null",t.displayName||"ReactCompositeComponent"),this.state=u};for(var r in t.prototype=new b,t.prototype.constructor=t,t.prototype.__reactAutoBindPairs=[],o.forEach(f.bind(null,t)),f(t,g),f(t,e),f(t,v),t.getDefaultProps&&(t.defaultProps=t.getDefaultProps()),i(t.prototype.render,"createClass(...): Class specification must implement a `render` method."),u)t.prototype[r]||(t.prototype[r]=null);return t}}},function(e,t,n){"use strict";e.exports={}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,a,i,o,u){if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,r,a,i,o,u],c=0;(l=new Error(t.replace(/%s/g,(function(){return s[c++]})))).name="Invariant Violation"}throw l.framesToPop=1,l}}},function(e,t,n){"use strict";var r=n(30),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},u={};function l(e){return r.isMemo(e)?o:u[e.$$typeof]||a}u[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},u[r.Memo]=o;var s=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,p=Object.getOwnPropertyDescriptor,d=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=d(n);a&&a!==h&&e(t,a,r)}var o=c(n);f&&(o=o.concat(f(n)));for(var u=l(t),m=l(n),g=0;g<o.length;++g){var v=o[g];if(!(i[v]||r&&r[v]||m&&m[v]||u&&u[v])){var y=p(n,v);try{s(t,v,y)}catch(e){}}}}return t}},function(e,t,n){"use strict";e.exports=n(31)},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,a=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,o=r?Symbol.for("react.fragment"):60107,u=r?Symbol.for("react.strict_mode"):60108,l=r?Symbol.for("react.profiler"):60114,s=r?Symbol.for("react.provider"):60109,c=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,p=r?Symbol.for("react.concurrent_mode"):60111,d=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.suspense_list"):60120,g=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116,y=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,x=r?Symbol.for("react.responder"):60118,S=r?Symbol.for("react.scope"):60119;function w(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case a:switch(e=e.type){case f:case p:case o:case l:case u:case h:return e;default:switch(e=e&&e.$$typeof){case c:case d:case v:case g:case s:return e;default:return t}}case i:return t}}}function A(e){return w(e)===p}t.AsyncMode=f,t.ConcurrentMode=p,t.ContextConsumer=c,t.ContextProvider=s,t.Element=a,t.ForwardRef=d,t.Fragment=o,t.Lazy=v,t.Memo=g,t.Portal=i,t.Profiler=l,t.StrictMode=u,t.Suspense=h,t.isAsyncMode=function(e){return A(e)||w(e)===f},t.isConcurrentMode=A,t.isContextConsumer=function(e){return w(e)===c},t.isContextProvider=function(e){return w(e)===s},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===a},t.isForwardRef=function(e){return w(e)===d},t.isFragment=function(e){return w(e)===o},t.isLazy=function(e){return w(e)===v},t.isMemo=function(e){return w(e)===g},t.isPortal=function(e){return w(e)===i},t.isProfiler=function(e){return w(e)===l},t.isStrictMode=function(e){return w(e)===u},t.isSuspense=function(e){return w(e)===h},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===p||e===l||e===u||e===h||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===g||e.$$typeof===s||e.$$typeof===c||e.$$typeof===d||e.$$typeof===b||e.$$typeof===x||e.$$typeof===S||e.$$typeof===y)},t.typeOf=w},function(e,t,n){var r,a;!function(){var i={version:"3.5.17"},o=[].slice,u=function(e){return o.call(e)},l=this.document;function s(e){return e&&(e.ownerDocument||e.document||e).documentElement}function c(e){return e&&(e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView)}if(l)try{u(l.documentElement.childNodes)[0].nodeType}catch(e){u=function(e){for(var t=e.length,n=new Array(t);t--;)n[t]=e[t];return n}}if(Date.now||(Date.now=function(){return+new Date}),l)try{l.createElement("DIV").style.setProperty("opacity",0,"")}catch(e){var f=this.Element.prototype,p=f.setAttribute,d=f.setAttributeNS,h=this.CSSStyleDeclaration.prototype,m=h.setProperty;f.setAttribute=function(e,t){p.call(this,e,t+"")},f.setAttributeNS=function(e,t,n){d.call(this,e,t,n+"")},h.setProperty=function(e,t,n){m.call(this,e,t+"",n)}}function g(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}function v(e){return null===e?NaN:+e}function y(e){return!isNaN(e)}function b(e){return{left:function(t,n,r,a){for(arguments.length<3&&(r=0),arguments.length<4&&(a=t.length);r<a;){var i=r+a>>>1;e(t[i],n)<0?r=i+1:a=i}return r},right:function(t,n,r,a){for(arguments.length<3&&(r=0),arguments.length<4&&(a=t.length);r<a;){var i=r+a>>>1;e(t[i],n)>0?a=i:r=i+1}return r}}}i.ascending=g,i.descending=function(e,t){return t<e?-1:t>e?1:t>=e?0:NaN},i.min=function(e,t){var n,r,a=-1,i=e.length;if(1===arguments.length){for(;++a<i;)if(null!=(r=e[a])&&r>=r){n=r;break}for(;++a<i;)null!=(r=e[a])&&n>r&&(n=r)}else{for(;++a<i;)if(null!=(r=t.call(e,e[a],a))&&r>=r){n=r;break}for(;++a<i;)null!=(r=t.call(e,e[a],a))&&n>r&&(n=r)}return n},i.max=function(e,t){var n,r,a=-1,i=e.length;if(1===arguments.length){for(;++a<i;)if(null!=(r=e[a])&&r>=r){n=r;break}for(;++a<i;)null!=(r=e[a])&&r>n&&(n=r)}else{for(;++a<i;)if(null!=(r=t.call(e,e[a],a))&&r>=r){n=r;break}for(;++a<i;)null!=(r=t.call(e,e[a],a))&&r>n&&(n=r)}return n},i.extent=function(e,t){var n,r,a,i=-1,o=e.length;if(1===arguments.length){for(;++i<o;)if(null!=(r=e[i])&&r>=r){n=a=r;break}for(;++i<o;)null!=(r=e[i])&&(n>r&&(n=r),a<r&&(a=r))}else{for(;++i<o;)if(null!=(r=t.call(e,e[i],i))&&r>=r){n=a=r;break}for(;++i<o;)null!=(r=t.call(e,e[i],i))&&(n>r&&(n=r),a<r&&(a=r))}return[n,a]},i.sum=function(e,t){var n,r=0,a=e.length,i=-1;if(1===arguments.length)for(;++i<a;)y(n=+e[i])&&(r+=n);else for(;++i<a;)y(n=+t.call(e,e[i],i))&&(r+=n);return r},i.mean=function(e,t){var n,r=0,a=e.length,i=-1,o=a;if(1===arguments.length)for(;++i<a;)y(n=v(e[i]))?r+=n:--o;else for(;++i<a;)y(n=v(t.call(e,e[i],i)))?r+=n:--o;if(o)return r/o},i.quantile=function(e,t){var n=(e.length-1)*t+1,r=Math.floor(n),a=+e[r-1],i=n-r;return i?a+i*(e[r]-a):a},i.median=function(e,t){var n,r=[],a=e.length,o=-1;if(1===arguments.length)for(;++o<a;)y(n=v(e[o]))&&r.push(n);else for(;++o<a;)y(n=v(t.call(e,e[o],o)))&&r.push(n);if(r.length)return i.quantile(r.sort(g),.5)},i.variance=function(e,t){var n,r,a=e.length,i=0,o=0,u=-1,l=0;if(1===arguments.length)for(;++u<a;)y(n=v(e[u]))&&(o+=(r=n-i)*(n-(i+=r/++l)));else for(;++u<a;)y(n=v(t.call(e,e[u],u)))&&(o+=(r=n-i)*(n-(i+=r/++l)));if(l>1)return o/(l-1)},i.deviation=function(){var e=i.variance.apply(this,arguments);return e?Math.sqrt(e):e};var x=b(g);function S(e){return e.length}i.bisectLeft=x.left,i.bisect=i.bisectRight=x.right,i.bisector=function(e){return b(1===e.length?function(t,n){return g(e(t),n)}:e)},i.shuffle=function(e,t,n){(i=arguments.length)<3&&(n=e.length,i<2&&(t=0));for(var r,a,i=n-t;i;)a=Math.random()*i--|0,r=e[i+t],e[i+t]=e[a+t],e[a+t]=r;return e},i.permute=function(e,t){for(var n=t.length,r=new Array(n);n--;)r[n]=e[t[n]];return r},i.pairs=function(e){for(var t=0,n=e.length-1,r=e[0],a=new Array(n<0?0:n);t<n;)a[t]=[r,r=e[++t]];return a},i.transpose=function(e){if(!(a=e.length))return[];for(var t=-1,n=i.min(e,S),r=new Array(n);++t<n;)for(var a,o=-1,u=r[t]=new Array(a);++o<a;)u[o]=e[o][t];return r},i.zip=function(){return i.transpose(arguments)},i.keys=function(e){var t=[];for(var n in e)t.push(n);return t},i.values=function(e){var t=[];for(var n in e)t.push(e[n]);return t},i.entries=function(e){var t=[];for(var n in e)t.push({key:n,value:e[n]});return t},i.merge=function(e){for(var t,n,r,a=e.length,i=-1,o=0;++i<a;)o+=e[i].length;for(n=new Array(o);--a>=0;)for(t=(r=e[a]).length;--t>=0;)n[--o]=r[t];return n};var w=Math.abs;function A(e){for(var t=1;e*t%1;)t*=10;return t}function E(e,t){for(var n in t)Object.defineProperty(e.prototype,n,{value:t[n],enumerable:!1})}function N(){this._=Object.create(null)}i.range=function(e,t,n){if(arguments.length<3&&(n=1,arguments.length<2&&(t=e,e=0)),(t-e)/n==1/0)throw new Error("infinite range");var r,a=[],i=A(w(n)),o=-1;if(e*=i,t*=i,(n*=i)<0)for(;(r=e+n*++o)>t;)a.push(r/i);else for(;(r=e+n*++o)<t;)a.push(r/i);return a},i.map=function(e,t){var n=new N;if(e instanceof N)e.forEach((function(e,t){n.set(e,t)}));else if(Array.isArray(e)){var r,a=-1,i=e.length;if(1===arguments.length)for(;++a<i;)n.set(a,e[a]);else for(;++a<i;)n.set(t.call(e,r=e[a],a),r)}else for(var o in e)n.set(o,e[o]);return n};function M(e){return"__proto__"==(e+="")||"\0"===e[0]?"\0"+e:e}function k(e){return"\0"===(e+="")[0]?e.slice(1):e}function _(e){return M(e)in this._}function T(e){return(e=M(e))in this._&&delete this._[e]}function C(){var e=[];for(var t in this._)e.push(k(t));return e}function P(){var e=0;for(var t in this._)++e;return e}function D(){for(var e in this._)return!1;return!0}function O(){this._=Object.create(null)}function I(e){return e}function z(e,t,n){return function(){var r=n.apply(t,arguments);return r===t?e:r}}function L(e,t){if(t in e)return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var n=0,r=R.length;n<r;++n){var a=R[n]+t;if(a in e)return a}}E(N,{has:_,get:function(e){return this._[M(e)]},set:function(e,t){return this._[M(e)]=t},remove:T,keys:C,values:function(){var e=[];for(var t in this._)e.push(this._[t]);return e},entries:function(){var e=[];for(var t in this._)e.push({key:k(t),value:this._[t]});return e},size:P,empty:D,forEach:function(e){for(var t in this._)e.call(this,k(t),this._[t])}}),i.nest=function(){var e,t,n={},r=[],a=[];function o(a,i,u){if(u>=r.length)return t?t.call(n,i):e?i.sort(e):i;for(var l,s,c,f,p=-1,d=i.length,h=r[u++],m=new N;++p<d;)(f=m.get(l=h(s=i[p])))?f.push(s):m.set(l,[s]);return a?(s=a(),c=function(e,t){s.set(e,o(a,t,u))}):(s={},c=function(e,t){s[e]=o(a,t,u)}),m.forEach(c),s}return n.map=function(e,t){return o(t,e,0)},n.entries=function(e){return function e(t,n){if(n>=r.length)return t;var i=[],o=a[n++];return t.forEach((function(t,r){i.push({key:t,values:e(r,n)})})),o?i.sort((function(e,t){return o(e.key,t.key)})):i}(o(i.map,e,0),0)},n.key=function(e){return r.push(e),n},n.sortKeys=function(e){return a[r.length-1]=e,n},n.sortValues=function(t){return e=t,n},n.rollup=function(e){return t=e,n},n},i.set=function(e){var t=new O;if(e)for(var n=0,r=e.length;n<r;++n)t.add(e[n]);return t},E(O,{has:_,add:function(e){return this._[M(e+="")]=!0,e},remove:T,values:C,size:P,empty:D,forEach:function(e){for(var t in this._)e.call(this,k(t))}}),i.behavior={},i.rebind=function(e,t){for(var n,r=1,a=arguments.length;++r<a;)e[n=arguments[r]]=z(e,t,t[n]);return e};var R=["webkit","ms","moz","Moz","o","O"];function F(){}function j(){}function V(e){var t=[],n=new N;function r(){for(var n,r=t,a=-1,i=r.length;++a<i;)(n=r[a].on)&&n.apply(this,arguments);return e}return r.on=function(r,a){var i,o=n.get(r);return arguments.length<2?o&&o.on:(o&&(o.on=null,t=t.slice(0,i=t.indexOf(o)).concat(t.slice(i+1)),n.remove(r)),a&&t.push(n.set(r,{on:a})),e)},r}function U(){i.event.preventDefault()}function q(){for(var e,t=i.event;e=t.sourceEvent;)t=e;return t}function B(e){for(var t=new j,n=0,r=arguments.length;++n<r;)t[arguments[n]]=V(t);return t.of=function(n,r){return function(a){try{var o=a.sourceEvent=i.event;a.target=e,i.event=a,t[a.type].apply(n,r)}finally{i.event=o}}},t}i.dispatch=function(){for(var e=new j,t=-1,n=arguments.length;++t<n;)e[arguments[t]]=V(e);return e},j.prototype.on=function(e,t){var n=e.indexOf("."),r="";if(n>=0&&(r=e.slice(n+1),e=e.slice(0,n)),e)return arguments.length<2?this[e].on(r):this[e].on(r,t);if(2===arguments.length){if(null==t)for(e in this)this.hasOwnProperty(e)&&this[e].on(r,null);return this}},i.event=null,i.requote=function(e){return e.replace($,"\\$&")};var $=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,Y={}.__proto__?function(e,t){e.__proto__=t}:function(e,t){for(var n in t)e[n]=t[n]};function H(e){return Y(e,G),e}var W=function(e,t){return t.querySelector(e)},Q=function(e,t){return t.querySelectorAll(e)},K=function(e,t){var n=e.matches||e[L(e,"matchesSelector")];return(K=function(e,t){return n.call(e,t)})(e,t)};"function"==typeof Sizzle&&(W=function(e,t){return Sizzle(e,t)[0]||null},Q=Sizzle,K=Sizzle.matchesSelector),i.selection=function(){return i.select(l.documentElement)};var G=i.selection.prototype=[];function X(e){return"function"==typeof e?e:function(){return W(e,this)}}function Z(e){return"function"==typeof e?e:function(){return Q(e,this)}}G.select=function(e){var t,n,r,a,i=[];e=X(e);for(var o=-1,u=this.length;++o<u;){i.push(t=[]),t.parentNode=(r=this[o]).parentNode;for(var l=-1,s=r.length;++l<s;)(a=r[l])?(t.push(n=e.call(a,a.__data__,l,o)),n&&"__data__"in a&&(n.__data__=a.__data__)):t.push(null)}return H(i)},G.selectAll=function(e){var t,n,r=[];e=Z(e);for(var a=-1,i=this.length;++a<i;)for(var o=this[a],l=-1,s=o.length;++l<s;)(n=o[l])&&(r.push(t=u(e.call(n,n.__data__,l,a))),t.parentNode=n);return H(r)};var J="http://www.w3.org/1999/xhtml",ee={svg:"http://www.w3.org/2000/svg",xhtml:J,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function te(e,t){return e=i.ns.qualify(e),null==t?e.local?function(){this.removeAttributeNS(e.space,e.local)}:function(){this.removeAttribute(e)}:"function"==typeof t?e.local?function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}:function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}:e.local?function(){this.setAttributeNS(e.space,e.local,t)}:function(){this.setAttribute(e,t)}}function ne(e){return e.trim().replace(/\s+/g," ")}function re(e){return new RegExp("(?:^|\\s+)"+i.requote(e)+"(?:\\s+|$)","g")}function ae(e){return(e+"").trim().split(/^|\s+/)}function ie(e,t){var n=(e=ae(e).map(oe)).length;return"function"==typeof t?function(){for(var r=-1,a=t.apply(this,arguments);++r<n;)e[r](this,a)}:function(){for(var r=-1;++r<n;)e[r](this,t)}}function oe(e){var t=re(e);return function(n,r){if(a=n.classList)return r?a.add(e):a.remove(e);var a=n.getAttribute("class")||"";r?(t.lastIndex=0,t.test(a)||n.setAttribute("class",ne(a+" "+e))):n.setAttribute("class",ne(a.replace(t," ")))}}function ue(e,t,n){return null==t?function(){this.style.removeProperty(e)}:"function"==typeof t?function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}:function(){this.style.setProperty(e,t,n)}}function le(e,t){return null==t?function(){delete this[e]}:"function"==typeof t?function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}:function(){this[e]=t}}function se(e){return"function"==typeof e?e:(e=i.ns.qualify(e)).local?function(){return this.ownerDocument.createElementNS(e.space,e.local)}:function(){var t=this.ownerDocument,n=this.namespaceURI;return n===J&&t.documentElement.namespaceURI===J?t.createElement(e):t.createElementNS(n,e)}}function ce(){var e=this.parentNode;e&&e.removeChild(this)}function fe(e){return{__data__:e}}function pe(e){return function(){return K(this,e)}}function de(e){return arguments.length||(e=g),function(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}}function he(e,t){for(var n=0,r=e.length;n<r;n++)for(var a,i=e[n],o=0,u=i.length;o<u;o++)(a=i[o])&&t(a,o,n);return e}function me(e){return Y(e,ge),e}i.ns={prefix:ee,qualify:function(e){var t=e.indexOf(":"),n=e;return t>=0&&"xmlns"!==(n=e.slice(0,t))&&(e=e.slice(t+1)),ee.hasOwnProperty(n)?{space:ee[n],local:e}:e}},G.attr=function(e,t){if(arguments.length<2){if("string"==typeof e){var n=this.node();return(e=i.ns.qualify(e)).local?n.getAttributeNS(e.space,e.local):n.getAttribute(e)}for(t in e)this.each(te(t,e[t]));return this}return this.each(te(e,t))},G.classed=function(e,t){if(arguments.length<2){if("string"==typeof e){var n=this.node(),r=(e=ae(e)).length,a=-1;if(t=n.classList){for(;++a<r;)if(!t.contains(e[a]))return!1}else for(t=n.getAttribute("class");++a<r;)if(!re(e[a]).test(t))return!1;return!0}for(t in e)this.each(ie(t,e[t]));return this}return this.each(ie(e,t))},G.style=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=""),e)this.each(ue(n,e[n],t));return this}if(r<2){var a=this.node();return c(a).getComputedStyle(a,null).getPropertyValue(e)}n=""}return this.each(ue(e,t,n))},G.property=function(e,t){if(arguments.length<2){if("string"==typeof e)return this.node()[e];for(t in e)this.each(le(t,e[t]));return this}return this.each(le(e,t))},G.text=function(e){return arguments.length?this.each("function"==typeof e?function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}:null==e?function(){this.textContent=""}:function(){this.textContent=e}):this.node().textContent},G.html=function(e){return arguments.length?this.each("function"==typeof e?function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}:null==e?function(){this.innerHTML=""}:function(){this.innerHTML=e}):this.node().innerHTML},G.append=function(e){return e=se(e),this.select((function(){return this.appendChild(e.apply(this,arguments))}))},G.insert=function(e,t){return e=se(e),t=X(t),this.select((function(){return this.insertBefore(e.apply(this,arguments),t.apply(this,arguments)||null)}))},G.remove=function(){return this.each(ce)},G.data=function(e,t){var n,r,a=-1,i=this.length;if(!arguments.length){for(e=new Array(i=(n=this[0]).length);++a<i;)(r=n[a])&&(e[a]=r.__data__);return e}function o(e,n){var r,a,i,o=e.length,c=n.length,f=Math.min(o,c),p=new Array(c),d=new Array(c),h=new Array(o);if(t){var m,g=new N,v=new Array(o);for(r=-1;++r<o;)(a=e[r])&&(g.has(m=t.call(a,a.__data__,r))?h[r]=a:g.set(m,a),v[r]=m);for(r=-1;++r<c;)(a=g.get(m=t.call(n,i=n[r],r)))?!0!==a&&(p[r]=a,a.__data__=i):d[r]=fe(i),g.set(m,!0);for(r=-1;++r<o;)r in v&&!0!==g.get(v[r])&&(h[r]=e[r])}else{for(r=-1;++r<f;)a=e[r],i=n[r],a?(a.__data__=i,p[r]=a):d[r]=fe(i);for(;r<c;++r)d[r]=fe(n[r]);for(;r<o;++r)h[r]=e[r]}d.update=p,d.parentNode=p.parentNode=h.parentNode=e.parentNode,u.push(d),l.push(p),s.push(h)}var u=me([]),l=H([]),s=H([]);if("function"==typeof e)for(;++a<i;)o(n=this[a],e.call(n,n.parentNode.__data__,a));else for(;++a<i;)o(n=this[a],e);return l.enter=function(){return u},l.exit=function(){return s},l},G.datum=function(e){return arguments.length?this.property("__data__",e):this.property("__data__")},G.filter=function(e){var t,n,r,a=[];"function"!=typeof e&&(e=pe(e));for(var i=0,o=this.length;i<o;i++){a.push(t=[]),t.parentNode=(n=this[i]).parentNode;for(var u=0,l=n.length;u<l;u++)(r=n[u])&&e.call(r,r.__data__,u,i)&&t.push(r)}return H(a)},G.order=function(){for(var e=-1,t=this.length;++e<t;)for(var n,r=this[e],a=r.length-1,i=r[a];--a>=0;)(n=r[a])&&(i&&i!==n.nextSibling&&i.parentNode.insertBefore(n,i),i=n);return this},G.sort=function(e){e=de.apply(this,arguments);for(var t=-1,n=this.length;++t<n;)this[t].sort(e);return this.order()},G.each=function(e){return he(this,(function(t,n,r){e.call(t,t.__data__,n,r)}))},G.call=function(e){var t=u(arguments);return e.apply(t[0]=this,t),this},G.empty=function(){return!this.node()},G.node=function(){for(var e=0,t=this.length;e<t;e++)for(var n=this[e],r=0,a=n.length;r<a;r++){var i=n[r];if(i)return i}return null},G.size=function(){var e=0;return he(this,(function(){++e})),e};var ge=[];function ve(e){var t,n;return function(r,a,i){var o,u=e[i].update,l=u.length;for(i!=n&&(n=i,t=0),a>=t&&(t=a+1);!(o=u[t])&&++t<l;);return o}}function ye(e,t,n){var r="__on"+e,a=e.indexOf("."),o=xe;a>0&&(e=e.slice(0,a));var l=be.get(e);function s(){var t=this[r];t&&(this.removeEventListener(e,t,t.$),delete this[r])}return l&&(e=l,o=Se),a?t?function(){var a=o(t,u(arguments));s.call(this),this.addEventListener(e,this[r]=a,a.$=n),a._=t}:s:t?F:function(){var t,n=new RegExp("^__on([^.]+)"+i.requote(e)+"$");for(var r in this)if(t=r.match(n)){var a=this[r];this.removeEventListener(t[1],a,a.$),delete this[r]}}}i.selection.enter=me,i.selection.enter.prototype=ge,ge.append=G.append,ge.empty=G.empty,ge.node=G.node,ge.call=G.call,ge.size=G.size,ge.select=function(e){for(var t,n,r,a,i,o=[],u=-1,l=this.length;++u<l;){r=(a=this[u]).update,o.push(t=[]),t.parentNode=a.parentNode;for(var s=-1,c=a.length;++s<c;)(i=a[s])?(t.push(r[s]=n=e.call(a.parentNode,i.__data__,s,u)),n.__data__=i.__data__):t.push(null)}return H(o)},ge.insert=function(e,t){return arguments.length<2&&(t=ve(this)),G.insert.call(this,e,t)},i.select=function(e){var t;return"string"==typeof e?(t=[W(e,l)]).parentNode=l.documentElement:(t=[e]).parentNode=s(e),H([t])},i.selectAll=function(e){var t;return"string"==typeof e?(t=u(Q(e,l))).parentNode=l.documentElement:(t=u(e)).parentNode=null,H([t])},G.on=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=!1),e)this.each(ye(n,e[n],t));return this}if(r<2)return(r=this.node()["__on"+e])&&r._;n=!1}return this.each(ye(e,t,n))};var be=i.map({mouseenter:"mouseover",mouseleave:"mouseout"});function xe(e,t){return function(n){var r=i.event;i.event=n,t[0]=this.__data__;try{e.apply(this,t)}finally{i.event=r}}}function Se(e,t){var n=xe(e,t);return function(e){var t=e.relatedTarget;t&&(t===this||8&t.compareDocumentPosition(this))||n.call(this,e)}}l&&be.forEach((function(e){"on"+e in l&&be.remove(e)}));var we,Ae=0;function Ee(e){var t=".dragsuppress-"+ ++Ae,n="click"+t,r=i.select(c(e)).on("touchmove"+t,U).on("dragstart"+t,U).on("selectstart"+t,U);if(null==we&&(we=!("onselectstart"in e)&&L(e.style,"userSelect")),we){var a=s(e).style,o=a[we];a[we]="none"}return function(e){if(r.on(t,null),we&&(a[we]=o),e){var i=function(){r.on(n,null)};r.on(n,(function(){U(),i()}),!0),setTimeout(i,0)}}}i.mouse=function(e){return Me(e,q())};var Ne=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;function Me(e,t){t.changedTouches&&(t=t.changedTouches[0]);var n=e.ownerSVGElement||e;if(n.createSVGPoint){var r=n.createSVGPoint();if(Ne<0){var a=c(e);if(a.scrollX||a.scrollY){var o=(n=i.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important"))[0][0].getScreenCTM();Ne=!(o.f||o.e),n.remove()}}return Ne?(r.x=t.pageX,r.y=t.pageY):(r.x=t.clientX,r.y=t.clientY),[(r=r.matrixTransform(e.getScreenCTM().inverse())).x,r.y]}var u=e.getBoundingClientRect();return[t.clientX-u.left-e.clientLeft,t.clientY-u.top-e.clientTop]}function ke(){return i.event.changedTouches[0].identifier}i.touch=function(e,t,n){if(arguments.length<3&&(n=t,t=q().changedTouches),t)for(var r,a=0,i=t.length;a<i;++a)if((r=t[a]).identifier===n)return Me(e,r)},i.behavior.drag=function(){var e=B(a,"drag","dragstart","dragend"),t=null,n=o(F,i.mouse,c,"mousemove","mouseup"),r=o(ke,i.touch,I,"touchmove","touchend");function a(){this.on("mousedown.drag",n).on("touchstart.drag",r)}function o(n,r,a,o,u){return function(){var l,s=this,c=i.event.target.correspondingElement||i.event.target,f=s.parentNode,p=e.of(s,arguments),d=0,h=n(),m=".drag"+(null==h?"":"-"+h),g=i.select(a(c)).on(o+m,b).on(u+m,x),v=Ee(c),y=r(f,h);function b(){var e,t,n=r(f,h);n&&(e=n[0]-y[0],t=n[1]-y[1],d|=e|t,y=n,p({type:"drag",x:n[0]+l[0],y:n[1]+l[1],dx:e,dy:t}))}function x(){r(f,h)&&(g.on(o+m,null).on(u+m,null),v(d),p({type:"dragend"}))}l=t?[(l=t.apply(s,arguments)).x-y[0],l.y-y[1]]:[0,0],p({type:"dragstart"})}}return a.origin=function(e){return arguments.length?(t=e,a):t},i.rebind(a,e,"on")},i.touches=function(e,t){return arguments.length<2&&(t=q().touches),t?u(t).map((function(t){var n=Me(e,t);return n.identifier=t.identifier,n})):[]};var _e=1e-6,Te=1e-12,Ce=Math.PI,Pe=2*Ce,De=Pe-_e,Oe=Ce/2,Ie=Ce/180,ze=180/Ce;function Le(e){return e>0?1:e<0?-1:0}function Re(e,t,n){return(t[0]-e[0])*(n[1]-e[1])-(t[1]-e[1])*(n[0]-e[0])}function Fe(e){return e>1?0:e<-1?Ce:Math.acos(e)}function je(e){return e>1?Oe:e<-1?-Oe:Math.asin(e)}function Ve(e){return((e=Math.exp(e))+1/e)/2}function Ue(e){return(e=Math.sin(e/2))*e}var qe=Math.SQRT2;i.interpolateZoom=function(e,t){var n,r,a=e[0],i=e[1],o=e[2],u=t[0],l=t[1],s=t[2],c=u-a,f=l-i,p=c*c+f*f;if(p<Te)r=Math.log(s/o)/qe,n=function(e){return[a+e*c,i+e*f,o*Math.exp(qe*e*r)]};else{var d=Math.sqrt(p),h=(s*s-o*o+4*p)/(2*o*2*d),m=(s*s-o*o-4*p)/(2*s*2*d),g=Math.log(Math.sqrt(h*h+1)-h),v=Math.log(Math.sqrt(m*m+1)-m);r=(v-g)/qe,n=function(e){var t,n=e*r,u=Ve(g),l=o/(2*d)*(u*(t=qe*n+g,((t=Math.exp(2*t))-1)/(t+1))-function(e){return((e=Math.exp(e))-1/e)/2}(g));return[a+l*c,i+l*f,o*u/Ve(qe*n+g)]}}return n.duration=1e3*r,n},i.behavior.zoom=function(){var e,t,n,r,a,o,u,s,f,p={x:0,y:0,k:1},d=[960,500],h=Ye,m=250,g=0,v="mousedown.zoom",y="mousemove.zoom",b="mouseup.zoom",x="touchstart.zoom",S=B(w,"zoomstart","zoom","zoomend");function w(e){e.on(v,P).on($e+".zoom",O).on("dblclick.zoom",I).on(x,D)}function A(e){return[(e[0]-p.x)/p.k,(e[1]-p.y)/p.k]}function E(e){p.k=Math.max(h[0],Math.min(h[1],e))}function N(e,t){t=function(e){return[e[0]*p.k+p.x,e[1]*p.k+p.y]}(t),p.x+=e[0]-t[0],p.y+=e[1]-t[1]}function M(e,n,r,a){e.__chart__={x:p.x,y:p.y,k:p.k},E(Math.pow(2,a)),N(t=n,r),e=i.select(e),m>0&&(e=e.transition().duration(m)),e.call(w.event)}function k(){u&&u.domain(o.range().map((function(e){return(e-p.x)/p.k})).map(o.invert)),f&&f.domain(s.range().map((function(e){return(e-p.y)/p.k})).map(s.invert))}function _(e){g++||e({type:"zoomstart"})}function T(e){k(),e({type:"zoom",scale:p.k,translate:[p.x,p.y]})}function C(e){--g||(e({type:"zoomend"}),t=null)}function P(){var e=this,t=S.of(e,arguments),n=0,r=i.select(c(e)).on(y,u).on(b,l),a=A(i.mouse(e)),o=Ee(e);function u(){n=1,N(i.mouse(e),a),T(t)}function l(){r.on(y,null).on(b,null),o(n),C(t)}Su.call(e),_(t)}function D(){var e,t=this,n=S.of(t,arguments),r={},o=0,u=".zoom-"+i.event.changedTouches[0].identifier,l="touchmove"+u,s="touchend"+u,c=[],f=i.select(t),d=Ee(t);function h(){var n=i.touches(t);return e=p.k,n.forEach((function(e){e.identifier in r&&(r[e.identifier]=A(e))})),n}function m(){var e=i.event.target;i.select(e).on(l,g).on(s,y),c.push(e);for(var n=i.event.changedTouches,u=0,f=n.length;u<f;++u)r[n[u].identifier]=null;var d=h(),m=Date.now();if(1===d.length){if(m-a<500){var v=d[0];M(t,v,r[v.identifier],Math.floor(Math.log(p.k)/Math.LN2)+1),U()}a=m}else if(d.length>1){v=d[0];var b=d[1],x=v[0]-b[0],S=v[1]-b[1];o=x*x+S*S}}function g(){var u,l,s,c,f=i.touches(t);Su.call(t);for(var p=0,d=f.length;p<d;++p,c=null)if(s=f[p],c=r[s.identifier]){if(l)break;u=s,l=c}if(c){var h=(h=s[0]-u[0])*h+(h=s[1]-u[1])*h,m=o&&Math.sqrt(h/o);u=[(u[0]+s[0])/2,(u[1]+s[1])/2],l=[(l[0]+c[0])/2,(l[1]+c[1])/2],E(m*e)}a=null,N(u,l),T(n)}function y(){if(i.event.touches.length){for(var e=i.event.changedTouches,t=0,a=e.length;t<a;++t)delete r[e[t].identifier];for(var o in r)return void h()}i.selectAll(c).on(u,null),f.on(v,P).on(x,D),d(),C(n)}m(),_(n),f.on(v,null).on(x,m)}function O(){var a=S.of(this,arguments);r?clearTimeout(r):(Su.call(this),e=A(t=n||i.mouse(this)),_(a)),r=setTimeout((function(){r=null,C(a)}),50),U(),E(Math.pow(2,.002*Be())*p.k),N(t,e),T(a)}function I(){var e=i.mouse(this),t=Math.log(p.k)/Math.LN2;M(this,e,A(e),i.event.shiftKey?Math.ceil(t)-1:Math.floor(t)+1)}return $e||($e="onwheel"in l?(Be=function(){return-i.event.deltaY*(i.event.deltaMode?120:1)},"wheel"):"onmousewheel"in l?(Be=function(){return i.event.wheelDelta},"mousewheel"):(Be=function(){return-i.event.detail},"MozMousePixelScroll")),w.event=function(e){e.each((function(){var e=S.of(this,arguments),n=p;Eu?i.select(this).transition().each("start.zoom",(function(){p=this.__chart__||{x:0,y:0,k:1},_(e)})).tween("zoom:zoom",(function(){var r=d[0],a=d[1],o=t?t[0]:r/2,u=t?t[1]:a/2,l=i.interpolateZoom([(o-p.x)/p.k,(u-p.y)/p.k,r/p.k],[(o-n.x)/n.k,(u-n.y)/n.k,r/n.k]);return function(t){var n=l(t),a=r/n[2];this.__chart__=p={x:o-n[0]*a,y:u-n[1]*a,k:a},T(e)}})).each("interrupt.zoom",(function(){C(e)})).each("end.zoom",(function(){C(e)})):(this.__chart__=p,_(e),T(e),C(e))}))},w.translate=function(e){return arguments.length?(p={x:+e[0],y:+e[1],k:p.k},k(),w):[p.x,p.y]},w.scale=function(e){return arguments.length?(p={x:p.x,y:p.y,k:null},E(+e),k(),w):p.k},w.scaleExtent=function(e){return arguments.length?(h=null==e?Ye:[+e[0],+e[1]],w):h},w.center=function(e){return arguments.length?(n=e&&[+e[0],+e[1]],w):n},w.size=function(e){return arguments.length?(d=e&&[+e[0],+e[1]],w):d},w.duration=function(e){return arguments.length?(m=+e,w):m},w.x=function(e){return arguments.length?(u=e,o=e.copy(),p={x:0,y:0,k:1},w):u},w.y=function(e){return arguments.length?(f=e,s=e.copy(),p={x:0,y:0,k:1},w):f},i.rebind(w,S,"on")};var Be,$e,Ye=[0,1/0];function He(){}function We(e,t,n){return this instanceof We?(this.h=+e,this.s=+t,void(this.l=+n)):arguments.length<2?e instanceof We?new We(e.h,e.s,e.l):pt(""+e,dt,We):new We(e,t,n)}i.color=He,He.prototype.toString=function(){return this.rgb()+""},i.hsl=We;var Qe=We.prototype=new He;function Ke(e,t,n){var r,a;function i(e){return Math.round(255*function(e){return e>360?e-=360:e<0&&(e+=360),e<60?r+(a-r)*e/60:e<180?a:e<240?r+(a-r)*(240-e)/60:r}(e))}return e=isNaN(e)?0:(e%=360)<0?e+360:e,t=isNaN(t)||t<0?0:t>1?1:t,r=2*(n=n<0?0:n>1?1:n)-(a=n<=.5?n*(1+t):n+t-n*t),new ut(i(e+120),i(e),i(e-120))}function Ge(e,t,n){return this instanceof Ge?(this.h=+e,this.c=+t,void(this.l=+n)):arguments.length<2?e instanceof Ge?new Ge(e.h,e.c,e.l):rt(e instanceof Je?e.l:(e=ht((e=i.rgb(e)).r,e.g,e.b)).l,e.a,e.b):new Ge(e,t,n)}Qe.brighter=function(e){return e=Math.pow(.7,arguments.length?e:1),new We(this.h,this.s,this.l/e)},Qe.darker=function(e){return e=Math.pow(.7,arguments.length?e:1),new We(this.h,this.s,e*this.l)},Qe.rgb=function(){return Ke(this.h,this.s,this.l)},i.hcl=Ge;var Xe=Ge.prototype=new He;function Ze(e,t,n){return isNaN(e)&&(e=0),isNaN(t)&&(t=0),new Je(n,Math.cos(e*=Ie)*t,Math.sin(e)*t)}function Je(e,t,n){return this instanceof Je?(this.l=+e,this.a=+t,void(this.b=+n)):arguments.length<2?e instanceof Je?new Je(e.l,e.a,e.b):e instanceof Ge?Ze(e.h,e.c,e.l):ht((e=ut(e)).r,e.g,e.b):new Je(e,t,n)}Xe.brighter=function(e){return new Ge(this.h,this.c,Math.min(100,this.l+et*(arguments.length?e:1)))},Xe.darker=function(e){return new Ge(this.h,this.c,Math.max(0,this.l-et*(arguments.length?e:1)))},Xe.rgb=function(){return Ze(this.h,this.c,this.l).rgb()},i.lab=Je;var et=18,tt=Je.prototype=new He;function nt(e,t,n){var r=(e+16)/116,a=r+t/500,i=r-n/200;return new ut(ot(3.2404542*(a=.95047*at(a))-1.5371385*(r=1*at(r))-.4985314*(i=1.08883*at(i))),ot(-.969266*a+1.8760108*r+.041556*i),ot(.0556434*a-.2040259*r+1.0572252*i))}function rt(e,t,n){return e>0?new Ge(Math.atan2(n,t)*ze,Math.sqrt(t*t+n*n),e):new Ge(NaN,NaN,e)}function at(e){return e>.206893034?e*e*e:(e-4/29)/7.787037}function it(e){return e>.008856?Math.pow(e,1/3):7.787037*e+4/29}function ot(e){return Math.round(255*(e<=.00304?12.92*e:1.055*Math.pow(e,1/2.4)-.055))}function ut(e,t,n){return this instanceof ut?(this.r=~~e,this.g=~~t,void(this.b=~~n)):arguments.length<2?e instanceof ut?new ut(e.r,e.g,e.b):pt(""+e,ut,Ke):new ut(e,t,n)}function lt(e){return new ut(e>>16,e>>8&255,255&e)}function st(e){return lt(e)+""}tt.brighter=function(e){return new Je(Math.min(100,this.l+et*(arguments.length?e:1)),this.a,this.b)},tt.darker=function(e){return new Je(Math.max(0,this.l-et*(arguments.length?e:1)),this.a,this.b)},tt.rgb=function(){return nt(this.l,this.a,this.b)},i.rgb=ut;var ct=ut.prototype=new He;function ft(e){return e<16?"0"+Math.max(0,e).toString(16):Math.min(255,e).toString(16)}function pt(e,t,n){var r,a,i,o=0,u=0,l=0;if(r=/([a-z]+)\((.*)\)/.exec(e=e.toLowerCase()))switch(a=r[2].split(","),r[1]){case"hsl":return n(parseFloat(a[0]),parseFloat(a[1])/100,parseFloat(a[2])/100);case"rgb":return t(gt(a[0]),gt(a[1]),gt(a[2]))}return(i=vt.get(e))?t(i.r,i.g,i.b):(null==e||"#"!==e.charAt(0)||isNaN(i=parseInt(e.slice(1),16))||(4===e.length?(o=(3840&i)>>4,o|=o>>4,u=240&i,u|=u>>4,l=15&i,l|=l<<4):7===e.length&&(o=(16711680&i)>>16,u=(65280&i)>>8,l=255&i)),t(o,u,l))}function dt(e,t,n){var r,a,i=Math.min(e/=255,t/=255,n/=255),o=Math.max(e,t,n),u=o-i,l=(o+i)/2;return u?(a=l<.5?u/(o+i):u/(2-o-i),r=e==o?(t-n)/u+(t<n?6:0):t==o?(n-e)/u+2:(e-t)/u+4,r*=60):(r=NaN,a=l>0&&l<1?0:r),new We(r,a,l)}function ht(e,t,n){var r=it((.4124564*(e=mt(e))+.3575761*(t=mt(t))+.1804375*(n=mt(n)))/.95047),a=it((.2126729*e+.7151522*t+.072175*n)/1);return Je(116*a-16,500*(r-a),200*(a-it((.0193339*e+.119192*t+.9503041*n)/1.08883)))}function mt(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function gt(e){var t=parseFloat(e);return"%"===e.charAt(e.length-1)?Math.round(2.55*t):t}ct.brighter=function(e){e=Math.pow(.7,arguments.length?e:1);var t=this.r,n=this.g,r=this.b,a=30;return t||n||r?(t&&t<a&&(t=a),n&&n<a&&(n=a),r&&r<a&&(r=a),new ut(Math.min(255,t/e),Math.min(255,n/e),Math.min(255,r/e))):new ut(a,a,a)},ct.darker=function(e){return new ut((e=Math.pow(.7,arguments.length?e:1))*this.r,e*this.g,e*this.b)},ct.hsl=function(){return dt(this.r,this.g,this.b)},ct.toString=function(){return"#"+ft(this.r)+ft(this.g)+ft(this.b)};var vt=i.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});function yt(e){return"function"==typeof e?e:function(){return e}}function bt(e){return function(t,n,r){return 2===arguments.length&&"function"==typeof n&&(r=n,n=null),xt(t,n,e,r)}}function xt(e,t,n,r){var a={},o=i.dispatch("beforesend","progress","load","error"),l={},s=new XMLHttpRequest,c=null;function f(){var e,t=s.status;if(!t&&function(e){var t=e.responseType;return t&&"text"!==t?e.response:e.responseText}(s)||t>=200&&t<300||304===t){try{e=n.call(a,s)}catch(e){return void o.error.call(a,e)}o.load.call(a,e)}else o.error.call(a,s)}return this.XDomainRequest&&!("withCredentials"in s)&&/^(http(s)?:)?\/\//.test(e)&&(s=new XDomainRequest),"onload"in s?s.onload=s.onerror=f:s.onreadystatechange=function(){s.readyState>3&&f()},s.onprogress=function(e){var t=i.event;i.event=e;try{o.progress.call(a,s)}finally{i.event=t}},a.header=function(e,t){return e=(e+"").toLowerCase(),arguments.length<2?l[e]:(null==t?delete l[e]:l[e]=t+"",a)},a.mimeType=function(e){return arguments.length?(t=null==e?null:e+"",a):t},a.responseType=function(e){return arguments.length?(c=e,a):c},a.response=function(e){return n=e,a},["get","post"].forEach((function(e){a[e]=function(){return a.send.apply(a,[e].concat(u(arguments)))}})),a.send=function(n,r,i){if(2===arguments.length&&"function"==typeof r&&(i=r,r=null),s.open(n,e,!0),null==t||"accept"in l||(l.accept=t+",*/*"),s.setRequestHeader)for(var u in l)s.setRequestHeader(u,l[u]);return null!=t&&s.overrideMimeType&&s.overrideMimeType(t),null!=c&&(s.responseType=c),null!=i&&a.on("error",i).on("load",(function(e){i(null,e)})),o.beforesend.call(a,s),s.send(null==r?null:r),a},a.abort=function(){return s.abort(),a},i.rebind(a,o,"on"),null==r?a:a.get(function(e){return 1===e.length?function(t,n){e(null==t?n:null)}:e}(r))}vt.forEach((function(e,t){vt.set(e,lt(t))})),i.functor=yt,i.xhr=bt(I),i.dsv=function(e,t){var n=new RegExp('["'+e+"\n]"),r=e.charCodeAt(0);function a(e,n,r){arguments.length<3&&(r=n,n=null);var a=xt(e,t,null==n?i:o(n),r);return a.row=function(e){return arguments.length?a.response(null==(n=e)?i:o(e)):n},a}function i(e){return a.parse(e.responseText)}function o(e){return function(t){return a.parse(t.responseText,e)}}function u(t){return t.map(l).join(e)}function l(e){return n.test(e)?'"'+e.replace(/\"/g,'""')+'"':e}return a.parse=function(e,t){var n;return a.parseRows(e,(function(e,r){if(n)return n(e,r-1);var a=new Function("d","return {"+e.map((function(e,t){return JSON.stringify(e)+": d["+t+"]"})).join(",")+"}");n=t?function(e,n){return t(a(e),n)}:a}))},a.parseRows=function(e,t){var n,a,i={},o={},u=[],l=e.length,s=0,c=0;function f(){if(s>=l)return o;if(a)return a=!1,i;var t=s;if(34===e.charCodeAt(t)){for(var n=t;n++<l;)if(34===e.charCodeAt(n)){if(34!==e.charCodeAt(n+1))break;++n}return s=n+2,13===(u=e.charCodeAt(n+1))?(a=!0,10===e.charCodeAt(n+2)&&++s):10===u&&(a=!0),e.slice(t+1,n).replace(/""/g,'"')}for(;s<l;){var u,c=1;if(10===(u=e.charCodeAt(s++)))a=!0;else if(13===u)a=!0,10===e.charCodeAt(s)&&(++s,++c);else if(u!==r)continue;return e.slice(t,s-c)}return e.slice(t)}for(;(n=f())!==o;){for(var p=[];n!==i&&n!==o;)p.push(n),n=f();t&&null==(p=t(p,c++))||u.push(p)}return u},a.format=function(t){if(Array.isArray(t[0]))return a.formatRows(t);var n=new O,r=[];return t.forEach((function(e){for(var t in e)n.has(t)||r.push(n.add(t))})),[r.map(l).join(e)].concat(t.map((function(t){return r.map((function(e){return l(t[e])})).join(e)}))).join("\n")},a.formatRows=function(e){return e.map(u).join("\n")},a},i.csv=i.dsv(",","text/csv"),i.tsv=i.dsv("\t","text/tab-separated-values");var St,wt,At,Et,Nt=this[L(this,"requestAnimationFrame")]||function(e){setTimeout(e,17)};function Mt(e,t,n){var r=arguments.length;r<2&&(t=0),r<3&&(n=Date.now());var a=n+t,i={c:e,t:a,n:null};return wt?wt.n=i:St=i,wt=i,At||(Et=clearTimeout(Et),At=1,Nt(kt)),i}function kt(){var e=_t(),t=Tt()-e;t>24?(isFinite(t)&&(clearTimeout(Et),Et=setTimeout(kt,t)),At=0):(At=1,Nt(kt))}function _t(){for(var e=Date.now(),t=St;t;)e>=t.t&&t.c(e-t.t)&&(t.c=null),t=t.n;return e}function Tt(){for(var e,t=St,n=1/0;t;)t.c?(t.t<n&&(n=t.t),t=(e=t).n):t=e?e.n=t.n:St=t.n;return wt=e,n}function Ct(e,t){return t-(e?Math.ceil(Math.log(e)/Math.LN10):1)}i.timer=function(){Mt.apply(this,arguments)},i.timer.flush=function(){_t(),Tt()},i.round=function(e,t){return t?Math.round(e*(t=Math.pow(10,t)))/t:Math.round(e)};var Pt=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"].map((function(e,t){var n=Math.pow(10,3*w(8-t));return{scale:t>8?function(e){return e/n}:function(e){return e*n},symbol:e}}));function Dt(e){var t=e.decimal,n=e.thousands,r=e.grouping,a=e.currency,o=r&&n?function(e,t){for(var a=e.length,i=[],o=0,u=r[0],l=0;a>0&&u>0&&(l+u+1>t&&(u=Math.max(1,t-l)),i.push(e.substring(a-=u,a+u)),!((l+=u+1)>t));)u=r[o=(o+1)%r.length];return i.reverse().join(n)}:I;return function(e){var n=Ot.exec(e),r=n[1]||" ",u=n[2]||">",l=n[3]||"-",s=n[4]||"",c=n[5],f=+n[6],p=n[7],d=n[8],h=n[9],m=1,g="",v="",y=!1,b=!0;switch(d&&(d=+d.substring(1)),(c||"0"===r&&"="===u)&&(c=r="0",u="="),h){case"n":p=!0,h="g";break;case"%":m=100,v="%",h="f";break;case"p":m=100,v="%",h="r";break;case"b":case"o":case"x":case"X":"#"===s&&(g="0"+h.toLowerCase());case"c":b=!1;case"d":y=!0,d=0;break;case"s":m=-1,h="r"}"$"===s&&(g=a[0],v=a[1]),"r"!=h||d||(h="g"),null!=d&&("g"==h?d=Math.max(1,Math.min(21,d)):"e"!=h&&"f"!=h||(d=Math.max(0,Math.min(20,d)))),h=It.get(h)||zt;var x=c&&p;return function(e){var n=v;if(y&&e%1)return"";var a=e<0||0===e&&1/e<0?(e=-e,"-"):"-"===l?"":l;if(m<0){var s=i.formatPrefix(e,d);e=s.scale(e),n=s.symbol+v}else e*=m;var S,w,A=(e=h(e,d)).lastIndexOf(".");if(A<0){var E=b?e.lastIndexOf("e"):-1;E<0?(S=e,w=""):(S=e.substring(0,E),w=e.substring(E))}else S=e.substring(0,A),w=t+e.substring(A+1);!c&&p&&(S=o(S,1/0));var N=g.length+S.length+w.length+(x?0:a.length),M=N<f?new Array(N=f-N+1).join(r):"";return x&&(S=o(M+S,M.length?f-w.length:1/0)),a+=g,e=S+w,("<"===u?a+e+M:">"===u?M+a+e:"^"===u?M.substring(0,N>>=1)+a+e+M.substring(N):a+(x?e:M+e))+n}}}i.formatPrefix=function(e,t){var n=0;return(e=+e)&&(e<0&&(e*=-1),t&&(e=i.round(e,Ct(e,t))),n=1+Math.floor(1e-12+Math.log(e)/Math.LN10),n=Math.max(-24,Math.min(24,3*Math.floor((n-1)/3)))),Pt[8+n/3]};var Ot=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,It=i.map({b:function(e){return e.toString(2)},c:function(e){return String.fromCharCode(e)},o:function(e){return e.toString(8)},x:function(e){return e.toString(16)},X:function(e){return e.toString(16).toUpperCase()},g:function(e,t){return e.toPrecision(t)},e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},r:function(e,t){return(e=i.round(e,Ct(e,t))).toFixed(Math.max(0,Math.min(20,Ct(e*(1+1e-15),t))))}});function zt(e){return e+""}var Lt=i.time={},Rt=Date;function Ft(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}Ft.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){jt.setUTCDate.apply(this._,arguments)},setDay:function(){jt.setUTCDay.apply(this._,arguments)},setFullYear:function(){jt.setUTCFullYear.apply(this._,arguments)},setHours:function(){jt.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){jt.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){jt.setUTCMinutes.apply(this._,arguments)},setMonth:function(){jt.setUTCMonth.apply(this._,arguments)},setSeconds:function(){jt.setUTCSeconds.apply(this._,arguments)},setTime:function(){jt.setTime.apply(this._,arguments)}};var jt=Date.prototype;function Vt(e,t,n){function r(t){var n=e(t),r=i(n,1);return t-n<r-t?n:r}function a(n){return t(n=e(new Rt(n-1)),1),n}function i(e,n){return t(e=new Rt(+e),n),e}function o(e,r,i){var o=a(e),u=[];if(i>1)for(;o<r;)n(o)%i||u.push(new Date(+o)),t(o,1);else for(;o<r;)u.push(new Date(+o)),t(o,1);return u}e.floor=e,e.round=r,e.ceil=a,e.offset=i,e.range=o;var u=e.utc=Ut(e);return u.floor=u,u.round=Ut(r),u.ceil=Ut(a),u.offset=Ut(i),u.range=function(e,t,n){try{Rt=Ft;var r=new Ft;return r._=e,o(r,t,n)}finally{Rt=Date}},e}function Ut(e){return function(t,n){try{Rt=Ft;var r=new Ft;return r._=t,e(r,n)._}finally{Rt=Date}}}function qt(e){var t=e.dateTime,n=e.date,r=e.time,a=e.periods,o=e.days,u=e.shortDays,l=e.months,s=e.shortMonths;function c(e){var t=e.length;function n(n){for(var r,a,i,o=[],u=-1,l=0;++u<t;)37===e.charCodeAt(u)&&(o.push(e.slice(l,u)),null!=(a=Bt[r=e.charAt(++u)])&&(r=e.charAt(++u)),(i=S[r])&&(r=i(n,null==a?"e"===r?" ":"0":a)),o.push(r),l=u+1);return o.push(e.slice(l,u)),o.join("")}return n.parse=function(t){var n={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null};if(f(n,e,t,0)!=t.length)return null;"p"in n&&(n.H=n.H%12+12*n.p);var r=null!=n.Z&&Rt!==Ft,a=new(r?Ft:Rt);return"j"in n?a.setFullYear(n.y,0,n.j):"W"in n||"U"in n?("w"in n||(n.w="W"in n?1:0),a.setFullYear(n.y,0,1),a.setFullYear(n.y,0,"W"in n?(n.w+6)%7+7*n.W-(a.getDay()+5)%7:n.w+7*n.U-(a.getDay()+6)%7)):a.setFullYear(n.y,n.m,n.d),a.setHours(n.H+(n.Z/100|0),n.M+n.Z%100,n.S,n.L),r?a._:a},n.toString=function(){return e},n}function f(e,t,n,r){for(var a,i,o,u=0,l=t.length,s=n.length;u<l;){if(r>=s)return-1;if(37===(a=t.charCodeAt(u++))){if(o=t.charAt(u++),!(i=w[o in Bt?t.charAt(u++):o])||(r=i(e,n,r))<0)return-1}else if(a!=n.charCodeAt(r++))return-1}return r}c.utc=function(e){var t=c(e);function n(e){try{var n=new(Rt=Ft);return n._=e,t(n)}finally{Rt=Date}}return n.parse=function(e){try{Rt=Ft;var n=t.parse(e);return n&&n._}finally{Rt=Date}},n.toString=t.toString,n},c.multi=c.utc.multi=fn;var p=i.map(),d=Wt(o),h=Qt(o),m=Wt(u),g=Qt(u),v=Wt(l),y=Qt(l),b=Wt(s),x=Qt(s);a.forEach((function(e,t){p.set(e.toLowerCase(),t)}));var S={a:function(e){return u[e.getDay()]},A:function(e){return o[e.getDay()]},b:function(e){return s[e.getMonth()]},B:function(e){return l[e.getMonth()]},c:c(t),d:function(e,t){return Ht(e.getDate(),t,2)},e:function(e,t){return Ht(e.getDate(),t,2)},H:function(e,t){return Ht(e.getHours(),t,2)},I:function(e,t){return Ht(e.getHours()%12||12,t,2)},j:function(e,t){return Ht(1+Lt.dayOfYear(e),t,3)},L:function(e,t){return Ht(e.getMilliseconds(),t,3)},m:function(e,t){return Ht(e.getMonth()+1,t,2)},M:function(e,t){return Ht(e.getMinutes(),t,2)},p:function(e){return a[+(e.getHours()>=12)]},S:function(e,t){return Ht(e.getSeconds(),t,2)},U:function(e,t){return Ht(Lt.sundayOfYear(e),t,2)},w:function(e){return e.getDay()},W:function(e,t){return Ht(Lt.mondayOfYear(e),t,2)},x:c(n),X:c(r),y:function(e,t){return Ht(e.getFullYear()%100,t,2)},Y:function(e,t){return Ht(e.getFullYear()%1e4,t,4)},Z:sn,"%":function(){return"%"}},w={a:function(e,t,n){m.lastIndex=0;var r=m.exec(t.slice(n));return r?(e.w=g.get(r[0].toLowerCase()),n+r[0].length):-1},A:function(e,t,n){d.lastIndex=0;var r=d.exec(t.slice(n));return r?(e.w=h.get(r[0].toLowerCase()),n+r[0].length):-1},b:function(e,t,n){b.lastIndex=0;var r=b.exec(t.slice(n));return r?(e.m=x.get(r[0].toLowerCase()),n+r[0].length):-1},B:function(e,t,n){v.lastIndex=0;var r=v.exec(t.slice(n));return r?(e.m=y.get(r[0].toLowerCase()),n+r[0].length):-1},c:function(e,t,n){return f(e,S.c.toString(),t,n)},d:nn,e:nn,H:an,I:an,j:rn,L:ln,m:tn,M:on,p:function(e,t,n){var r=p.get(t.slice(n,n+=2).toLowerCase());return null==r?-1:(e.p=r,n)},S:un,U:Gt,w:Kt,W:Xt,x:function(e,t,n){return f(e,S.x.toString(),t,n)},X:function(e,t,n){return f(e,S.X.toString(),t,n)},y:Jt,Y:Zt,Z:en,"%":cn};return c}Lt.year=Vt((function(e){return(e=Lt.day(e)).setMonth(0,1),e}),(function(e,t){e.setFullYear(e.getFullYear()+t)}),(function(e){return e.getFullYear()})),Lt.years=Lt.year.range,Lt.years.utc=Lt.year.utc.range,Lt.day=Vt((function(e){var t=new Rt(2e3,0);return t.setFullYear(e.getFullYear(),e.getMonth(),e.getDate()),t}),(function(e,t){e.setDate(e.getDate()+t)}),(function(e){return e.getDate()-1})),Lt.days=Lt.day.range,Lt.days.utc=Lt.day.utc.range,Lt.dayOfYear=function(e){var t=Lt.year(e);return Math.floor((e-t-6e4*(e.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach((function(e,t){t=7-t;var n=Lt[e]=Vt((function(e){return(e=Lt.day(e)).setDate(e.getDate()-(e.getDay()+t)%7),e}),(function(e,t){e.setDate(e.getDate()+7*Math.floor(t))}),(function(e){var n=Lt.year(e).getDay();return Math.floor((Lt.dayOfYear(e)+(n+t)%7)/7)-(n!==t)}));Lt[e+"s"]=n.range,Lt[e+"s"].utc=n.utc.range,Lt[e+"OfYear"]=function(e){var n=Lt.year(e).getDay();return Math.floor((Lt.dayOfYear(e)+(n+t)%7)/7)}})),Lt.week=Lt.sunday,Lt.weeks=Lt.sunday.range,Lt.weeks.utc=Lt.sunday.utc.range,Lt.weekOfYear=Lt.sundayOfYear;var Bt={"-":"",_:" ",0:"0"},$t=/^\s*\d+/,Yt=/^%/;function Ht(e,t,n){var r=e<0?"-":"",a=(r?-e:e)+"",i=a.length;return r+(i<n?new Array(n-i+1).join(t)+a:a)}function Wt(e){return new RegExp("^(?:"+e.map(i.requote).join("|")+")","i")}function Qt(e){for(var t=new N,n=-1,r=e.length;++n<r;)t.set(e[n].toLowerCase(),n);return t}function Kt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+1));return r?(e.w=+r[0],n+r[0].length):-1}function Gt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n));return r?(e.U=+r[0],n+r[0].length):-1}function Xt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n));return r?(e.W=+r[0],n+r[0].length):-1}function Zt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+4));return r?(e.y=+r[0],n+r[0].length):-1}function Jt(e,t,n){$t.lastIndex=0;var r,a=$t.exec(t.slice(n,n+2));return a?(e.y=(r=+a[0])+(r>68?1900:2e3),n+a[0].length):-1}function en(e,t,n){return/^[+-]\d{4}$/.test(t=t.slice(n,n+5))?(e.Z=-t,n+5):-1}function tn(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.m=r[0]-1,n+r[0].length):-1}function nn(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.d=+r[0],n+r[0].length):-1}function rn(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+3));return r?(e.j=+r[0],n+r[0].length):-1}function an(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.H=+r[0],n+r[0].length):-1}function on(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.M=+r[0],n+r[0].length):-1}function un(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.S=+r[0],n+r[0].length):-1}function ln(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+3));return r?(e.L=+r[0],n+r[0].length):-1}function sn(e){var t=e.getTimezoneOffset(),n=t>0?"-":"+",r=w(t)/60|0,a=w(t)%60;return n+Ht(r,"0",2)+Ht(a,"0",2)}function cn(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+1));return r?n+r[0].length:-1}function fn(e){for(var t=e.length,n=-1;++n<t;)e[n][0]=this(e[n][0]);return function(t){for(var n=0,r=e[n];!r[1](t);)r=e[++n];return r[0](t)}}i.locale=function(e){return{numberFormat:Dt(e),timeFormat:qt(e)}};var pn=i.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function dn(){}i.format=pn.numberFormat,i.geo={},dn.prototype={s:0,t:0,add:function(e){mn(e,this.t,hn),mn(hn.s,this.s,this),this.s?this.t+=hn.t:this.s=hn.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var hn=new dn;function mn(e,t,n){var r=n.s=e+t,a=r-e,i=r-a;n.t=e-i+(t-a)}function gn(e,t){e&&yn.hasOwnProperty(e.type)&&yn[e.type](e,t)}i.geo.stream=function(e,t){e&&vn.hasOwnProperty(e.type)?vn[e.type](e,t):gn(e,t)};var vn={Feature:function(e,t){gn(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,r=-1,a=n.length;++r<a;)gn(n[r].geometry,t)}},yn={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,r=-1,a=n.length;++r<a;)e=n[r],t.point(e[0],e[1],e[2])},LineString:function(e,t){bn(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,r=-1,a=n.length;++r<a;)bn(n[r],t,0)},Polygon:function(e,t){xn(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,r=-1,a=n.length;++r<a;)xn(n[r],t)},GeometryCollection:function(e,t){for(var n=e.geometries,r=-1,a=n.length;++r<a;)gn(n[r],t)}};function bn(e,t,n){var r,a=-1,i=e.length-n;for(t.lineStart();++a<i;)r=e[a],t.point(r[0],r[1],r[2]);t.lineEnd()}function xn(e,t){var n=-1,r=e.length;for(t.polygonStart();++n<r;)bn(e[n],t,1);t.polygonEnd()}i.geo.area=function(e){return Sn=0,i.geo.stream(e,In),Sn};var Sn,wn,An,En,Nn,Mn,kn,_n,Tn,Cn,Pn,Dn,On=new dn,In={sphere:function(){Sn+=4*Ce},point:F,lineStart:F,lineEnd:F,polygonStart:function(){On.reset(),In.lineStart=zn},polygonEnd:function(){var e=2*On;Sn+=e<0?4*Ce+e:e,In.lineStart=In.lineEnd=In.point=F}};function zn(){var e,t,n,r,a;function i(e,t){t=t*Ie/2+Ce/4;var i=(e*=Ie)-n,o=i>=0?1:-1,u=o*i,l=Math.cos(t),s=Math.sin(t),c=a*s,f=r*l+c*Math.cos(u),p=c*o*Math.sin(u);On.add(Math.atan2(p,f)),n=e,r=l,a=s}In.point=function(o,u){In.point=i,n=(e=o)*Ie,r=Math.cos(u=(t=u)*Ie/2+Ce/4),a=Math.sin(u)},In.lineEnd=function(){i(e,t)}}function Ln(e){var t=e[0],n=e[1],r=Math.cos(n);return[r*Math.cos(t),r*Math.sin(t),Math.sin(n)]}function Rn(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function Fn(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function jn(e,t){e[0]+=t[0],e[1]+=t[1],e[2]+=t[2]}function Vn(e,t){return[e[0]*t,e[1]*t,e[2]*t]}function Un(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]/=t,e[1]/=t,e[2]/=t}function qn(e){return[Math.atan2(e[1],e[0]),je(e[2])]}function Bn(e,t){return w(e[0]-t[0])<_e&&w(e[1]-t[1])<_e}i.geo.bounds=function(){var e,t,n,r,a,o,u,l,s,c,f,p={point:d,lineStart:m,lineEnd:g,polygonStart:function(){p.point=v,p.lineStart=y,p.lineEnd=b,s=0,In.polygonStart()},polygonEnd:function(){In.polygonEnd(),p.point=d,p.lineStart=m,p.lineEnd=g,On<0?(e=-(n=180),t=-(r=90)):s>_e?r=90:s<-_e&&(t=-90),f[0]=e,f[1]=n}};function d(a,i){c.push(f=[e=a,n=a]),i<t&&(t=i),i>r&&(r=i)}function h(i,o){var u=Ln([i*Ie,o*Ie]);if(l){var s=Fn(l,u),c=Fn([s[1],-s[0],0],s);Un(c),c=qn(c);var f=i-a,p=f>0?1:-1,h=c[0]*ze*p,m=w(f)>180;if(m^(p*a<h&&h<p*i))(g=c[1]*ze)>r&&(r=g);else if(m^(p*a<(h=(h+360)%360-180)&&h<p*i)){var g;(g=-c[1]*ze)<t&&(t=g)}else o<t&&(t=o),o>r&&(r=o);m?i<a?x(e,i)>x(e,n)&&(n=i):x(i,n)>x(e,n)&&(e=i):n>=e?(i<e&&(e=i),i>n&&(n=i)):i>a?x(e,i)>x(e,n)&&(n=i):x(i,n)>x(e,n)&&(e=i)}else d(i,o);l=u,a=i}function m(){p.point=h}function g(){f[0]=e,f[1]=n,p.point=d,l=null}function v(e,t){if(l){var n=e-a;s+=w(n)>180?n+(n>0?360:-360):n}else o=e,u=t;In.point(e,t),h(e,t)}function y(){In.lineStart()}function b(){v(o,u),In.lineEnd(),w(s)>_e&&(e=-(n=180)),f[0]=e,f[1]=n,l=null}function x(e,t){return(t-=e)<0?t+360:t}function S(e,t){return e[0]-t[0]}function A(e,t){return t[0]<=t[1]?t[0]<=e&&e<=t[1]:e<t[0]||t[1]<e}return function(a){if(r=n=-(e=t=1/0),c=[],i.geo.stream(a,p),s=c.length){c.sort(S);for(var o=1,u=[m=c[0]];o<s;++o)A((d=c[o])[0],m)||A(d[1],m)?(x(m[0],d[1])>x(m[0],m[1])&&(m[1]=d[1]),x(d[0],m[1])>x(m[0],m[1])&&(m[0]=d[0])):u.push(m=d);for(var l,s,d,h=-1/0,m=(o=0,u[s=u.length-1]);o<=s;m=d,++o)d=u[o],(l=x(m[1],d[0]))>h&&(h=l,e=d[0],n=m[1])}return c=f=null,e===1/0||t===1/0?[[NaN,NaN],[NaN,NaN]]:[[e,t],[n,r]]}}(),i.geo.centroid=function(e){wn=An=En=Nn=Mn=kn=_n=Tn=Cn=Pn=Dn=0,i.geo.stream(e,$n);var t=Cn,n=Pn,r=Dn,a=t*t+n*n+r*r;return a<Te&&(t=kn,n=_n,r=Tn,An<_e&&(t=En,n=Nn,r=Mn),(a=t*t+n*n+r*r)<Te)?[NaN,NaN]:[Math.atan2(n,t)*ze,je(r/Math.sqrt(a))*ze]};var $n={sphere:F,point:Yn,lineStart:Wn,lineEnd:Qn,polygonStart:function(){$n.lineStart=Kn},polygonEnd:function(){$n.lineStart=Wn}};function Yn(e,t){e*=Ie;var n=Math.cos(t*=Ie);Hn(n*Math.cos(e),n*Math.sin(e),Math.sin(t))}function Hn(e,t,n){++wn,En+=(e-En)/wn,Nn+=(t-Nn)/wn,Mn+=(n-Mn)/wn}function Wn(){var e,t,n;function r(r,a){r*=Ie;var i=Math.cos(a*=Ie),o=i*Math.cos(r),u=i*Math.sin(r),l=Math.sin(a),s=Math.atan2(Math.sqrt((s=t*l-n*u)*s+(s=n*o-e*l)*s+(s=e*u-t*o)*s),e*o+t*u+n*l);An+=s,kn+=s*(e+(e=o)),_n+=s*(t+(t=u)),Tn+=s*(n+(n=l)),Hn(e,t,n)}$n.point=function(a,i){a*=Ie;var o=Math.cos(i*=Ie);e=o*Math.cos(a),t=o*Math.sin(a),n=Math.sin(i),$n.point=r,Hn(e,t,n)}}function Qn(){$n.point=Yn}function Kn(){var e,t,n,r,a;function i(e,t){e*=Ie;var i=Math.cos(t*=Ie),o=i*Math.cos(e),u=i*Math.sin(e),l=Math.sin(t),s=r*l-a*u,c=a*o-n*l,f=n*u-r*o,p=Math.sqrt(s*s+c*c+f*f),d=n*o+r*u+a*l,h=p&&-Fe(d)/p,m=Math.atan2(p,d);Cn+=h*s,Pn+=h*c,Dn+=h*f,An+=m,kn+=m*(n+(n=o)),_n+=m*(r+(r=u)),Tn+=m*(a+(a=l)),Hn(n,r,a)}$n.point=function(o,u){e=o,t=u,$n.point=i,o*=Ie;var l=Math.cos(u*=Ie);n=l*Math.cos(o),r=l*Math.sin(o),a=Math.sin(u),Hn(n,r,a)},$n.lineEnd=function(){i(e,t),$n.lineEnd=Qn,$n.point=Yn}}function Gn(e,t){function n(n,r){return n=e(n,r),t(n[0],n[1])}return e.invert&&t.invert&&(n.invert=function(n,r){return(n=t.invert(n,r))&&e.invert(n[0],n[1])}),n}function Xn(){return!0}function Zn(e,t,n,r,a){var i=[],o=[];if(e.forEach((function(e){if(!((t=e.length-1)<=0)){var t,n=e[0],r=e[t];if(Bn(n,r)){a.lineStart();for(var u=0;u<t;++u)a.point((n=e[u])[0],n[1]);a.lineEnd()}else{var l=new er(n,e,null,!0),s=new er(n,null,l,!1);l.o=s,i.push(l),o.push(s),l=new er(r,e,null,!1),s=new er(r,null,l,!0),l.o=s,i.push(l),o.push(s)}}})),o.sort(t),Jn(i),Jn(o),i.length){for(var u=0,l=n,s=o.length;u<s;++u)o[u].e=l=!l;for(var c,f,p=i[0];;){for(var d=p,h=!0;d.v;)if((d=d.n)===p)return;c=d.z,a.lineStart();do{if(d.v=d.o.v=!0,d.e){if(h)for(u=0,s=c.length;u<s;++u)a.point((f=c[u])[0],f[1]);else r(d.x,d.n.x,1,a);d=d.n}else{if(h)for(u=(c=d.p.z).length-1;u>=0;--u)a.point((f=c[u])[0],f[1]);else r(d.x,d.p.x,-1,a);d=d.p}c=(d=d.o).z,h=!h}while(!d.v);a.lineEnd()}}}function Jn(e){if(t=e.length){for(var t,n,r=0,a=e[0];++r<t;)a.n=n=e[r],n.p=a,a=n;a.n=n=e[0],n.p=a}}function er(e,t,n,r){this.x=e,this.z=t,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function tr(e,t,n,r){return function(a,o){var u,l=t(o),s=a.invert(r[0],r[1]),c={point:f,lineStart:d,lineEnd:h,polygonStart:function(){c.point=x,c.lineStart=S,c.lineEnd=w,u=[],m=[]},polygonEnd:function(){c.point=f,c.lineStart=d,c.lineEnd=h,u=i.merge(u);var e=function(e,t){var n=e[0],r=e[1],a=[Math.sin(n),-Math.cos(n),0],i=0,o=0;On.reset();for(var u=0,l=t.length;u<l;++u){var s=t[u],c=s.length;if(c)for(var f=s[0],p=f[0],d=f[1]/2+Ce/4,h=Math.sin(d),m=Math.cos(d),g=1;;){g===c&&(g=0);var v=(e=s[g])[0],y=e[1]/2+Ce/4,b=Math.sin(y),x=Math.cos(y),S=v-p,w=S>=0?1:-1,A=w*S,E=A>Ce,N=h*b;if(On.add(Math.atan2(N*w*Math.sin(A),m*x+N*Math.cos(A))),i+=E?S+w*Pe:S,E^p>=n^v>=n){var M=Fn(Ln(f),Ln(e));Un(M);var k=Fn(a,M);Un(k);var _=(E^S>=0?-1:1)*je(k[2]);(r>_||r===_&&(M[0]||M[1]))&&(o+=E^S>=0?1:-1)}if(!g++)break;p=v,h=b,m=x,f=e}}return(i<-_e||i<_e&&On<-_e)^1&o}(s,m);u.length?(b||(o.polygonStart(),b=!0),Zn(u,ar,e,n,o)):e&&(b||(o.polygonStart(),b=!0),o.lineStart(),n(null,null,1,o),o.lineEnd()),b&&(o.polygonEnd(),b=!1),u=m=null},sphere:function(){o.polygonStart(),o.lineStart(),n(null,null,1,o),o.lineEnd(),o.polygonEnd()}};function f(t,n){var r=a(t,n);e(t=r[0],n=r[1])&&o.point(t,n)}function p(e,t){var n=a(e,t);l.point(n[0],n[1])}function d(){c.point=p,l.lineStart()}function h(){c.point=f,l.lineEnd()}var m,g,v=rr(),y=t(v),b=!1;function x(e,t){g.push([e,t]);var n=a(e,t);y.point(n[0],n[1])}function S(){y.lineStart(),g=[]}function w(){x(g[0][0],g[0][1]),y.lineEnd();var e,t=y.clean(),n=v.buffer(),r=n.length;if(g.pop(),m.push(g),g=null,r)if(1&t){var a,i=-1;if((r=(e=n[0]).length-1)>0){for(b||(o.polygonStart(),b=!0),o.lineStart();++i<r;)o.point((a=e[i])[0],a[1]);o.lineEnd()}}else r>1&&2&t&&n.push(n.pop().concat(n.shift())),u.push(n.filter(nr))}return c}}function nr(e){return e.length>1}function rr(){var e,t=[];return{lineStart:function(){t.push(e=[])},point:function(t,n){e.push([t,n])},lineEnd:F,buffer:function(){var n=t;return t=[],e=null,n},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function ar(e,t){return((e=e.x)[0]<0?e[1]-Oe-_e:Oe-e[1])-((t=t.x)[0]<0?t[1]-Oe-_e:Oe-t[1])}var ir=tr(Xn,(function(e){var t,n=NaN,r=NaN,a=NaN;return{lineStart:function(){e.lineStart(),t=1},point:function(i,o){var u=i>0?Ce:-Ce,l=w(i-n);w(l-Ce)<_e?(e.point(n,r=(r+o)/2>0?Oe:-Oe),e.point(a,r),e.lineEnd(),e.lineStart(),e.point(u,r),e.point(i,r),t=0):a!==u&&l>=Ce&&(w(n-a)<_e&&(n-=a*_e),w(i-u)<_e&&(i-=u*_e),r=function(e,t,n,r){var a,i,o=Math.sin(e-n);return w(o)>_e?Math.atan((Math.sin(t)*(i=Math.cos(r))*Math.sin(n)-Math.sin(r)*(a=Math.cos(t))*Math.sin(e))/(a*i*o)):(t+r)/2}(n,r,i,o),e.point(a,r),e.lineEnd(),e.lineStart(),e.point(u,r),t=0),e.point(n=i,r=o),a=u},lineEnd:function(){e.lineEnd(),n=r=NaN},clean:function(){return 2-t}}}),(function(e,t,n,r){var a;if(null==e)a=n*Oe,r.point(-Ce,a),r.point(0,a),r.point(Ce,a),r.point(Ce,0),r.point(Ce,-a),r.point(0,-a),r.point(-Ce,-a),r.point(-Ce,0),r.point(-Ce,a);else if(w(e[0]-t[0])>_e){var i=e[0]<t[0]?Ce:-Ce;a=n*i/2,r.point(-i,a),r.point(0,a),r.point(i,a)}else r.point(t[0],t[1])}),[-Ce,-Ce/2]);function or(e){var t=Math.cos(e),n=t>0,r=w(t)>_e;return tr(a,(function(e){var t,u,l,s,c;return{lineStart:function(){s=l=!1,c=1},point:function(f,p){var d,h=[f,p],m=a(f,p),g=n?m?0:o(f,p):m?o(f+(f<0?Ce:-Ce),p):0;if(!t&&(s=l=m)&&e.lineStart(),m!==l&&(d=i(t,h),(Bn(t,d)||Bn(h,d))&&(h[0]+=_e,h[1]+=_e,m=a(h[0],h[1]))),m!==l)c=0,m?(e.lineStart(),d=i(h,t),e.point(d[0],d[1])):(d=i(t,h),e.point(d[0],d[1]),e.lineEnd()),t=d;else if(r&&t&&n^m){var v;g&u||!(v=i(h,t,!0))||(c=0,n?(e.lineStart(),e.point(v[0][0],v[0][1]),e.point(v[1][0],v[1][1]),e.lineEnd()):(e.point(v[1][0],v[1][1]),e.lineEnd(),e.lineStart(),e.point(v[0][0],v[0][1])))}!m||t&&Bn(t,h)||e.point(h[0],h[1]),t=h,l=m,u=g},lineEnd:function(){l&&e.lineEnd(),t=null},clean:function(){return c|(s&&l)<<1}}}),qr(e,6*Ie),n?[0,-e]:[-Ce,e-Ce]);function a(e,n){return Math.cos(e)*Math.cos(n)>t}function i(e,n,r){var a=[1,0,0],i=Fn(Ln(e),Ln(n)),o=Rn(i,i),u=i[0],l=o-u*u;if(!l)return!r&&e;var s=t*o/l,c=-t*u/l,f=Fn(a,i),p=Vn(a,s);jn(p,Vn(i,c));var d=f,h=Rn(p,d),m=Rn(d,d),g=h*h-m*(Rn(p,p)-1);if(!(g<0)){var v=Math.sqrt(g),y=Vn(d,(-h-v)/m);if(jn(y,p),y=qn(y),!r)return y;var b,x=e[0],S=n[0],A=e[1],E=n[1];S<x&&(b=x,x=S,S=b);var N=S-x,M=w(N-Ce)<_e;if(!M&&E<A&&(b=A,A=E,E=b),M||N<_e?M?A+E>0^y[1]<(w(y[0]-x)<_e?A:E):A<=y[1]&&y[1]<=E:N>Ce^(x<=y[0]&&y[0]<=S)){var k=Vn(d,(-h+v)/m);return jn(k,p),[y,qn(k)]}}}function o(t,r){var a=n?e:Ce-e,i=0;return t<-a?i|=1:t>a&&(i|=2),r<-a?i|=4:r>a&&(i|=8),i}}function ur(e,t,n,r){return function(a){var i,o=a.a,u=a.b,l=o.x,s=o.y,c=0,f=1,p=u.x-l,d=u.y-s;if(i=e-l,p||!(i>0)){if(i/=p,p<0){if(i<c)return;i<f&&(f=i)}else if(p>0){if(i>f)return;i>c&&(c=i)}if(i=n-l,p||!(i<0)){if(i/=p,p<0){if(i>f)return;i>c&&(c=i)}else if(p>0){if(i<c)return;i<f&&(f=i)}if(i=t-s,d||!(i>0)){if(i/=d,d<0){if(i<c)return;i<f&&(f=i)}else if(d>0){if(i>f)return;i>c&&(c=i)}if(i=r-s,d||!(i<0)){if(i/=d,d<0){if(i>f)return;i>c&&(c=i)}else if(d>0){if(i<c)return;i<f&&(f=i)}return c>0&&(a.a={x:l+c*p,y:s+c*d}),f<1&&(a.b={x:l+f*p,y:s+f*d}),a}}}}}}function lr(e,t,n,r){return function(l){var s,c,f,p,d,h,m,g,v,y,b,x=l,S=rr(),w=ur(e,t,n,r),A={point:M,lineStart:function(){A.point=k,c&&c.push(f=[]);y=!0,v=!1,m=g=NaN},lineEnd:function(){s&&(k(p,d),h&&v&&S.rejoin(),s.push(S.buffer()));A.point=M,v&&l.lineEnd()},polygonStart:function(){l=S,s=[],c=[],b=!0},polygonEnd:function(){l=x,s=i.merge(s);var t=function(e){for(var t=0,n=c.length,r=e[1],a=0;a<n;++a)for(var i,o=1,u=c[a],l=u.length,s=u[0];o<l;++o)i=u[o],s[1]<=r?i[1]>r&&Re(s,i,e)>0&&++t:i[1]<=r&&Re(s,i,e)<0&&--t,s=i;return 0!==t}([e,r]),n=b&&t,a=s.length;(n||a)&&(l.polygonStart(),n&&(l.lineStart(),E(null,null,1,l),l.lineEnd()),a&&Zn(s,o,t,E,l),l.polygonEnd()),s=c=f=null}};function E(i,o,l,s){var c=0,f=0;if(null==i||(c=a(i,l))!==(f=a(o,l))||u(i,o)<0^l>0)do{s.point(0===c||3===c?e:n,c>1?r:t)}while((c=(c+l+4)%4)!==f);else s.point(o[0],o[1])}function N(a,i){return e<=a&&a<=n&&t<=i&&i<=r}function M(e,t){N(e,t)&&l.point(e,t)}function k(e,t){var n=N(e=Math.max(-1e9,Math.min(1e9,e)),t=Math.max(-1e9,Math.min(1e9,t)));if(c&&f.push([e,t]),y)p=e,d=t,h=n,y=!1,n&&(l.lineStart(),l.point(e,t));else if(n&&v)l.point(e,t);else{var r={a:{x:m,y:g},b:{x:e,y:t}};w(r)?(v||(l.lineStart(),l.point(r.a.x,r.a.y)),l.point(r.b.x,r.b.y),n||l.lineEnd(),b=!1):n&&(l.lineStart(),l.point(e,t),b=!1)}m=e,g=t,v=n}return A};function a(r,a){return w(r[0]-e)<_e?a>0?0:3:w(r[0]-n)<_e?a>0?2:1:w(r[1]-t)<_e?a>0?1:0:a>0?3:2}function o(e,t){return u(e.x,t.x)}function u(e,t){var n=a(e,1),r=a(t,1);return n!==r?n-r:0===n?t[1]-e[1]:1===n?e[0]-t[0]:2===n?e[1]-t[1]:t[0]-e[0]}}function sr(e){var t=0,n=Ce/3,r=Ir(e),a=r(t,n);return a.parallels=function(e){return arguments.length?r(t=e[0]*Ce/180,n=e[1]*Ce/180):[t/Ce*180,n/Ce*180]},a}function cr(e,t){var n=Math.sin(e),r=(n+Math.sin(t))/2,a=1+n*(2*r-n),i=Math.sqrt(a)/r;function o(e,t){var n=Math.sqrt(a-2*r*Math.sin(t))/r;return[n*Math.sin(e*=r),i-n*Math.cos(e)]}return o.invert=function(e,t){var n=i-t;return[Math.atan2(e,n)/r,je((a-(e*e+n*n)*r*r)/(2*r))]},o}i.geo.clipExtent=function(){var e,t,n,r,a,i,o={stream:function(e){return a&&(a.valid=!1),(a=i(e)).valid=!0,a},extent:function(u){return arguments.length?(i=lr(e=+u[0][0],t=+u[0][1],n=+u[1][0],r=+u[1][1]),a&&(a.valid=!1,a=null),o):[[e,t],[n,r]]}};return o.extent([[0,0],[960,500]])},(i.geo.conicEqualArea=function(){return sr(cr)}).raw=cr,i.geo.albers=function(){return i.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},i.geo.albersUsa=function(){var e,t,n,r,a=i.geo.albers(),o=i.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),u=i.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),l={point:function(t,n){e=[t,n]}};function s(a){var i=a[0],o=a[1];return e=null,t(i,o),e||(n(i,o),e)||r(i,o),e}return s.invert=function(e){var t=a.scale(),n=a.translate(),r=(e[0]-n[0])/t,i=(e[1]-n[1])/t;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?o:i>=.166&&i<.234&&r>=-.214&&r<-.115?u:a).invert(e)},s.stream=function(e){var t=a.stream(e),n=o.stream(e),r=u.stream(e);return{point:function(e,a){t.point(e,a),n.point(e,a),r.point(e,a)},sphere:function(){t.sphere(),n.sphere(),r.sphere()},lineStart:function(){t.lineStart(),n.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),n.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),n.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),n.polygonEnd(),r.polygonEnd()}}},s.precision=function(e){return arguments.length?(a.precision(e),o.precision(e),u.precision(e),s):a.precision()},s.scale=function(e){return arguments.length?(a.scale(e),o.scale(.35*e),u.scale(e),s.translate(a.translate())):a.scale()},s.translate=function(e){if(!arguments.length)return a.translate();var i=a.scale(),c=+e[0],f=+e[1];return t=a.translate(e).clipExtent([[c-.455*i,f-.238*i],[c+.455*i,f+.238*i]]).stream(l).point,n=o.translate([c-.307*i,f+.201*i]).clipExtent([[c-.425*i+_e,f+.12*i+_e],[c-.214*i-_e,f+.234*i-_e]]).stream(l).point,r=u.translate([c-.205*i,f+.212*i]).clipExtent([[c-.214*i+_e,f+.166*i+_e],[c-.115*i-_e,f+.234*i-_e]]).stream(l).point,s},s.scale(1070)};var fr,pr,dr,hr,mr,gr,vr={point:F,lineStart:F,lineEnd:F,polygonStart:function(){pr=0,vr.lineStart=yr},polygonEnd:function(){vr.lineStart=vr.lineEnd=vr.point=F,fr+=w(pr/2)}};function yr(){var e,t,n,r;function a(e,t){pr+=r*e-n*t,n=e,r=t}vr.point=function(i,o){vr.point=a,e=n=i,t=r=o},vr.lineEnd=function(){a(e,t)}}var br={point:function(e,t){e<dr&&(dr=e);e>mr&&(mr=e);t<hr&&(hr=t);t>gr&&(gr=t)},lineStart:F,lineEnd:F,polygonStart:F,polygonEnd:F};function xr(){var e=Sr(4.5),t=[],n={point:r,lineStart:function(){n.point=a},lineEnd:o,polygonStart:function(){n.lineEnd=u},polygonEnd:function(){n.lineEnd=o,n.point=r},pointRadius:function(t){return e=Sr(t),n},result:function(){if(t.length){var e=t.join("");return t=[],e}}};function r(n,r){t.push("M",n,",",r,e)}function a(e,r){t.push("M",e,",",r),n.point=i}function i(e,n){t.push("L",e,",",n)}function o(){n.point=r}function u(){t.push("Z")}return n}function Sr(e){return"m0,"+e+"a"+e+","+e+" 0 1,1 0,"+-2*e+"a"+e+","+e+" 0 1,1 0,"+2*e+"z"}var wr,Ar={point:Er,lineStart:Nr,lineEnd:Mr,polygonStart:function(){Ar.lineStart=kr},polygonEnd:function(){Ar.point=Er,Ar.lineStart=Nr,Ar.lineEnd=Mr}};function Er(e,t){En+=e,Nn+=t,++Mn}function Nr(){var e,t;function n(n,r){var a=n-e,i=r-t,o=Math.sqrt(a*a+i*i);kn+=o*(e+n)/2,_n+=o*(t+r)/2,Tn+=o,Er(e=n,t=r)}Ar.point=function(r,a){Ar.point=n,Er(e=r,t=a)}}function Mr(){Ar.point=Er}function kr(){var e,t,n,r;function a(e,t){var a=e-n,i=t-r,o=Math.sqrt(a*a+i*i);kn+=o*(n+e)/2,_n+=o*(r+t)/2,Tn+=o,Cn+=(o=r*e-n*t)*(n+e),Pn+=o*(r+t),Dn+=3*o,Er(n=e,r=t)}Ar.point=function(i,o){Ar.point=a,Er(e=n=i,t=r=o)},Ar.lineEnd=function(){a(e,t)}}function _r(e){var t=4.5,n={point:r,lineStart:function(){n.point=a},lineEnd:o,polygonStart:function(){n.lineEnd=u},polygonEnd:function(){n.lineEnd=o,n.point=r},pointRadius:function(e){return t=e,n},result:F};function r(n,r){e.moveTo(n+t,r),e.arc(n,r,t,0,Pe)}function a(t,r){e.moveTo(t,r),n.point=i}function i(t,n){e.lineTo(t,n)}function o(){n.point=r}function u(){e.closePath()}return n}function Tr(e){var t=.5,n=Math.cos(30*Ie),r=16;function a(e){return(r?o:i)(e)}function i(t){return Dr(t,(function(n,r){n=e(n,r),t.point(n[0],n[1])}))}function o(t){var n,a,i,o,l,s,c,f,p,d,h,m,g={point:v,lineStart:y,lineEnd:x,polygonStart:function(){t.polygonStart(),g.lineStart=S},polygonEnd:function(){t.polygonEnd(),g.lineStart=y}};function v(n,r){n=e(n,r),t.point(n[0],n[1])}function y(){f=NaN,g.point=b,t.lineStart()}function b(n,a){var i=Ln([n,a]),o=e(n,a);u(f,p,c,d,h,m,f=o[0],p=o[1],c=n,d=i[0],h=i[1],m=i[2],r,t),t.point(f,p)}function x(){g.point=v,t.lineEnd()}function S(){y(),g.point=w,g.lineEnd=A}function w(e,t){b(n=e,t),a=f,i=p,o=d,l=h,s=m,g.point=b}function A(){u(f,p,c,d,h,m,a,i,n,o,l,s,r,t),g.lineEnd=x,x()}return g}function u(r,a,i,o,l,s,c,f,p,d,h,m,g,v){var y=c-r,b=f-a,x=y*y+b*b;if(x>4*t&&g--){var S=o+d,A=l+h,E=s+m,N=Math.sqrt(S*S+A*A+E*E),M=Math.asin(E/=N),k=w(w(E)-1)<_e||w(i-p)<_e?(i+p)/2:Math.atan2(A,S),_=e(k,M),T=_[0],C=_[1],P=T-r,D=C-a,O=b*P-y*D;(O*O/x>t||w((y*P+b*D)/x-.5)>.3||o*d+l*h+s*m<n)&&(u(r,a,i,o,l,s,T,C,k,S/=N,A/=N,E,g,v),v.point(T,C),u(T,C,k,S,A,E,c,f,p,d,h,m,g,v))}}return a.precision=function(e){return arguments.length?(r=(t=e*e)>0&&16,a):Math.sqrt(t)},a}function Cr(e){var t=Tr((function(t,n){return e([t*ze,n*ze])}));return function(e){return zr(t(e))}}function Pr(e){this.stream=e}function Dr(e,t){return{point:t,sphere:function(){e.sphere()},lineStart:function(){e.lineStart()},lineEnd:function(){e.lineEnd()},polygonStart:function(){e.polygonStart()},polygonEnd:function(){e.polygonEnd()}}}function Or(e){return Ir((function(){return e}))()}function Ir(e){var t,n,r,a,o,u,l=Tr((function(e,n){return[(e=t(e,n))[0]*s+a,o-e[1]*s]})),s=150,c=480,f=250,p=0,d=0,h=0,m=0,g=0,v=ir,y=I,b=null,x=null;function S(e){return[(e=r(e[0]*Ie,e[1]*Ie))[0]*s+a,o-e[1]*s]}function w(e){return(e=r.invert((e[0]-a)/s,(o-e[1])/s))&&[e[0]*ze,e[1]*ze]}function A(){r=Gn(n=Fr(h,m,g),t);var e=t(p,d);return a=c-e[0]*s,o=f+e[1]*s,E()}function E(){return u&&(u.valid=!1,u=null),S}return S.stream=function(e){return u&&(u.valid=!1),(u=zr(v(n,l(y(e))))).valid=!0,u},S.clipAngle=function(e){return arguments.length?(v=null==e?(b=e,ir):or((b=+e)*Ie),E()):b},S.clipExtent=function(e){return arguments.length?(x=e,y=e?lr(e[0][0],e[0][1],e[1][0],e[1][1]):I,E()):x},S.scale=function(e){return arguments.length?(s=+e,A()):s},S.translate=function(e){return arguments.length?(c=+e[0],f=+e[1],A()):[c,f]},S.center=function(e){return arguments.length?(p=e[0]%360*Ie,d=e[1]%360*Ie,A()):[p*ze,d*ze]},S.rotate=function(e){return arguments.length?(h=e[0]%360*Ie,m=e[1]%360*Ie,g=e.length>2?e[2]%360*Ie:0,A()):[h*ze,m*ze,g*ze]},i.rebind(S,l,"precision"),function(){return t=e.apply(this,arguments),S.invert=t.invert&&w,A()}}function zr(e){return Dr(e,(function(t,n){e.point(t*Ie,n*Ie)}))}function Lr(e,t){return[e,t]}function Rr(e,t){return[e>Ce?e-Pe:e<-Ce?e+Pe:e,t]}function Fr(e,t,n){return e?t||n?Gn(Vr(e),Ur(t,n)):Vr(e):t||n?Ur(t,n):Rr}function jr(e){return function(t,n){return[(t+=e)>Ce?t-Pe:t<-Ce?t+Pe:t,n]}}function Vr(e){var t=jr(e);return t.invert=jr(-e),t}function Ur(e,t){var n=Math.cos(e),r=Math.sin(e),a=Math.cos(t),i=Math.sin(t);function o(e,t){var o=Math.cos(t),u=Math.cos(e)*o,l=Math.sin(e)*o,s=Math.sin(t),c=s*n+u*r;return[Math.atan2(l*a-c*i,u*n-s*r),je(c*a+l*i)]}return o.invert=function(e,t){var o=Math.cos(t),u=Math.cos(e)*o,l=Math.sin(e)*o,s=Math.sin(t),c=s*a-l*i;return[Math.atan2(l*a+s*i,u*n+c*r),je(c*n-u*r)]},o}function qr(e,t){var n=Math.cos(e),r=Math.sin(e);return function(a,i,o,u){var l=o*t;null!=a?(a=Br(n,a),i=Br(n,i),(o>0?a<i:a>i)&&(a+=o*Pe)):(a=e+o*Pe,i=e-.5*l);for(var s,c=a;o>0?c>i:c<i;c-=l)u.point((s=qn([n,-r*Math.cos(c),-r*Math.sin(c)]))[0],s[1])}}function Br(e,t){var n=Ln(t);n[0]-=e,Un(n);var r=Fe(-n[1]);return((-n[2]<0?-r:r)+2*Math.PI-_e)%(2*Math.PI)}function $r(e,t,n){var r=i.range(e,t-_e,n).concat(t);return function(e){return r.map((function(t){return[e,t]}))}}function Yr(e,t,n){var r=i.range(e,t-_e,n).concat(t);return function(e){return r.map((function(t){return[t,e]}))}}function Hr(e){return e.source}function Wr(e){return e.target}i.geo.path=function(){var e,t,n,r,a,o=4.5;function u(e){return e&&("function"==typeof o&&r.pointRadius(+o.apply(this,arguments)),a&&a.valid||(a=n(r)),i.geo.stream(e,a)),r.result()}function l(){return a=null,u}return u.area=function(e){return fr=0,i.geo.stream(e,n(vr)),fr},u.centroid=function(e){return En=Nn=Mn=kn=_n=Tn=Cn=Pn=Dn=0,i.geo.stream(e,n(Ar)),Dn?[Cn/Dn,Pn/Dn]:Tn?[kn/Tn,_n/Tn]:Mn?[En/Mn,Nn/Mn]:[NaN,NaN]},u.bounds=function(e){return mr=gr=-(dr=hr=1/0),i.geo.stream(e,n(br)),[[dr,hr],[mr,gr]]},u.projection=function(t){return arguments.length?(n=(e=t)?t.stream||Cr(t):I,l()):e},u.context=function(e){return arguments.length?(r=null==(t=e)?new xr:new _r(e),"function"!=typeof o&&r.pointRadius(o),l()):t},u.pointRadius=function(e){return arguments.length?(o="function"==typeof e?e:(r.pointRadius(+e),+e),u):o},u.projection(i.geo.albersUsa()).context(null)},i.geo.transform=function(e){return{stream:function(t){var n=new Pr(t);for(var r in e)n[r]=e[r];return n}}},Pr.prototype={point:function(e,t){this.stream.point(e,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},i.geo.projection=Or,i.geo.projectionMutator=Ir,(i.geo.equirectangular=function(){return Or(Lr)}).raw=Lr.invert=Lr,i.geo.rotation=function(e){function t(t){return(t=e(t[0]*Ie,t[1]*Ie))[0]*=ze,t[1]*=ze,t}return e=Fr(e[0]%360*Ie,e[1]*Ie,e.length>2?e[2]*Ie:0),t.invert=function(t){return(t=e.invert(t[0]*Ie,t[1]*Ie))[0]*=ze,t[1]*=ze,t},t},Rr.invert=Lr,i.geo.circle=function(){var e,t,n=[0,0],r=6;function a(){var e="function"==typeof n?n.apply(this,arguments):n,r=Fr(-e[0]*Ie,-e[1]*Ie,0).invert,a=[];return t(null,null,1,{point:function(e,t){a.push(e=r(e,t)),e[0]*=ze,e[1]*=ze}}),{type:"Polygon",coordinates:[a]}}return a.origin=function(e){return arguments.length?(n=e,a):n},a.angle=function(n){return arguments.length?(t=qr((e=+n)*Ie,r*Ie),a):e},a.precision=function(n){return arguments.length?(t=qr(e*Ie,(r=+n)*Ie),a):r},a.angle(90)},i.geo.distance=function(e,t){var n,r=(t[0]-e[0])*Ie,a=e[1]*Ie,i=t[1]*Ie,o=Math.sin(r),u=Math.cos(r),l=Math.sin(a),s=Math.cos(a),c=Math.sin(i),f=Math.cos(i);return Math.atan2(Math.sqrt((n=f*o)*n+(n=s*c-l*f*u)*n),l*c+s*f*u)},i.geo.graticule=function(){var e,t,n,r,a,o,u,l,s,c,f,p,d=10,h=d,m=90,g=360,v=2.5;function y(){return{type:"MultiLineString",coordinates:b()}}function b(){return i.range(Math.ceil(r/m)*m,n,m).map(f).concat(i.range(Math.ceil(l/g)*g,u,g).map(p)).concat(i.range(Math.ceil(t/d)*d,e,d).filter((function(e){return w(e%m)>_e})).map(s)).concat(i.range(Math.ceil(o/h)*h,a,h).filter((function(e){return w(e%g)>_e})).map(c))}return y.lines=function(){return b().map((function(e){return{type:"LineString",coordinates:e}}))},y.outline=function(){return{type:"Polygon",coordinates:[f(r).concat(p(u).slice(1),f(n).reverse().slice(1),p(l).reverse().slice(1))]}},y.extent=function(e){return arguments.length?y.majorExtent(e).minorExtent(e):y.minorExtent()},y.majorExtent=function(e){return arguments.length?(r=+e[0][0],n=+e[1][0],l=+e[0][1],u=+e[1][1],r>n&&(e=r,r=n,n=e),l>u&&(e=l,l=u,u=e),y.precision(v)):[[r,l],[n,u]]},y.minorExtent=function(n){return arguments.length?(t=+n[0][0],e=+n[1][0],o=+n[0][1],a=+n[1][1],t>e&&(n=t,t=e,e=n),o>a&&(n=o,o=a,a=n),y.precision(v)):[[t,o],[e,a]]},y.step=function(e){return arguments.length?y.majorStep(e).minorStep(e):y.minorStep()},y.majorStep=function(e){return arguments.length?(m=+e[0],g=+e[1],y):[m,g]},y.minorStep=function(e){return arguments.length?(d=+e[0],h=+e[1],y):[d,h]},y.precision=function(i){return arguments.length?(v=+i,s=$r(o,a,90),c=Yr(t,e,v),f=$r(l,u,90),p=Yr(r,n,v),y):v},y.majorExtent([[-180,-90+_e],[180,90-_e]]).minorExtent([[-180,-80-_e],[180,80+_e]])},i.geo.greatArc=function(){var e,t,n=Hr,r=Wr;function a(){return{type:"LineString",coordinates:[e||n.apply(this,arguments),t||r.apply(this,arguments)]}}return a.distance=function(){return i.geo.distance(e||n.apply(this,arguments),t||r.apply(this,arguments))},a.source=function(t){return arguments.length?(n=t,e="function"==typeof t?null:t,a):n},a.target=function(e){return arguments.length?(r=e,t="function"==typeof e?null:e,a):r},a.precision=function(){return arguments.length?a:0},a},i.geo.interpolate=function(e,t){return n=e[0]*Ie,r=e[1]*Ie,a=t[0]*Ie,i=t[1]*Ie,o=Math.cos(r),u=Math.sin(r),l=Math.cos(i),s=Math.sin(i),c=o*Math.cos(n),f=o*Math.sin(n),p=l*Math.cos(a),d=l*Math.sin(a),h=2*Math.asin(Math.sqrt(Ue(i-r)+o*l*Ue(a-n))),m=1/Math.sin(h),(g=h?function(e){var t=Math.sin(e*=h)*m,n=Math.sin(h-e)*m,r=n*c+t*p,a=n*f+t*d,i=n*u+t*s;return[Math.atan2(a,r)*ze,Math.atan2(i,Math.sqrt(r*r+a*a))*ze]}:function(){return[n*ze,r*ze]}).distance=h,g;var n,r,a,i,o,u,l,s,c,f,p,d,h,m,g},i.geo.length=function(e){return wr=0,i.geo.stream(e,Qr),wr};var Qr={sphere:F,point:F,lineStart:function(){var e,t,n;function r(r,a){var i=Math.sin(a*=Ie),o=Math.cos(a),u=w((r*=Ie)-e),l=Math.cos(u);wr+=Math.atan2(Math.sqrt((u=o*Math.sin(u))*u+(u=n*i-t*o*l)*u),t*i+n*o*l),e=r,t=i,n=o}Qr.point=function(a,i){e=a*Ie,t=Math.sin(i*=Ie),n=Math.cos(i),Qr.point=r},Qr.lineEnd=function(){Qr.point=Qr.lineEnd=F}},lineEnd:F,polygonStart:F,polygonEnd:F};function Kr(e,t){function n(t,n){var r=Math.cos(t),a=Math.cos(n),i=e(r*a);return[i*a*Math.sin(t),i*Math.sin(n)]}return n.invert=function(e,n){var r=Math.sqrt(e*e+n*n),a=t(r),i=Math.sin(a),o=Math.cos(a);return[Math.atan2(e*i,r*o),Math.asin(r&&n*i/r)]},n}var Gr=Kr((function(e){return Math.sqrt(2/(1+e))}),(function(e){return 2*Math.asin(e/2)}));(i.geo.azimuthalEqualArea=function(){return Or(Gr)}).raw=Gr;var Xr=Kr((function(e){var t=Math.acos(e);return t&&t/Math.sin(t)}),I);function Zr(e,t){var n=Math.cos(e),r=function(e){return Math.tan(Ce/4+e/2)},a=e===t?Math.sin(e):Math.log(n/Math.cos(t))/Math.log(r(t)/r(e)),i=n*Math.pow(r(e),a)/a;if(!a)return ta;function o(e,t){i>0?t<-Oe+_e&&(t=-Oe+_e):t>Oe-_e&&(t=Oe-_e);var n=i/Math.pow(r(t),a);return[n*Math.sin(a*e),i-n*Math.cos(a*e)]}return o.invert=function(e,t){var n=i-t,r=Le(a)*Math.sqrt(e*e+n*n);return[Math.atan2(e,n)/a,2*Math.atan(Math.pow(i/r,1/a))-Oe]},o}function Jr(e,t){var n=Math.cos(e),r=e===t?Math.sin(e):(n-Math.cos(t))/(t-e),a=n/r+e;if(w(r)<_e)return Lr;function i(e,t){var n=a-t;return[n*Math.sin(r*e),a-n*Math.cos(r*e)]}return i.invert=function(e,t){var n=a-t;return[Math.atan2(e,n)/r,a-Le(r)*Math.sqrt(e*e+n*n)]},i}(i.geo.azimuthalEquidistant=function(){return Or(Xr)}).raw=Xr,(i.geo.conicConformal=function(){return sr(Zr)}).raw=Zr,(i.geo.conicEquidistant=function(){return sr(Jr)}).raw=Jr;var ea=Kr((function(e){return 1/e}),Math.atan);function ta(e,t){return[e,Math.log(Math.tan(Ce/4+t/2))]}function na(e){var t,n=Or(e),r=n.scale,a=n.translate,i=n.clipExtent;return n.scale=function(){var e=r.apply(n,arguments);return e===n?t?n.clipExtent(null):n:e},n.translate=function(){var e=a.apply(n,arguments);return e===n?t?n.clipExtent(null):n:e},n.clipExtent=function(e){var o=i.apply(n,arguments);if(o===n){if(t=null==e){var u=Ce*r(),l=a();i([[l[0]-u,l[1]-u],[l[0]+u,l[1]+u]])}}else t&&(o=null);return o},n.clipExtent(null)}(i.geo.gnomonic=function(){return Or(ea)}).raw=ea,ta.invert=function(e,t){return[e,2*Math.atan(Math.exp(t))-Oe]},(i.geo.mercator=function(){return na(ta)}).raw=ta;var ra=Kr((function(){return 1}),Math.asin);(i.geo.orthographic=function(){return Or(ra)}).raw=ra;var aa=Kr((function(e){return 1/(1+e)}),(function(e){return 2*Math.atan(e)}));function ia(e,t){return[Math.log(Math.tan(Ce/4+t/2)),-e]}function oa(e){return e[0]}function ua(e){return e[1]}function la(e){for(var t=e.length,n=[0,1],r=2,a=2;a<t;a++){for(;r>1&&Re(e[n[r-2]],e[n[r-1]],e[a])<=0;)--r;n[r++]=a}return n.slice(0,r)}function sa(e,t){return e[0]-t[0]||e[1]-t[1]}(i.geo.stereographic=function(){return Or(aa)}).raw=aa,ia.invert=function(e,t){return[-t,2*Math.atan(Math.exp(e))-Oe]},(i.geo.transverseMercator=function(){var e=na(ia),t=e.center,n=e.rotate;return e.center=function(e){return e?t([-e[1],e[0]]):[(e=t())[1],-e[0]]},e.rotate=function(e){return e?n([e[0],e[1],e.length>2?e[2]+90:90]):[(e=n())[0],e[1],e[2]-90]},n([0,0,90])}).raw=ia,i.geom={},i.geom.hull=function(e){var t=oa,n=ua;if(arguments.length)return r(e);function r(e){if(e.length<3)return[];var r,a=yt(t),i=yt(n),o=e.length,u=[],l=[];for(r=0;r<o;r++)u.push([+a.call(this,e[r],r),+i.call(this,e[r],r),r]);for(u.sort(sa),r=0;r<o;r++)l.push([u[r][0],-u[r][1]]);var s=la(u),c=la(l),f=c[0]===s[0],p=c[c.length-1]===s[s.length-1],d=[];for(r=s.length-1;r>=0;--r)d.push(e[u[s[r]][2]]);for(r=+f;r<c.length-p;++r)d.push(e[u[c[r]][2]]);return d}return r.x=function(e){return arguments.length?(t=e,r):t},r.y=function(e){return arguments.length?(n=e,r):n},r},i.geom.polygon=function(e){return Y(e,ca),e};var ca=i.geom.polygon.prototype=[];function fa(e,t,n){return(n[0]-t[0])*(e[1]-t[1])<(n[1]-t[1])*(e[0]-t[0])}function pa(e,t,n,r){var a=e[0],i=n[0],o=t[0]-a,u=r[0]-i,l=e[1],s=n[1],c=t[1]-l,f=r[1]-s,p=(u*(l-s)-f*(a-i))/(f*o-u*c);return[a+p*o,l+p*c]}function da(e){var t=e[0],n=e[e.length-1];return!(t[0]-n[0]||t[1]-n[1])}ca.area=function(){for(var e,t=-1,n=this.length,r=this[n-1],a=0;++t<n;)e=r,r=this[t],a+=e[1]*r[0]-e[0]*r[1];return.5*a},ca.centroid=function(e){var t,n,r=-1,a=this.length,i=0,o=0,u=this[a-1];for(arguments.length||(e=-1/(6*this.area()));++r<a;)t=u,u=this[r],n=t[0]*u[1]-u[0]*t[1],i+=(t[0]+u[0])*n,o+=(t[1]+u[1])*n;return[i*e,o*e]},ca.clip=function(e){for(var t,n,r,a,i,o,u=da(e),l=-1,s=this.length-da(this),c=this[s-1];++l<s;){for(t=e.slice(),e.length=0,a=this[l],i=t[(r=t.length-u)-1],n=-1;++n<r;)fa(o=t[n],c,a)?(fa(i,c,a)||e.push(pa(i,o,c,a)),e.push(o)):fa(i,c,a)&&e.push(pa(i,o,c,a)),i=o;u&&e.push(e[0]),c=a}return e};var ha,ma,ga,va,ya,ba=[],xa=[];function Sa(){Va(this),this.edge=this.site=this.circle=null}function wa(e){var t=ba.pop()||new Sa;return t.site=e,t}function Aa(e){Da(e),ga.remove(e),ba.push(e),Va(e)}function Ea(e){var t=e.circle,n=t.x,r=t.cy,a={x:n,y:r},i=e.P,o=e.N,u=[e];Aa(e);for(var l=i;l.circle&&w(n-l.circle.x)<_e&&w(r-l.circle.cy)<_e;)i=l.P,u.unshift(l),Aa(l),l=i;u.unshift(l),Da(l);for(var s=o;s.circle&&w(n-s.circle.x)<_e&&w(r-s.circle.cy)<_e;)o=s.N,u.push(s),Aa(s),s=o;u.push(s),Da(s);var c,f=u.length;for(c=1;c<f;++c)s=u[c],l=u[c-1],Ra(s.edge,l.site,s.site,a);l=u[0],(s=u[f-1]).edge=za(l.site,s.site,null,a),Pa(l),Pa(s)}function Na(e){for(var t,n,r,a,i=e.x,o=e.y,u=ga._;u;)if((r=Ma(u,o)-i)>_e)u=u.L;else{if(!((a=i-ka(u,o))>_e)){r>-_e?(t=u.P,n=u):a>-_e?(t=u,n=u.N):t=n=u;break}if(!u.R){t=u;break}u=u.R}var l=wa(e);if(ga.insert(t,l),t||n){if(t===n)return Da(t),n=wa(t.site),ga.insert(l,n),l.edge=n.edge=za(t.site,l.site),Pa(t),void Pa(n);if(n){Da(t),Da(n);var s=t.site,c=s.x,f=s.y,p=e.x-c,d=e.y-f,h=n.site,m=h.x-c,g=h.y-f,v=2*(p*g-d*m),y=p*p+d*d,b=m*m+g*g,x={x:(g*y-d*b)/v+c,y:(p*b-m*y)/v+f};Ra(n.edge,s,h,x),l.edge=za(s,e,null,x),n.edge=za(e,h,null,x),Pa(t),Pa(n)}else l.edge=za(t.site,l.site)}}function Ma(e,t){var n=e.site,r=n.x,a=n.y,i=a-t;if(!i)return r;var o=e.P;if(!o)return-1/0;var u=(n=o.site).x,l=n.y,s=l-t;if(!s)return u;var c=u-r,f=1/i-1/s,p=c/s;return f?(-p+Math.sqrt(p*p-2*f*(c*c/(-2*s)-l+s/2+a-i/2)))/f+r:(r+u)/2}function ka(e,t){var n=e.N;if(n)return Ma(n,t);var r=e.site;return r.y===t?r.x:1/0}function _a(e){this.site=e,this.edges=[]}function Ta(e,t){return t.angle-e.angle}function Ca(){Va(this),this.x=this.y=this.arc=this.site=this.cy=null}function Pa(e){var t=e.P,n=e.N;if(t&&n){var r=t.site,a=e.site,i=n.site;if(r!==i){var o=a.x,u=a.y,l=r.x-o,s=r.y-u,c=i.x-o,f=2*(l*(g=i.y-u)-s*c);if(!(f>=-Te)){var p=l*l+s*s,d=c*c+g*g,h=(g*p-s*d)/f,m=(l*d-c*p)/f,g=m+u,v=xa.pop()||new Ca;v.arc=e,v.site=a,v.x=h+o,v.y=g+Math.sqrt(h*h+m*m),v.cy=g,e.circle=v;for(var y=null,b=ya._;b;)if(v.y<b.y||v.y===b.y&&v.x<=b.x){if(!b.L){y=b.P;break}b=b.L}else{if(!b.R){y=b;break}b=b.R}ya.insert(y,v),y||(va=v)}}}}function Da(e){var t=e.circle;t&&(t.P||(va=t.N),ya.remove(t),xa.push(t),Va(t),e.circle=null)}function Oa(e,t){var n=e.b;if(n)return!0;var r,a,i=e.a,o=t[0][0],u=t[1][0],l=t[0][1],s=t[1][1],c=e.l,f=e.r,p=c.x,d=c.y,h=f.x,m=f.y,g=(p+h)/2,v=(d+m)/2;if(m===d){if(g<o||g>=u)return;if(p>h){if(i){if(i.y>=s)return}else i={x:g,y:l};n={x:g,y:s}}else{if(i){if(i.y<l)return}else i={x:g,y:s};n={x:g,y:l}}}else if(a=v-(r=(p-h)/(m-d))*g,r<-1||r>1)if(p>h){if(i){if(i.y>=s)return}else i={x:(l-a)/r,y:l};n={x:(s-a)/r,y:s}}else{if(i){if(i.y<l)return}else i={x:(s-a)/r,y:s};n={x:(l-a)/r,y:l}}else if(d<m){if(i){if(i.x>=u)return}else i={x:o,y:r*o+a};n={x:u,y:r*u+a}}else{if(i){if(i.x<o)return}else i={x:u,y:r*u+a};n={x:o,y:r*o+a}}return e.a=i,e.b=n,!0}function Ia(e,t){this.l=e,this.r=t,this.a=this.b=null}function za(e,t,n,r){var a=new Ia(e,t);return ha.push(a),n&&Ra(a,e,t,n),r&&Ra(a,t,e,r),ma[e.i].edges.push(new Fa(a,e,t)),ma[t.i].edges.push(new Fa(a,t,e)),a}function La(e,t,n){var r=new Ia(e,null);return r.a=t,r.b=n,ha.push(r),r}function Ra(e,t,n,r){e.a||e.b?e.l===n?e.b=r:e.a=r:(e.a=r,e.l=t,e.r=n)}function Fa(e,t,n){var r=e.a,a=e.b;this.edge=e,this.site=t,this.angle=n?Math.atan2(n.y-t.y,n.x-t.x):e.l===t?Math.atan2(a.x-r.x,r.y-a.y):Math.atan2(r.x-a.x,a.y-r.y)}function ja(){this._=null}function Va(e){e.U=e.C=e.L=e.R=e.P=e.N=null}function Ua(e,t){var n=t,r=t.R,a=n.U;a?a.L===n?a.L=r:a.R=r:e._=r,r.U=a,n.U=r,n.R=r.L,n.R&&(n.R.U=n),r.L=n}function qa(e,t){var n=t,r=t.L,a=n.U;a?a.L===n?a.L=r:a.R=r:e._=r,r.U=a,n.U=r,n.L=r.R,n.L&&(n.L.U=n),r.R=n}function Ba(e){for(;e.L;)e=e.L;return e}function $a(e,t){var n,r,a,i=e.sort(Ya).pop();for(ha=[],ma=new Array(e.length),ga=new ja,ya=new ja;;)if(a=va,i&&(!a||i.y<a.y||i.y===a.y&&i.x<a.x))i.x===n&&i.y===r||(ma[i.i]=new _a(i),Na(i),n=i.x,r=i.y),i=e.pop();else{if(!a)break;Ea(a.arc)}t&&(function(e){for(var t,n=ha,r=ur(e[0][0],e[0][1],e[1][0],e[1][1]),a=n.length;a--;)(!Oa(t=n[a],e)||!r(t)||w(t.a.x-t.b.x)<_e&&w(t.a.y-t.b.y)<_e)&&(t.a=t.b=null,n.splice(a,1))}(t),function(e){for(var t,n,r,a,i,o,u,l,s,c,f=e[0][0],p=e[1][0],d=e[0][1],h=e[1][1],m=ma,g=m.length;g--;)if((i=m[g])&&i.prepare())for(l=(u=i.edges).length,o=0;o<l;)r=(c=u[o].end()).x,a=c.y,t=(s=u[++o%l].start()).x,n=s.y,(w(r-t)>_e||w(a-n)>_e)&&(u.splice(o,0,new Fa(La(i.site,c,w(r-f)<_e&&h-a>_e?{x:f,y:w(t-f)<_e?n:h}:w(a-h)<_e&&p-r>_e?{x:w(n-h)<_e?t:p,y:h}:w(r-p)<_e&&a-d>_e?{x:p,y:w(t-p)<_e?n:d}:w(a-d)<_e&&r-f>_e?{x:w(n-d)<_e?t:f,y:d}:null),i.site,null)),++l)}(t));var o={cells:ma,edges:ha};return ga=ya=ha=ma=null,o}function Ya(e,t){return t.y-e.y||t.x-e.x}_a.prototype.prepare=function(){for(var e,t=this.edges,n=t.length;n--;)(e=t[n].edge).b&&e.a||t.splice(n,1);return t.sort(Ta),t.length},Fa.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},ja.prototype={insert:function(e,t){var n,r,a;if(e){if(t.P=e,t.N=e.N,e.N&&(e.N.P=t),e.N=t,e.R){for(e=e.R;e.L;)e=e.L;e.L=t}else e.R=t;n=e}else this._?(e=Ba(this._),t.P=null,t.N=e,e.P=e.L=t,n=e):(t.P=t.N=null,this._=t,n=null);for(t.L=t.R=null,t.U=n,t.C=!0,e=t;n&&n.C;)n===(r=n.U).L?(a=r.R)&&a.C?(n.C=a.C=!1,r.C=!0,e=r):(e===n.R&&(Ua(this,n),n=(e=n).U),n.C=!1,r.C=!0,qa(this,r)):(a=r.L)&&a.C?(n.C=a.C=!1,r.C=!0,e=r):(e===n.L&&(qa(this,n),n=(e=n).U),n.C=!1,r.C=!0,Ua(this,r)),n=e.U;this._.C=!1},remove:function(e){e.N&&(e.N.P=e.P),e.P&&(e.P.N=e.N),e.N=e.P=null;var t,n,r,a=e.U,i=e.L,o=e.R;if(n=i?o?Ba(o):i:o,a?a.L===e?a.L=n:a.R=n:this._=n,i&&o?(r=n.C,n.C=e.C,n.L=i,i.U=n,n!==o?(a=n.U,n.U=e.U,e=n.R,a.L=e,n.R=o,o.U=n):(n.U=a,a=n,e=n.R)):(r=e.C,e=n),e&&(e.U=a),!r)if(e&&e.C)e.C=!1;else{do{if(e===this._)break;if(e===a.L){if((t=a.R).C&&(t.C=!1,a.C=!0,Ua(this,a),t=a.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,qa(this,t),t=a.R),t.C=a.C,a.C=t.R.C=!1,Ua(this,a),e=this._;break}}else if((t=a.L).C&&(t.C=!1,a.C=!0,qa(this,a),t=a.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,Ua(this,t),t=a.L),t.C=a.C,a.C=t.L.C=!1,qa(this,a),e=this._;break}t.C=!0,e=a,a=a.U}while(!e.C);e&&(e.C=!1)}}},i.geom.voronoi=function(e){var t=oa,n=ua,r=t,a=n,i=Ha;if(e)return o(e);function o(e){var t=new Array(e.length),n=i[0][0],r=i[0][1],a=i[1][0],o=i[1][1];return $a(u(e),i).cells.forEach((function(i,u){var l=i.edges,s=i.site;(t[u]=l.length?l.map((function(e){var t=e.start();return[t.x,t.y]})):s.x>=n&&s.x<=a&&s.y>=r&&s.y<=o?[[n,o],[a,o],[a,r],[n,r]]:[]).point=e[u]})),t}function u(e){return e.map((function(e,t){return{x:Math.round(r(e,t)/_e)*_e,y:Math.round(a(e,t)/_e)*_e,i:t}}))}return o.links=function(e){return $a(u(e)).edges.filter((function(e){return e.l&&e.r})).map((function(t){return{source:e[t.l.i],target:e[t.r.i]}}))},o.triangles=function(e){var t=[];return $a(u(e)).cells.forEach((function(n,r){for(var a,i,o,u,l=n.site,s=n.edges.sort(Ta),c=-1,f=s.length,p=s[f-1].edge,d=p.l===l?p.r:p.l;++c<f;)p,a=d,d=(p=s[c].edge).l===l?p.r:p.l,r<a.i&&r<d.i&&(o=a,u=d,((i=l).x-u.x)*(o.y-i.y)-(i.x-o.x)*(u.y-i.y)<0)&&t.push([e[r],e[a.i],e[d.i]])})),t},o.x=function(e){return arguments.length?(r=yt(t=e),o):t},o.y=function(e){return arguments.length?(a=yt(n=e),o):n},o.clipExtent=function(e){return arguments.length?(i=null==e?Ha:e,o):i===Ha?null:i},o.size=function(e){return arguments.length?o.clipExtent(e&&[[0,0],e]):i===Ha?null:i&&i[1]},o};var Ha=[[-1e6,-1e6],[1e6,1e6]];function Wa(e){return e.x}function Qa(e){return e.y}function Ka(e,t,n,r,a,i){if(!e(t,n,r,a,i)){var o=.5*(n+a),u=.5*(r+i),l=t.nodes;l[0]&&Ka(e,l[0],n,r,o,u),l[1]&&Ka(e,l[1],o,r,a,u),l[2]&&Ka(e,l[2],n,u,o,i),l[3]&&Ka(e,l[3],o,u,a,i)}}function Ga(e,t,n,r,a,i,o){var u,l=1/0;return function e(s,c,f,p,d){if(!(c>i||f>o||p<r||d<a)){if(h=s.point){var h,m=t-s.x,g=n-s.y,v=m*m+g*g;if(v<l){var y=Math.sqrt(l=v);r=t-y,a=n-y,i=t+y,o=n+y,u=h}}for(var b=s.nodes,x=.5*(c+p),S=.5*(f+d),w=(n>=S)<<1|t>=x,A=w+4;w<A;++w)if(s=b[3&w])switch(3&w){case 0:e(s,c,f,x,S);break;case 1:e(s,x,f,p,S);break;case 2:e(s,c,S,x,d);break;case 3:e(s,x,S,p,d)}}}(e,r,a,i,o),u}function Xa(e,t){e=i.rgb(e),t=i.rgb(t);var n=e.r,r=e.g,a=e.b,o=t.r-n,u=t.g-r,l=t.b-a;return function(e){return"#"+ft(Math.round(n+o*e))+ft(Math.round(r+u*e))+ft(Math.round(a+l*e))}}function Za(e,t){var n,r={},a={};for(n in e)n in t?r[n]=ri(e[n],t[n]):a[n]=e[n];for(n in t)n in e||(a[n]=t[n]);return function(e){for(n in r)a[n]=r[n](e);return a}}function Ja(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}function ei(e,t){var n,r,a,i=ti.lastIndex=ni.lastIndex=0,o=-1,u=[],l=[];for(e+="",t+="";(n=ti.exec(e))&&(r=ni.exec(t));)(a=r.index)>i&&(a=t.slice(i,a),u[o]?u[o]+=a:u[++o]=a),(n=n[0])===(r=r[0])?u[o]?u[o]+=r:u[++o]=r:(u[++o]=null,l.push({i:o,x:Ja(n,r)})),i=ni.lastIndex;return i<t.length&&(a=t.slice(i),u[o]?u[o]+=a:u[++o]=a),u.length<2?l[0]?(t=l[0].x,function(e){return t(e)+""}):function(){return t}:(t=l.length,function(e){for(var n,r=0;r<t;++r)u[(n=l[r]).i]=n.x(e);return u.join("")})}i.geom.delaunay=function(e){return i.geom.voronoi().triangles(e)},i.geom.quadtree=function(e,t,n,r,a){var i,o=oa,u=ua;if(i=arguments.length)return o=Wa,u=Qa,3===i&&(a=n,r=t,n=t=0),l(e);function l(e){var l,s,c,f,p,d,h,m,g,v=yt(o),y=yt(u);if(null!=t)d=t,h=n,m=r,g=a;else if(m=g=-(d=h=1/0),s=[],c=[],p=e.length,i)for(f=0;f<p;++f)(l=e[f]).x<d&&(d=l.x),l.y<h&&(h=l.y),l.x>m&&(m=l.x),l.y>g&&(g=l.y),s.push(l.x),c.push(l.y);else for(f=0;f<p;++f){var b=+v(l=e[f],f),x=+y(l,f);b<d&&(d=b),x<h&&(h=x),b>m&&(m=b),x>g&&(g=x),s.push(b),c.push(x)}var S=m-d,A=g-h;function E(e,t,n,r,a,i,o,u){if(!isNaN(n)&&!isNaN(r))if(e.leaf){var l=e.x,s=e.y;if(null!=l)if(w(l-n)+w(s-r)<.01)N(e,t,n,r,a,i,o,u);else{var c=e.point;e.x=e.y=e.point=null,N(e,c,l,s,a,i,o,u),N(e,t,n,r,a,i,o,u)}else e.x=n,e.y=r,e.point=t}else N(e,t,n,r,a,i,o,u)}function N(e,t,n,r,a,i,o,u){var l=.5*(a+o),s=.5*(i+u),c=n>=l,f=r>=s,p=f<<1|c;e.leaf=!1,c?a=l:o=l,f?i=s:u=s,E(e=e.nodes[p]||(e.nodes[p]={leaf:!0,nodes:[],point:null,x:null,y:null}),t,n,r,a,i,o,u)}S>A?g=h+S:m=d+A;var M={leaf:!0,nodes:[],point:null,x:null,y:null,add:function(e){E(M,e,+v(e,++f),+y(e,f),d,h,m,g)},visit:function(e){Ka(e,M,d,h,m,g)},find:function(e){return Ga(M,e[0],e[1],d,h,m,g)}};if(f=-1,null==t){for(;++f<p;)E(M,e[f],s[f],c[f],d,h,m,g);--f}else e.forEach(M.add);return s=c=e=l=null,M}return l.x=function(e){return arguments.length?(o=e,l):o},l.y=function(e){return arguments.length?(u=e,l):u},l.extent=function(e){return arguments.length?(null==e?t=n=r=a=null:(t=+e[0][0],n=+e[0][1],r=+e[1][0],a=+e[1][1]),l):null==t?null:[[t,n],[r,a]]},l.size=function(e){return arguments.length?(null==e?t=n=r=a=null:(t=n=0,r=+e[0],a=+e[1]),l):null==t?null:[r-t,a-n]},l},i.interpolateRgb=Xa,i.interpolateObject=Za,i.interpolateNumber=Ja,i.interpolateString=ei;var ti=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,ni=new RegExp(ti.source,"g");function ri(e,t){for(var n,r=i.interpolators.length;--r>=0&&!(n=i.interpolators[r](e,t)););return n}function ai(e,t){var n,r=[],a=[],i=e.length,o=t.length,u=Math.min(e.length,t.length);for(n=0;n<u;++n)r.push(ri(e[n],t[n]));for(;n<i;++n)a[n]=e[n];for(;n<o;++n)a[n]=t[n];return function(e){for(n=0;n<u;++n)a[n]=r[n](e);return a}}i.interpolate=ri,i.interpolators=[function(e,t){var n=typeof t;return("string"===n?vt.has(t.toLowerCase())||/^(#|rgb\(|hsl\()/i.test(t)?Xa:ei:t instanceof He?Xa:Array.isArray(t)?ai:"object"===n&&isNaN(t)?Za:Ja)(e,t)}],i.interpolateArray=ai;var ii=function(){return I},oi=i.map({linear:ii,poly:function(e){return function(t){return Math.pow(t,e)}},quad:function(){return fi},cubic:function(){return pi},sin:function(){return hi},exp:function(){return mi},circle:function(){return gi},elastic:function(e,t){var n;arguments.length<2&&(t=.45);arguments.length?n=t/Pe*Math.asin(1/e):(e=1,n=t/4);return function(r){return 1+e*Math.pow(2,-10*r)*Math.sin((r-n)*Pe/t)}},back:function(e){e||(e=1.70158);return function(t){return t*t*((e+1)*t-e)}},bounce:function(){return vi}}),ui=i.map({in:I,out:si,"in-out":ci,"out-in":function(e){return ci(si(e))}});function li(e){return function(t){return t<=0?0:t>=1?1:e(t)}}function si(e){return function(t){return 1-e(1-t)}}function ci(e){return function(t){return.5*(t<.5?e(2*t):2-e(2-2*t))}}function fi(e){return e*e}function pi(e){return e*e*e}function di(e){if(e<=0)return 0;if(e>=1)return 1;var t=e*e,n=t*e;return 4*(e<.5?n:3*(e-t)+n-.75)}function hi(e){return 1-Math.cos(e*Oe)}function mi(e){return Math.pow(2,10*(e-1))}function gi(e){return 1-Math.sqrt(1-e*e)}function vi(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375}function yi(e,t){return t-=e,function(n){return Math.round(e+t*n)}}function bi(e){var t,n,r,a=[e.a,e.b],i=[e.c,e.d],o=Si(a),u=xi(a,i),l=Si(((t=i)[0]+=(r=-u)*(n=a)[0],t[1]+=r*n[1],t))||0;a[0]*i[1]<i[0]*a[1]&&(a[0]*=-1,a[1]*=-1,o*=-1,u*=-1),this.rotate=(o?Math.atan2(a[1],a[0]):Math.atan2(-i[0],i[1]))*ze,this.translate=[e.e,e.f],this.scale=[o,l],this.skew=l?Math.atan2(u,l)*ze:0}function xi(e,t){return e[0]*t[0]+e[1]*t[1]}function Si(e){var t=Math.sqrt(xi(e,e));return t&&(e[0]/=t,e[1]/=t),t}i.ease=function(e){var t=e.indexOf("-"),n=t>=0?e.slice(0,t):e,r=t>=0?e.slice(t+1):"in";return n=oi.get(n)||ii,li((r=ui.get(r)||I)(n.apply(null,o.call(arguments,1))))},i.interpolateHcl=function(e,t){e=i.hcl(e),t=i.hcl(t);var n=e.h,r=e.c,a=e.l,o=t.h-n,u=t.c-r,l=t.l-a;isNaN(u)&&(u=0,r=isNaN(r)?t.c:r);isNaN(o)?(o=0,n=isNaN(n)?t.h:n):o>180?o-=360:o<-180&&(o+=360);return function(e){return Ze(n+o*e,r+u*e,a+l*e)+""}},i.interpolateHsl=function(e,t){e=i.hsl(e),t=i.hsl(t);var n=e.h,r=e.s,a=e.l,o=t.h-n,u=t.s-r,l=t.l-a;isNaN(u)&&(u=0,r=isNaN(r)?t.s:r);isNaN(o)?(o=0,n=isNaN(n)?t.h:n):o>180?o-=360:o<-180&&(o+=360);return function(e){return Ke(n+o*e,r+u*e,a+l*e)+""}},i.interpolateLab=function(e,t){e=i.lab(e),t=i.lab(t);var n=e.l,r=e.a,a=e.b,o=t.l-n,u=t.a-r,l=t.b-a;return function(e){return nt(n+o*e,r+u*e,a+l*e)+""}},i.interpolateRound=yi,i.transform=function(e){var t=l.createElementNS(i.ns.prefix.svg,"g");return(i.transform=function(e){if(null!=e){t.setAttribute("transform",e);var n=t.transform.baseVal.consolidate()}return new bi(n?n.matrix:wi)})(e)},bi.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var wi={a:1,b:0,c:0,d:1,e:0,f:0};function Ai(e){return e.length?e.pop()+",":""}function Ei(e,t){var n=[],r=[];return e=i.transform(e),t=i.transform(t),function(e,t,n,r){if(e[0]!==t[0]||e[1]!==t[1]){var a=n.push("translate(",null,",",null,")");r.push({i:a-4,x:Ja(e[0],t[0])},{i:a-2,x:Ja(e[1],t[1])})}else(t[0]||t[1])&&n.push("translate("+t+")")}(e.translate,t.translate,n,r),function(e,t,n,r){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),r.push({i:n.push(Ai(n)+"rotate(",null,")")-2,x:Ja(e,t)})):t&&n.push(Ai(n)+"rotate("+t+")")}(e.rotate,t.rotate,n,r),function(e,t,n,r){e!==t?r.push({i:n.push(Ai(n)+"skewX(",null,")")-2,x:Ja(e,t)}):t&&n.push(Ai(n)+"skewX("+t+")")}(e.skew,t.skew,n,r),function(e,t,n,r){if(e[0]!==t[0]||e[1]!==t[1]){var a=n.push(Ai(n)+"scale(",null,",",null,")");r.push({i:a-4,x:Ja(e[0],t[0])},{i:a-2,x:Ja(e[1],t[1])})}else 1===t[0]&&1===t[1]||n.push(Ai(n)+"scale("+t+")")}(e.scale,t.scale,n,r),e=t=null,function(e){for(var t,a=-1,i=r.length;++a<i;)n[(t=r[a]).i]=t.x(e);return n.join("")}}function Ni(e,t){return t=(t-=e=+e)||1/t,function(n){return(n-e)/t}}function Mi(e,t){return t=(t-=e=+e)||1/t,function(n){return Math.max(0,Math.min(1,(n-e)/t))}}function ki(e){for(var t=e.source,n=e.target,r=function(e,t){if(e===t)return e;var n=_i(e),r=_i(t),a=n.pop(),i=r.pop(),o=null;for(;a===i;)o=a,a=n.pop(),i=r.pop();return o}(t,n),a=[t];t!==r;)t=t.parent,a.push(t);for(var i=a.length;n!==r;)a.splice(i,0,n),n=n.parent;return a}function _i(e){for(var t=[],n=e.parent;null!=n;)t.push(e),e=n,n=n.parent;return t.push(e),t}function Ti(e){e.fixed|=2}function Ci(e){e.fixed&=-7}function Pi(e){e.fixed|=4,e.px=e.x,e.py=e.y}function Di(e){e.fixed&=-5}i.interpolateTransform=Ei,i.layout={},i.layout.bundle=function(){return function(e){for(var t=[],n=-1,r=e.length;++n<r;)t.push(ki(e[n]));return t}},i.layout.chord=function(){var e,t,n,r,a,o,u,l={},s=0;function c(){var l,c,p,d,h,m={},g=[],v=i.range(r),y=[];for(e=[],t=[],l=0,d=-1;++d<r;){for(c=0,h=-1;++h<r;)c+=n[d][h];g.push(c),y.push(i.range(r)),l+=c}for(a&&v.sort((function(e,t){return a(g[e],g[t])})),o&&y.forEach((function(e,t){e.sort((function(e,r){return o(n[t][e],n[t][r])}))})),l=(Pe-s*r)/l,c=0,d=-1;++d<r;){for(p=c,h=-1;++h<r;){var b=v[d],x=y[b][h],S=n[b][x],w=c,A=c+=S*l;m[b+"-"+x]={index:b,subindex:x,startAngle:w,endAngle:A,value:S}}t[b]={index:b,startAngle:p,endAngle:c,value:g[b]},c+=s}for(d=-1;++d<r;)for(h=d-1;++h<r;){var E=m[d+"-"+h],N=m[h+"-"+d];(E.value||N.value)&&e.push(E.value<N.value?{source:N,target:E}:{source:E,target:N})}u&&f()}function f(){e.sort((function(e,t){return u((e.source.value+e.target.value)/2,(t.source.value+t.target.value)/2)}))}return l.matrix=function(a){return arguments.length?(r=(n=a)&&n.length,e=t=null,l):n},l.padding=function(n){return arguments.length?(s=n,e=t=null,l):s},l.sortGroups=function(n){return arguments.length?(a=n,e=t=null,l):a},l.sortSubgroups=function(t){return arguments.length?(o=t,e=null,l):o},l.sortChords=function(t){return arguments.length?(u=t,e&&f(),l):u},l.chords=function(){return e||c(),e},l.groups=function(){return t||c(),t},l},i.layout.force=function(){var e,t,n,r,a,o,u={},l=i.dispatch("start","tick","end"),s=[1,1],c=.9,f=Oi,p=Ii,d=-30,h=zi,m=.1,g=.64,v=[],y=[];function b(e){return function(t,n,r,a){if(t.point!==e){var i=t.cx-e.x,o=t.cy-e.y,u=a-n,l=i*i+o*o;if(u*u/g<l){if(l<h){var s=t.charge/l;e.px-=i*s,e.py-=o*s}return!0}if(t.point&&l&&l<h){s=t.pointCharge/l;e.px-=i*s,e.py-=o*s}}return!t.charge}}function x(e){e.px=i.event.x,e.py=i.event.y,u.resume()}return u.tick=function(){if((n*=.99)<.005)return e=null,l.end({type:"end",alpha:n=0}),!0;var t,u,f,p,h,g,x,S,w,A=v.length,E=y.length;for(u=0;u<E;++u)p=(f=y[u]).source,(g=(S=(h=f.target).x-p.x)*S+(w=h.y-p.y)*w)&&(S*=g=n*a[u]*((g=Math.sqrt(g))-r[u])/g,w*=g,h.x-=S*(x=p.weight+h.weight?p.weight/(p.weight+h.weight):.5),h.y-=w*x,p.x+=S*(x=1-x),p.y+=w*x);if((x=n*m)&&(S=s[0]/2,w=s[1]/2,u=-1,x))for(;++u<A;)(f=v[u]).x+=(S-f.x)*x,f.y+=(w-f.y)*x;if(d)for(!function e(t,n,r){var a=0,i=0;if(t.charge=0,!t.leaf)for(var o,u=t.nodes,l=u.length,s=-1;++s<l;)null!=(o=u[s])&&(e(o,n,r),t.charge+=o.charge,a+=o.charge*o.cx,i+=o.charge*o.cy);if(t.point){t.leaf||(t.point.x+=Math.random()-.5,t.point.y+=Math.random()-.5);var c=n*r[t.point.index];t.charge+=t.pointCharge=c,a+=c*t.point.x,i+=c*t.point.y}t.cx=a/t.charge,t.cy=i/t.charge}(t=i.geom.quadtree(v),n,o),u=-1;++u<A;)(f=v[u]).fixed||t.visit(b(f));for(u=-1;++u<A;)(f=v[u]).fixed?(f.x=f.px,f.y=f.py):(f.x-=(f.px-(f.px=f.x))*c,f.y-=(f.py-(f.py=f.y))*c);l.tick({type:"tick",alpha:n})},u.nodes=function(e){return arguments.length?(v=e,u):v},u.links=function(e){return arguments.length?(y=e,u):y},u.size=function(e){return arguments.length?(s=e,u):s},u.linkDistance=function(e){return arguments.length?(f="function"==typeof e?e:+e,u):f},u.distance=u.linkDistance,u.linkStrength=function(e){return arguments.length?(p="function"==typeof e?e:+e,u):p},u.friction=function(e){return arguments.length?(c=+e,u):c},u.charge=function(e){return arguments.length?(d="function"==typeof e?e:+e,u):d},u.chargeDistance=function(e){return arguments.length?(h=e*e,u):Math.sqrt(h)},u.gravity=function(e){return arguments.length?(m=+e,u):m},u.theta=function(e){return arguments.length?(g=e*e,u):Math.sqrt(g)},u.alpha=function(t){return arguments.length?(t=+t,n?t>0?n=t:(e.c=null,e.t=NaN,e=null,l.end({type:"end",alpha:n=0})):t>0&&(l.start({type:"start",alpha:n=t}),e=Mt(u.tick)),u):n},u.start=function(){var e,t,n,i=v.length,l=y.length,c=s[0],h=s[1];for(e=0;e<i;++e)(n=v[e]).index=e,n.weight=0;for(e=0;e<l;++e)"number"==typeof(n=y[e]).source&&(n.source=v[n.source]),"number"==typeof n.target&&(n.target=v[n.target]),++n.source.weight,++n.target.weight;for(e=0;e<i;++e)n=v[e],isNaN(n.x)&&(n.x=m("x",c)),isNaN(n.y)&&(n.y=m("y",h)),isNaN(n.px)&&(n.px=n.x),isNaN(n.py)&&(n.py=n.y);if(r=[],"function"==typeof f)for(e=0;e<l;++e)r[e]=+f.call(this,y[e],e);else for(e=0;e<l;++e)r[e]=f;if(a=[],"function"==typeof p)for(e=0;e<l;++e)a[e]=+p.call(this,y[e],e);else for(e=0;e<l;++e)a[e]=p;if(o=[],"function"==typeof d)for(e=0;e<i;++e)o[e]=+d.call(this,v[e],e);else for(e=0;e<i;++e)o[e]=d;function m(n,r){if(!t){for(t=new Array(i),s=0;s<i;++s)t[s]=[];for(s=0;s<l;++s){var a=y[s];t[a.source.index].push(a.target),t[a.target.index].push(a.source)}}for(var o,u=t[e],s=-1,c=u.length;++s<c;)if(!isNaN(o=u[s][n]))return o;return Math.random()*r}return u.resume()},u.resume=function(){return u.alpha(.1)},u.stop=function(){return u.alpha(0)},u.drag=function(){if(t||(t=i.behavior.drag().origin(I).on("dragstart.force",Ti).on("drag.force",x).on("dragend.force",Ci)),!arguments.length)return t;this.on("mouseover.force",Pi).on("mouseout.force",Di).call(t)},i.rebind(u,l,"on")};var Oi=20,Ii=1,zi=1/0;function Li(e,t){return i.rebind(e,t,"sort","children","value"),e.nodes=e,e.links=qi,e}function Ri(e,t){for(var n=[e];null!=(e=n.pop());)if(t(e),(a=e.children)&&(r=a.length))for(var r,a;--r>=0;)n.push(a[r])}function Fi(e,t){for(var n=[e],r=[];null!=(e=n.pop());)if(r.push(e),(i=e.children)&&(a=i.length))for(var a,i,o=-1;++o<a;)n.push(i[o]);for(;null!=(e=r.pop());)t(e)}function ji(e){return e.children}function Vi(e){return e.value}function Ui(e,t){return t.value-e.value}function qi(e){return i.merge(e.map((function(e){return(e.children||[]).map((function(t){return{source:e,target:t}}))})))}i.layout.hierarchy=function(){var e=Ui,t=ji,n=Vi;function r(a){var i,o=[a],u=[];for(a.depth=0;null!=(i=o.pop());)if(u.push(i),(s=t.call(r,i,i.depth))&&(l=s.length)){for(var l,s,c;--l>=0;)o.push(c=s[l]),c.parent=i,c.depth=i.depth+1;n&&(i.value=0),i.children=s}else n&&(i.value=+n.call(r,i,i.depth)||0),delete i.children;return Fi(a,(function(t){var r,a;e&&(r=t.children)&&r.sort(e),n&&(a=t.parent)&&(a.value+=t.value)})),u}return r.sort=function(t){return arguments.length?(e=t,r):e},r.children=function(e){return arguments.length?(t=e,r):t},r.value=function(e){return arguments.length?(n=e,r):n},r.revalue=function(e){return n&&(Ri(e,(function(e){e.children&&(e.value=0)})),Fi(e,(function(e){var t;e.children||(e.value=+n.call(r,e,e.depth)||0),(t=e.parent)&&(t.value+=e.value)}))),e},r},i.layout.partition=function(){var e=i.layout.hierarchy(),t=[1,1];function n(n,r){var a=e.call(this,n,r);return function e(t,n,r,a){var i=t.children;if(t.x=n,t.y=t.depth*a,t.dx=r,t.dy=a,i&&(o=i.length)){var o,u,l,s=-1;for(r=t.value?r/t.value:0;++s<o;)e(u=i[s],n,l=u.value*r,a),n+=l}}(a[0],0,t[0],t[1]/function e(t){var n=t.children,r=0;if(n&&(a=n.length))for(var a,i=-1;++i<a;)r=Math.max(r,e(n[i]));return 1+r}(a[0])),a}return n.size=function(e){return arguments.length?(t=e,n):t},Li(n,e)},i.layout.pie=function(){var e=Number,t=Bi,n=0,r=Pe,a=0;function o(u){var l,s=u.length,c=u.map((function(t,n){return+e.call(o,t,n)})),f=+("function"==typeof n?n.apply(this,arguments):n),p=("function"==typeof r?r.apply(this,arguments):r)-f,d=Math.min(Math.abs(p)/s,+("function"==typeof a?a.apply(this,arguments):a)),h=d*(p<0?-1:1),m=i.sum(c),g=m?(p-s*h)/m:0,v=i.range(s),y=[];return null!=t&&v.sort(t===Bi?function(e,t){return c[t]-c[e]}:function(e,n){return t(u[e],u[n])}),v.forEach((function(e){y[e]={data:u[e],value:l=c[e],startAngle:f,endAngle:f+=l*g+h,padAngle:d}})),y}return o.value=function(t){return arguments.length?(e=t,o):e},o.sort=function(e){return arguments.length?(t=e,o):t},o.startAngle=function(e){return arguments.length?(n=e,o):n},o.endAngle=function(e){return arguments.length?(r=e,o):r},o.padAngle=function(e){return arguments.length?(a=e,o):a},o};var Bi={};function $i(e){return e.x}function Yi(e){return e.y}function Hi(e,t,n){e.y0=t,e.y=n}i.layout.stack=function(){var e=I,t=Ki,n=Gi,r=Hi,a=$i,o=Yi;function u(l,s){if(!(d=l.length))return l;var c=l.map((function(t,n){return e.call(u,t,n)})),f=c.map((function(e){return e.map((function(e,t){return[a.call(u,e,t),o.call(u,e,t)]}))})),p=t.call(u,f,s);c=i.permute(c,p),f=i.permute(f,p);var d,h,m,g,v=n.call(u,f,s),y=c[0].length;for(m=0;m<y;++m)for(r.call(u,c[0][m],g=v[m],f[0][m][1]),h=1;h<d;++h)r.call(u,c[h][m],g+=f[h-1][m][1],f[h][m][1]);return l}return u.values=function(t){return arguments.length?(e=t,u):e},u.order=function(e){return arguments.length?(t="function"==typeof e?e:Wi.get(e)||Ki,u):t},u.offset=function(e){return arguments.length?(n="function"==typeof e?e:Qi.get(e)||Gi,u):n},u.x=function(e){return arguments.length?(a=e,u):a},u.y=function(e){return arguments.length?(o=e,u):o},u.out=function(e){return arguments.length?(r=e,u):r},u};var Wi=i.map({"inside-out":function(e){var t,n,r=e.length,a=e.map(Xi),o=e.map(Zi),u=i.range(r).sort((function(e,t){return a[e]-a[t]})),l=0,s=0,c=[],f=[];for(t=0;t<r;++t)n=u[t],l<s?(l+=o[n],c.push(n)):(s+=o[n],f.push(n));return f.reverse().concat(c)},reverse:function(e){return i.range(e.length).reverse()},default:Ki}),Qi=i.map({silhouette:function(e){var t,n,r,a=e.length,i=e[0].length,o=[],u=0,l=[];for(n=0;n<i;++n){for(t=0,r=0;t<a;t++)r+=e[t][n][1];r>u&&(u=r),o.push(r)}for(n=0;n<i;++n)l[n]=(u-o[n])/2;return l},wiggle:function(e){var t,n,r,a,i,o,u,l,s,c=e.length,f=e[0],p=f.length,d=[];for(d[0]=l=s=0,n=1;n<p;++n){for(t=0,a=0;t<c;++t)a+=e[t][n][1];for(t=0,i=0,u=f[n][0]-f[n-1][0];t<c;++t){for(r=0,o=(e[t][n][1]-e[t][n-1][1])/(2*u);r<t;++r)o+=(e[r][n][1]-e[r][n-1][1])/u;i+=o*e[t][n][1]}d[n]=l-=a?i/a*u:0,l<s&&(s=l)}for(n=0;n<p;++n)d[n]-=s;return d},expand:function(e){var t,n,r,a=e.length,i=e[0].length,o=1/a,u=[];for(n=0;n<i;++n){for(t=0,r=0;t<a;t++)r+=e[t][n][1];if(r)for(t=0;t<a;t++)e[t][n][1]/=r;else for(t=0;t<a;t++)e[t][n][1]=o}for(n=0;n<i;++n)u[n]=0;return u},zero:Gi});function Ki(e){return i.range(e.length)}function Gi(e){for(var t=-1,n=e[0].length,r=[];++t<n;)r[t]=0;return r}function Xi(e){for(var t,n=1,r=0,a=e[0][1],i=e.length;n<i;++n)(t=e[n][1])>a&&(r=n,a=t);return r}function Zi(e){return e.reduce(Ji,0)}function Ji(e,t){return e+t[1]}function eo(e,t){return to(e,Math.ceil(Math.log(t.length)/Math.LN2+1))}function to(e,t){for(var n=-1,r=+e[0],a=(e[1]-r)/t,i=[];++n<=t;)i[n]=a*n+r;return i}function no(e){return[i.min(e),i.max(e)]}function ro(e,t){return e.value-t.value}function ao(e,t){var n=e._pack_next;e._pack_next=t,t._pack_prev=e,t._pack_next=n,n._pack_prev=t}function io(e,t){e._pack_next=t,t._pack_prev=e}function oo(e,t){var n=t.x-e.x,r=t.y-e.y,a=e.r+t.r;return.999*a*a>n*n+r*r}function uo(e){if((t=e.children)&&(l=t.length)){var t,n,r,a,i,o,u,l,s=1/0,c=-1/0,f=1/0,p=-1/0;if(t.forEach(lo),(n=t[0]).x=-n.r,n.y=0,b(n),l>1&&((r=t[1]).x=r.r,r.y=0,b(r),l>2))for(co(n,r,a=t[2]),b(a),ao(n,a),n._pack_prev=a,ao(a,r),r=n._pack_next,i=3;i<l;i++){co(n,r,a=t[i]);var d=0,h=1,m=1;for(o=r._pack_next;o!==r;o=o._pack_next,h++)if(oo(o,a)){d=1;break}if(1==d)for(u=n._pack_prev;u!==o._pack_prev&&!oo(u,a);u=u._pack_prev,m++);d?(h<m||h==m&&r.r<n.r?io(n,r=o):io(n=u,r),i--):(ao(n,a),r=a,b(a))}var g=(s+c)/2,v=(f+p)/2,y=0;for(i=0;i<l;i++)(a=t[i]).x-=g,a.y-=v,y=Math.max(y,a.r+Math.sqrt(a.x*a.x+a.y*a.y));e.r=y,t.forEach(so)}function b(e){s=Math.min(e.x-e.r,s),c=Math.max(e.x+e.r,c),f=Math.min(e.y-e.r,f),p=Math.max(e.y+e.r,p)}}function lo(e){e._pack_next=e._pack_prev=e}function so(e){delete e._pack_next,delete e._pack_prev}function co(e,t,n){var r=e.r+n.r,a=t.x-e.x,i=t.y-e.y;if(r&&(a||i)){var o=t.r+n.r,u=a*a+i*i,l=.5+((r*=r)-(o*=o))/(2*u),s=Math.sqrt(Math.max(0,2*o*(r+u)-(r-=u)*r-o*o))/(2*u);n.x=e.x+l*a+s*i,n.y=e.y+l*i-s*a}else n.x=e.x+r,n.y=e.y}function fo(e,t){return e.parent==t.parent?1:2}function po(e){var t=e.children;return t.length?t[0]:e.t}function ho(e){var t,n=e.children;return(t=n.length)?n[t-1]:e.t}function mo(e,t,n){var r=n/(t.i-e.i);t.c-=r,t.s+=n,e.c+=r,t.z+=n,t.m+=n}function go(e,t,n){return e.a.parent===t.parent?e.a:n}function vo(e){return{x:e.x,y:e.y,dx:e.dx,dy:e.dy}}function yo(e,t){var n=e.x+t[3],r=e.y+t[0],a=e.dx-t[1]-t[3],i=e.dy-t[0]-t[2];return a<0&&(n+=a/2,a=0),i<0&&(r+=i/2,i=0),{x:n,y:r,dx:a,dy:i}}function bo(e){var t=e[0],n=e[e.length-1];return t<n?[t,n]:[n,t]}function xo(e){return e.rangeExtent?e.rangeExtent():bo(e.range())}function So(e,t,n,r){var a=n(e[0],e[1]),i=r(t[0],t[1]);return function(e){return i(a(e))}}function wo(e,t){var n,r=0,a=e.length-1,i=e[r],o=e[a];return o<i&&(n=r,r=a,a=n,n=i,i=o,o=n),e[r]=t.floor(i),e[a]=t.ceil(o),e}function Ao(e){return e?{floor:function(t){return Math.floor(t/e)*e},ceil:function(t){return Math.ceil(t/e)*e}}:Eo}i.layout.histogram=function(){var e=!0,t=Number,n=no,r=eo;function a(a,o){for(var u,l,s=[],c=a.map(t,this),f=n.call(this,c,o),p=r.call(this,f,c,o),d=(o=-1,c.length),h=p.length-1,m=e?1:1/d;++o<h;)(u=s[o]=[]).dx=p[o+1]-(u.x=p[o]),u.y=0;if(h>0)for(o=-1;++o<d;)(l=c[o])>=f[0]&&l<=f[1]&&((u=s[i.bisect(p,l,1,h)-1]).y+=m,u.push(a[o]));return s}return a.value=function(e){return arguments.length?(t=e,a):t},a.range=function(e){return arguments.length?(n=yt(e),a):n},a.bins=function(e){return arguments.length?(r="number"==typeof e?function(t){return to(t,e)}:yt(e),a):r},a.frequency=function(t){return arguments.length?(e=!!t,a):e},a},i.layout.pack=function(){var e,t=i.layout.hierarchy().sort(ro),n=0,r=[1,1];function a(a,i){var o=t.call(this,a,i),u=o[0],l=r[0],s=r[1],c=null==e?Math.sqrt:"function"==typeof e?e:function(){return e};if(u.x=u.y=0,Fi(u,(function(e){e.r=+c(e.value)})),Fi(u,uo),n){var f=n*(e?1:Math.max(2*u.r/l,2*u.r/s))/2;Fi(u,(function(e){e.r+=f})),Fi(u,uo),Fi(u,(function(e){e.r-=f}))}return function e(t,n,r,a){var i=t.children;if(t.x=n+=a*t.x,t.y=r+=a*t.y,t.r*=a,i)for(var o=-1,u=i.length;++o<u;)e(i[o],n,r,a)}(u,l/2,s/2,e?1:1/Math.max(2*u.r/l,2*u.r/s)),o}return a.size=function(e){return arguments.length?(r=e,a):r},a.radius=function(t){return arguments.length?(e=null==t||"function"==typeof t?t:+t,a):e},a.padding=function(e){return arguments.length?(n=+e,a):n},Li(a,t)},i.layout.tree=function(){var e=i.layout.hierarchy().sort(null).value(null),t=fo,n=[1,1],r=null;function a(a,i){var s=e.call(this,a,i),c=s[0],f=function(e){var t,n={A:null,children:[e]},r=[n];for(;null!=(t=r.pop());)for(var a,i=t.children,o=0,u=i.length;o<u;++o)r.push((i[o]=a={_:i[o],parent:t,children:(a=i[o].children)&&a.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:o}).a=a);return n.children[0]}(c);if(Fi(f,o),f.parent.m=-f.z,Ri(f,u),r)Ri(c,l);else{var p=c,d=c,h=c;Ri(c,(function(e){e.x<p.x&&(p=e),e.x>d.x&&(d=e),e.depth>h.depth&&(h=e)}));var m=t(p,d)/2-p.x,g=n[0]/(d.x+t(d,p)/2+m),v=n[1]/(h.depth||1);Ri(c,(function(e){e.x=(e.x+m)*g,e.y=e.depth*v}))}return s}function o(e){var n=e.children,r=e.parent.children,a=e.i?r[e.i-1]:null;if(n.length){!function(e){var t,n=0,r=0,a=e.children,i=a.length;for(;--i>=0;)(t=a[i]).z+=n,t.m+=n,n+=t.s+(r+=t.c)}(e);var i=(n[0].z+n[n.length-1].z)/2;a?(e.z=a.z+t(e._,a._),e.m=e.z-i):e.z=i}else a&&(e.z=a.z+t(e._,a._));e.parent.A=function(e,n,r){if(n){for(var a,i=e,o=e,u=n,l=i.parent.children[0],s=i.m,c=o.m,f=u.m,p=l.m;u=ho(u),i=po(i),u&&i;)l=po(l),(o=ho(o)).a=e,(a=u.z+f-i.z-s+t(u._,i._))>0&&(mo(go(u,e,r),e,a),s+=a,c+=a),f+=u.m,s+=i.m,p+=l.m,c+=o.m;u&&!ho(o)&&(o.t=u,o.m+=f-c),i&&!po(l)&&(l.t=i,l.m+=s-p,r=e)}return r}(e,a,e.parent.A||r[0])}function u(e){e._.x=e.z+e.parent.m,e.m+=e.parent.m}function l(e){e.x*=n[0],e.y=e.depth*n[1]}return a.separation=function(e){return arguments.length?(t=e,a):t},a.size=function(e){return arguments.length?(r=null==(n=e)?l:null,a):r?null:n},a.nodeSize=function(e){return arguments.length?(r=null==(n=e)?null:l,a):r?n:null},Li(a,e)},i.layout.cluster=function(){var e=i.layout.hierarchy().sort(null).value(null),t=fo,n=[1,1],r=!1;function a(a,o){var u,l=e.call(this,a,o),s=l[0],c=0;Fi(s,(function(e){var n=e.children;n&&n.length?(e.x=function(e){return e.reduce((function(e,t){return e+t.x}),0)/e.length}(n),e.y=function(e){return 1+i.max(e,(function(e){return e.y}))}(n)):(e.x=u?c+=t(e,u):0,e.y=0,u=e)}));var f=function e(t){var n=t.children;return n&&n.length?e(n[0]):t}(s),p=function e(t){var n,r=t.children;return r&&(n=r.length)?e(r[n-1]):t}(s),d=f.x-t(f,p)/2,h=p.x+t(p,f)/2;return Fi(s,r?function(e){e.x=(e.x-s.x)*n[0],e.y=(s.y-e.y)*n[1]}:function(e){e.x=(e.x-d)/(h-d)*n[0],e.y=(1-(s.y?e.y/s.y:1))*n[1]}),l}return a.separation=function(e){return arguments.length?(t=e,a):t},a.size=function(e){return arguments.length?(r=null==(n=e),a):r?null:n},a.nodeSize=function(e){return arguments.length?(r=null!=(n=e),a):r?n:null},Li(a,e)},i.layout.treemap=function(){var e,t=i.layout.hierarchy(),n=Math.round,r=[1,1],a=null,o=vo,u=!1,l="squarify",s=.5*(1+Math.sqrt(5));function c(e,t){for(var n,r,a=-1,i=e.length;++a<i;)r=(n=e[a]).value*(t<0?0:t),n.area=isNaN(r)||r<=0?0:r}function f(e){var t=e.children;if(t&&t.length){var n,r,a,i=o(e),u=[],s=t.slice(),p=1/0,m="slice"===l?i.dx:"dice"===l?i.dy:"slice-dice"===l?1&e.depth?i.dy:i.dx:Math.min(i.dx,i.dy);for(c(s,i.dx*i.dy/e.value),u.area=0;(a=s.length)>0;)u.push(n=s[a-1]),u.area+=n.area,"squarify"!==l||(r=d(u,m))<=p?(s.pop(),p=r):(u.area-=u.pop().area,h(u,m,i,!1),m=Math.min(i.dx,i.dy),u.length=u.area=0,p=1/0);u.length&&(h(u,m,i,!0),u.length=u.area=0),t.forEach(f)}}function p(e){var t=e.children;if(t&&t.length){var n,r=o(e),a=t.slice(),i=[];for(c(a,r.dx*r.dy/e.value),i.area=0;n=a.pop();)i.push(n),i.area+=n.area,null!=n.z&&(h(i,n.z?r.dx:r.dy,r,!a.length),i.length=i.area=0);t.forEach(p)}}function d(e,t){for(var n,r=e.area,a=0,i=1/0,o=-1,u=e.length;++o<u;)(n=e[o].area)&&(n<i&&(i=n),n>a&&(a=n));return t*=t,(r*=r)?Math.max(t*a*s/r,r/(t*i*s)):1/0}function h(e,t,r,a){var i,o=-1,u=e.length,l=r.x,s=r.y,c=t?n(e.area/t):0;if(t==r.dx){for((a||c>r.dy)&&(c=r.dy);++o<u;)(i=e[o]).x=l,i.y=s,i.dy=c,l+=i.dx=Math.min(r.x+r.dx-l,c?n(i.area/c):0);i.z=!0,i.dx+=r.x+r.dx-l,r.y+=c,r.dy-=c}else{for((a||c>r.dx)&&(c=r.dx);++o<u;)(i=e[o]).x=l,i.y=s,i.dx=c,s+=i.dy=Math.min(r.y+r.dy-s,c?n(i.area/c):0);i.z=!1,i.dy+=r.y+r.dy-s,r.x+=c,r.dx-=c}}function m(n){var a=e||t(n),i=a[0];return i.x=i.y=0,i.value?(i.dx=r[0],i.dy=r[1]):i.dx=i.dy=0,e&&t.revalue(i),c([i],i.dx*i.dy/i.value),(e?p:f)(i),u&&(e=a),a}return m.size=function(e){return arguments.length?(r=e,m):r},m.padding=function(e){if(!arguments.length)return a;function t(t){var n=e.call(m,t,t.depth);return null==n?vo(t):yo(t,"number"==typeof n?[n,n,n,n]:n)}function n(t){return yo(t,e)}var r;return o=null==(a=e)?vo:"function"==(r=typeof e)?t:"number"===r?(e=[e,e,e,e],n):n,m},m.round=function(e){return arguments.length?(n=e?Math.round:Number,m):n!=Number},m.sticky=function(t){return arguments.length?(u=t,e=null,m):u},m.ratio=function(e){return arguments.length?(s=e,m):s},m.mode=function(e){return arguments.length?(l=e+"",m):l},Li(m,t)},i.random={normal:function(e,t){var n=arguments.length;return n<2&&(t=1),n<1&&(e=0),function(){var n,r,a;do{a=(n=2*Math.random()-1)*n+(r=2*Math.random()-1)*r}while(!a||a>1);return e+t*n*Math.sqrt(-2*Math.log(a)/a)}},logNormal:function(){var e=i.random.normal.apply(i,arguments);return function(){return Math.exp(e())}},bates:function(e){var t=i.random.irwinHall(e);return function(){return t()/e}},irwinHall:function(e){return function(){for(var t=0,n=0;n<e;n++)t+=Math.random();return t}}},i.scale={};var Eo={floor:I,ceil:I};function No(e,t,n,r){var a=[],o=[],u=0,l=Math.min(e.length,t.length)-1;for(e[l]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++u<=l;)a.push(n(e[u-1],e[u])),o.push(r(t[u-1],t[u]));return function(t){var n=i.bisect(e,t,1,l)-1;return o[n](a[n](t))}}function Mo(e,t){return i.rebind(e,t,"range","rangeRound","interpolate","clamp")}function ko(e,t){return wo(e,Ao(_o(e,t)[2])),wo(e,Ao(_o(e,t)[2])),e}function _o(e,t){null==t&&(t=10);var n=bo(e),r=n[1]-n[0],a=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),i=t/r*a;return i<=.15?a*=10:i<=.35?a*=5:i<=.75&&(a*=2),n[0]=Math.ceil(n[0]/a)*a,n[1]=Math.floor(n[1]/a)*a+.5*a,n[2]=a,n}function To(e,t){return i.range.apply(i,_o(e,t))}function Co(e,t,n){var r=_o(e,t);if(n){var a=Ot.exec(n);if(a.shift(),"s"===a[8]){var o=i.formatPrefix(Math.max(w(r[0]),w(r[1])));return a[7]||(a[7]="."+Do(o.scale(r[2]))),a[8]="f",n=i.format(a.join("")),function(e){return n(o.scale(e))+o.symbol}}a[7]||(a[7]="."+function(e,t){var n=Do(t[2]);return e in Po?Math.abs(n-Do(Math.max(w(t[0]),w(t[1]))))+ +("e"!==e):n-2*("%"===e)}(a[8],r)),n=a.join("")}else n=",."+Do(r[2])+"f";return i.format(n)}i.scale.linear=function(){return function e(t,n,r,a){var i,o;function u(){var e=Math.min(t.length,n.length)>2?No:So,u=a?Mi:Ni;return i=e(t,n,u,r),o=e(n,t,u,ri),l}function l(e){return i(e)}return l.invert=function(e){return o(e)},l.domain=function(e){return arguments.length?(t=e.map(Number),u()):t},l.range=function(e){return arguments.length?(n=e,u()):n},l.rangeRound=function(e){return l.range(e).interpolate(yi)},l.clamp=function(e){return arguments.length?(a=e,u()):a},l.interpolate=function(e){return arguments.length?(r=e,u()):r},l.ticks=function(e){return To(t,e)},l.tickFormat=function(e,n){return Co(t,e,n)},l.nice=function(e){return ko(t,e),u()},l.copy=function(){return e(t,n,r,a)},u()}([0,1],[0,1],ri,!1)};var Po={s:1,g:1,p:1,r:1,e:1};function Do(e){return-Math.floor(Math.log(e)/Math.LN10+.01)}i.scale.log=function(){return function e(t,n,r,a){function o(e){return(r?Math.log(e<0?0:e):-Math.log(e>0?0:-e))/Math.log(n)}function u(e){return r?Math.pow(n,e):-Math.pow(n,-e)}function l(e){return t(o(e))}return l.invert=function(e){return u(t.invert(e))},l.domain=function(e){return arguments.length?(r=e[0]>=0,t.domain((a=e.map(Number)).map(o)),l):a},l.base=function(e){return arguments.length?(n=+e,t.domain(a.map(o)),l):n},l.nice=function(){var e=wo(a.map(o),r?Math:Io);return t.domain(e),a=e.map(u),l},l.ticks=function(){var e=bo(a),t=[],i=e[0],l=e[1],s=Math.floor(o(i)),c=Math.ceil(o(l)),f=n%1?2:n;if(isFinite(c-s)){if(r){for(;s<c;s++)for(var p=1;p<f;p++)t.push(u(s)*p);t.push(u(s))}else for(t.push(u(s));s++<c;)for(p=f-1;p>0;p--)t.push(u(s)*p);for(s=0;t[s]<i;s++);for(c=t.length;t[c-1]>l;c--);t=t.slice(s,c)}return t},l.tickFormat=function(e,t){if(!arguments.length)return Oo;arguments.length<2?t=Oo:"function"!=typeof t&&(t=i.format(t));var r=Math.max(1,n*e/l.ticks().length);return function(e){var a=e/u(Math.round(o(e)));return a*n<n-.5&&(a*=n),a<=r?t(e):""}},l.copy=function(){return e(t.copy(),n,r,a)},Mo(l,t)}(i.scale.linear().domain([0,1]),10,!0,[1,10])};var Oo=i.format(".0e"),Io={floor:function(e){return-Math.ceil(-e)},ceil:function(e){return-Math.floor(-e)}};function zo(e){return function(t){return t<0?-Math.pow(-t,e):Math.pow(t,e)}}i.scale.pow=function(){return function e(t,n,r){var a=zo(n),i=zo(1/n);function o(e){return t(a(e))}return o.invert=function(e){return i(t.invert(e))},o.domain=function(e){return arguments.length?(t.domain((r=e.map(Number)).map(a)),o):r},o.ticks=function(e){return To(r,e)},o.tickFormat=function(e,t){return Co(r,e,t)},o.nice=function(e){return o.domain(ko(r,e))},o.exponent=function(e){return arguments.length?(a=zo(n=e),i=zo(1/n),t.domain(r.map(a)),o):n},o.copy=function(){return e(t.copy(),n,r)},Mo(o,t)}(i.scale.linear(),1,[0,1])},i.scale.sqrt=function(){return i.scale.pow().exponent(.5)},i.scale.ordinal=function(){return function e(t,n){var r,a,o;function u(e){return a[((r.get(e)||("range"===n.t?r.set(e,t.push(e)):NaN))-1)%a.length]}function l(e,n){return i.range(t.length).map((function(t){return e+n*t}))}return u.domain=function(e){if(!arguments.length)return t;t=[],r=new N;for(var a,i=-1,o=e.length;++i<o;)r.has(a=e[i])||r.set(a,t.push(a));return u[n.t].apply(u,n.a)},u.range=function(e){return arguments.length?(a=e,o=0,n={t:"range",a:arguments},u):a},u.rangePoints=function(e,r){arguments.length<2&&(r=0);var i=e[0],s=e[1],c=t.length<2?(i=(i+s)/2,0):(s-i)/(t.length-1+r);return a=l(i+c*r/2,c),o=0,n={t:"rangePoints",a:arguments},u},u.rangeRoundPoints=function(e,r){arguments.length<2&&(r=0);var i=e[0],s=e[1],c=t.length<2?(i=s=Math.round((i+s)/2),0):(s-i)/(t.length-1+r)|0;return a=l(i+Math.round(c*r/2+(s-i-(t.length-1+r)*c)/2),c),o=0,n={t:"rangeRoundPoints",a:arguments},u},u.rangeBands=function(e,r,i){arguments.length<2&&(r=0),arguments.length<3&&(i=r);var s=e[1]<e[0],c=e[s-0],f=e[1-s],p=(f-c)/(t.length-r+2*i);return a=l(c+p*i,p),s&&a.reverse(),o=p*(1-r),n={t:"rangeBands",a:arguments},u},u.rangeRoundBands=function(e,r,i){arguments.length<2&&(r=0),arguments.length<3&&(i=r);var s=e[1]<e[0],c=e[s-0],f=e[1-s],p=Math.floor((f-c)/(t.length-r+2*i));return a=l(c+Math.round((f-c-(t.length-r)*p)/2),p),s&&a.reverse(),o=Math.round(p*(1-r)),n={t:"rangeRoundBands",a:arguments},u},u.rangeBand=function(){return o},u.rangeExtent=function(){return bo(n.a[0])},u.copy=function(){return e(t,n)},u.domain(t)}([],{t:"range",a:[[]]})},i.scale.category10=function(){return i.scale.ordinal().range(Lo)},i.scale.category20=function(){return i.scale.ordinal().range(Ro)},i.scale.category20b=function(){return i.scale.ordinal().range(Fo)},i.scale.category20c=function(){return i.scale.ordinal().range(jo)};var Lo=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(st),Ro=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(st),Fo=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(st),jo=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(st);function Vo(){return 0}i.scale.quantile=function(){return function e(t,n){var r;function a(){var e=0,a=n.length;for(r=[];++e<a;)r[e-1]=i.quantile(t,e/a);return o}function o(e){if(!isNaN(e=+e))return n[i.bisect(r,e)]}return o.domain=function(e){return arguments.length?(t=e.map(v).filter(y).sort(g),a()):t},o.range=function(e){return arguments.length?(n=e,a()):n},o.quantiles=function(){return r},o.invertExtent=function(e){return(e=n.indexOf(e))<0?[NaN,NaN]:[e>0?r[e-1]:t[0],e<r.length?r[e]:t[t.length-1]]},o.copy=function(){return e(t,n)},a()}([],[])},i.scale.quantize=function(){return function e(t,n,r){var a,i;function o(e){return r[Math.max(0,Math.min(i,Math.floor(a*(e-t))))]}function u(){return a=r.length/(n-t),i=r.length-1,o}return o.domain=function(e){return arguments.length?(t=+e[0],n=+e[e.length-1],u()):[t,n]},o.range=function(e){return arguments.length?(r=e,u()):r},o.invertExtent=function(e){return[e=(e=r.indexOf(e))<0?NaN:e/a+t,e+1/a]},o.copy=function(){return e(t,n,r)},u()}(0,1,[0,1])},i.scale.threshold=function(){return function e(t,n){function r(e){if(e<=e)return n[i.bisect(t,e)]}return r.domain=function(e){return arguments.length?(t=e,r):t},r.range=function(e){return arguments.length?(n=e,r):n},r.invertExtent=function(e){return e=n.indexOf(e),[t[e-1],t[e]]},r.copy=function(){return e(t,n)},r}([.5],[0,1])},i.scale.identity=function(){return function e(t){function n(e){return+e}return n.invert=n,n.domain=n.range=function(e){return arguments.length?(t=e.map(n),n):t},n.ticks=function(e){return To(t,e)},n.tickFormat=function(e,n){return Co(t,e,n)},n.copy=function(){return e(t)},n}([0,1])},i.svg={},i.svg.arc=function(){var e=qo,t=Bo,n=Vo,r=Uo,a=$o,i=Yo,o=Ho;function u(){var u=Math.max(0,+e.apply(this,arguments)),s=Math.max(0,+t.apply(this,arguments)),c=a.apply(this,arguments)-Oe,f=i.apply(this,arguments)-Oe,p=Math.abs(f-c),d=c>f?0:1;if(s<u&&(h=s,s=u,u=h),p>=De)return l(s,d)+(u?l(u,1-d):"")+"Z";var h,m,g,v,y,b,x,S,w,A,E,N,M=0,k=0,_=[];if((v=(+o.apply(this,arguments)||0)/2)&&(g=r===Uo?Math.sqrt(u*u+s*s):+r.apply(this,arguments),d||(k*=-1),s&&(k=je(g/s*Math.sin(v))),u&&(M=je(g/u*Math.sin(v)))),s){y=s*Math.cos(c+k),b=s*Math.sin(c+k),x=s*Math.cos(f-k),S=s*Math.sin(f-k);var T=Math.abs(f-c-2*k)<=Ce?0:1;if(k&&Wo(y,b,x,S)===d^T){var C=(c+f)/2;y=s*Math.cos(C),b=s*Math.sin(C),x=S=null}}else y=b=0;if(u){w=u*Math.cos(f-M),A=u*Math.sin(f-M),E=u*Math.cos(c+M),N=u*Math.sin(c+M);var P=Math.abs(c-f+2*M)<=Ce?0:1;if(M&&Wo(w,A,E,N)===1-d^P){var D=(c+f)/2;w=u*Math.cos(D),A=u*Math.sin(D),E=N=null}}else w=A=0;if(p>_e&&(h=Math.min(Math.abs(s-u)/2,+n.apply(this,arguments)))>.001){m=u<s^d?0:1;var O=h,I=h;if(p<Ce){var z=null==E?[w,A]:null==x?[y,b]:pa([y,b],[E,N],[x,S],[w,A]),L=y-z[0],R=b-z[1],F=x-z[0],j=S-z[1],V=1/Math.sin(Math.acos((L*F+R*j)/(Math.sqrt(L*L+R*R)*Math.sqrt(F*F+j*j)))/2),U=Math.sqrt(z[0]*z[0]+z[1]*z[1]);I=Math.min(h,(u-U)/(V-1)),O=Math.min(h,(s-U)/(V+1))}if(null!=x){var q=Qo(null==E?[w,A]:[E,N],[y,b],s,O,d),B=Qo([x,S],[w,A],s,O,d);h===O?_.push("M",q[0],"A",O,",",O," 0 0,",m," ",q[1],"A",s,",",s," 0 ",1-d^Wo(q[1][0],q[1][1],B[1][0],B[1][1]),",",d," ",B[1],"A",O,",",O," 0 0,",m," ",B[0]):_.push("M",q[0],"A",O,",",O," 0 1,",m," ",B[0])}else _.push("M",y,",",b);if(null!=E){var $=Qo([y,b],[E,N],u,-I,d),Y=Qo([w,A],null==x?[y,b]:[x,S],u,-I,d);h===I?_.push("L",Y[0],"A",I,",",I," 0 0,",m," ",Y[1],"A",u,",",u," 0 ",d^Wo(Y[1][0],Y[1][1],$[1][0],$[1][1]),",",1-d," ",$[1],"A",I,",",I," 0 0,",m," ",$[0]):_.push("L",Y[0],"A",I,",",I," 0 0,",m," ",$[0])}else _.push("L",w,",",A)}else _.push("M",y,",",b),null!=x&&_.push("A",s,",",s," 0 ",T,",",d," ",x,",",S),_.push("L",w,",",A),null!=E&&_.push("A",u,",",u," 0 ",P,",",1-d," ",E,",",N);return _.push("Z"),_.join("")}function l(e,t){return"M0,"+e+"A"+e+","+e+" 0 1,"+t+" 0,"+-e+"A"+e+","+e+" 0 1,"+t+" 0,"+e}return u.innerRadius=function(t){return arguments.length?(e=yt(t),u):e},u.outerRadius=function(e){return arguments.length?(t=yt(e),u):t},u.cornerRadius=function(e){return arguments.length?(n=yt(e),u):n},u.padRadius=function(e){return arguments.length?(r=e==Uo?Uo:yt(e),u):r},u.startAngle=function(e){return arguments.length?(a=yt(e),u):a},u.endAngle=function(e){return arguments.length?(i=yt(e),u):i},u.padAngle=function(e){return arguments.length?(o=yt(e),u):o},u.centroid=function(){var n=(+e.apply(this,arguments)+ +t.apply(this,arguments))/2,r=(+a.apply(this,arguments)+ +i.apply(this,arguments))/2-Oe;return[Math.cos(r)*n,Math.sin(r)*n]},u};var Uo="auto";function qo(e){return e.innerRadius}function Bo(e){return e.outerRadius}function $o(e){return e.startAngle}function Yo(e){return e.endAngle}function Ho(e){return e&&e.padAngle}function Wo(e,t,n,r){return(e-n)*t-(t-r)*e>0?0:1}function Qo(e,t,n,r,a){var i=e[0]-t[0],o=e[1]-t[1],u=(a?r:-r)/Math.sqrt(i*i+o*o),l=u*o,s=-u*i,c=e[0]+l,f=e[1]+s,p=t[0]+l,d=t[1]+s,h=(c+p)/2,m=(f+d)/2,g=p-c,v=d-f,y=g*g+v*v,b=n-r,x=c*d-p*f,S=(v<0?-1:1)*Math.sqrt(Math.max(0,b*b*y-x*x)),w=(x*v-g*S)/y,A=(-x*g-v*S)/y,E=(x*v+g*S)/y,N=(-x*g+v*S)/y,M=w-h,k=A-m,_=E-h,T=N-m;return M*M+k*k>_*_+T*T&&(w=E,A=N),[[w-l,A-s],[w*n/b,A*n/b]]}function Ko(e){var t=oa,n=ua,r=Xn,a=Xo,i=a.key,o=.7;function u(i){var u,l=[],s=[],c=-1,f=i.length,p=yt(t),d=yt(n);function h(){l.push("M",a(e(s),o))}for(;++c<f;)r.call(this,u=i[c],c)?s.push([+p.call(this,u,c),+d.call(this,u,c)]):s.length&&(h(),s=[]);return s.length&&h(),l.length?l.join(""):null}return u.x=function(e){return arguments.length?(t=e,u):t},u.y=function(e){return arguments.length?(n=e,u):n},u.defined=function(e){return arguments.length?(r=e,u):r},u.interpolate=function(e){return arguments.length?(i="function"==typeof e?a=e:(a=Go.get(e)||Xo).key,u):i},u.tension=function(e){return arguments.length?(o=e,u):o},u}i.svg.line=function(){return Ko(I)};var Go=i.map({linear:Xo,"linear-closed":Zo,step:function(e){var t=0,n=e.length,r=e[0],a=[r[0],",",r[1]];for(;++t<n;)a.push("H",(r[0]+(r=e[t])[0])/2,"V",r[1]);n>1&&a.push("H",r[0]);return a.join("")},"step-before":Jo,"step-after":eu,basis:ru,"basis-open":function(e){if(e.length<4)return Xo(e);var t,n=[],r=-1,a=e.length,i=[0],o=[0];for(;++r<3;)t=e[r],i.push(t[0]),o.push(t[1]);n.push(au(uu,i)+","+au(uu,o)),--r;for(;++r<a;)t=e[r],i.shift(),i.push(t[0]),o.shift(),o.push(t[1]),lu(n,i,o);return n.join("")},"basis-closed":function(e){var t,n,r=-1,a=e.length,i=a+4,o=[],u=[];for(;++r<4;)n=e[r%a],o.push(n[0]),u.push(n[1]);t=[au(uu,o),",",au(uu,u)],--r;for(;++r<i;)n=e[r%a],o.shift(),o.push(n[0]),u.shift(),u.push(n[1]),lu(t,o,u);return t.join("")},bundle:function(e,t){var n=e.length-1;if(n)for(var r,a,i=e[0][0],o=e[0][1],u=e[n][0]-i,l=e[n][1]-o,s=-1;++s<=n;)r=e[s],a=s/n,r[0]=t*r[0]+(1-t)*(i+a*u),r[1]=t*r[1]+(1-t)*(o+a*l);return ru(e)},cardinal:function(e,t){return e.length<3?Xo(e):e[0]+tu(e,nu(e,t))},"cardinal-open":function(e,t){return e.length<4?Xo(e):e[1]+tu(e.slice(1,-1),nu(e,t))},"cardinal-closed":function(e,t){return e.length<3?Zo(e):e[0]+tu((e.push(e[0]),e),nu([e[e.length-2]].concat(e,[e[1]]),t))},monotone:function(e){return e.length<3?Xo(e):e[0]+tu(e,function(e){var t,n,r,a,i=[],o=function(e){var t=0,n=e.length-1,r=[],a=e[0],i=e[1],o=r[0]=su(a,i);for(;++t<n;)r[t]=(o+(o=su(a=i,i=e[t+1])))/2;return r[t]=o,r}(e),u=-1,l=e.length-1;for(;++u<l;)t=su(e[u],e[u+1]),w(t)<_e?o[u]=o[u+1]=0:(n=o[u]/t,r=o[u+1]/t,(a=n*n+r*r)>9&&(a=3*t/Math.sqrt(a),o[u]=a*n,o[u+1]=a*r));u=-1;for(;++u<=l;)a=(e[Math.min(l,u+1)][0]-e[Math.max(0,u-1)][0])/(6*(1+o[u]*o[u])),i.push([a||0,o[u]*a||0]);return i}(e))}});function Xo(e){return e.length>1?e.join("L"):e+"Z"}function Zo(e){return e.join("L")+"Z"}function Jo(e){for(var t=0,n=e.length,r=e[0],a=[r[0],",",r[1]];++t<n;)a.push("V",(r=e[t])[1],"H",r[0]);return a.join("")}function eu(e){for(var t=0,n=e.length,r=e[0],a=[r[0],",",r[1]];++t<n;)a.push("H",(r=e[t])[0],"V",r[1]);return a.join("")}function tu(e,t){if(t.length<1||e.length!=t.length&&e.length!=t.length+2)return Xo(e);var n=e.length!=t.length,r="",a=e[0],i=e[1],o=t[0],u=o,l=1;if(n&&(r+="Q"+(i[0]-2*o[0]/3)+","+(i[1]-2*o[1]/3)+","+i[0]+","+i[1],a=e[1],l=2),t.length>1){u=t[1],i=e[l],l++,r+="C"+(a[0]+o[0])+","+(a[1]+o[1])+","+(i[0]-u[0])+","+(i[1]-u[1])+","+i[0]+","+i[1];for(var s=2;s<t.length;s++,l++)i=e[l],u=t[s],r+="S"+(i[0]-u[0])+","+(i[1]-u[1])+","+i[0]+","+i[1]}if(n){var c=e[l];r+="Q"+(i[0]+2*u[0]/3)+","+(i[1]+2*u[1]/3)+","+c[0]+","+c[1]}return r}function nu(e,t){for(var n,r=[],a=(1-t)/2,i=e[0],o=e[1],u=1,l=e.length;++u<l;)n=i,i=o,o=e[u],r.push([a*(o[0]-n[0]),a*(o[1]-n[1])]);return r}function ru(e){if(e.length<3)return Xo(e);var t=1,n=e.length,r=e[0],a=r[0],i=r[1],o=[a,a,a,(r=e[1])[0]],u=[i,i,i,r[1]],l=[a,",",i,"L",au(uu,o),",",au(uu,u)];for(e.push(e[n-1]);++t<=n;)r=e[t],o.shift(),o.push(r[0]),u.shift(),u.push(r[1]),lu(l,o,u);return e.pop(),l.push("L",r),l.join("")}function au(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}Go.forEach((function(e,t){t.key=e,t.closed=/-closed$/.test(e)}));var iu=[0,2/3,1/3,0],ou=[0,1/3,2/3,0],uu=[0,1/6,2/3,1/6];function lu(e,t,n){e.push("C",au(iu,t),",",au(iu,n),",",au(ou,t),",",au(ou,n),",",au(uu,t),",",au(uu,n))}function su(e,t){return(t[1]-e[1])/(t[0]-e[0])}function cu(e){for(var t,n,r,a=-1,i=e.length;++a<i;)n=(t=e[a])[0],r=t[1]-Oe,t[0]=n*Math.cos(r),t[1]=n*Math.sin(r);return e}function fu(e){var t=oa,n=oa,r=0,a=ua,i=Xn,o=Xo,u=o.key,l=o,s="L",c=.7;function f(u){var f,p,d,h=[],m=[],g=[],v=-1,y=u.length,b=yt(t),x=yt(r),S=t===n?function(){return p}:yt(n),w=r===a?function(){return d}:yt(a);function A(){h.push("M",o(e(g),c),s,l(e(m.reverse()),c),"Z")}for(;++v<y;)i.call(this,f=u[v],v)?(m.push([p=+b.call(this,f,v),d=+x.call(this,f,v)]),g.push([+S.call(this,f,v),+w.call(this,f,v)])):m.length&&(A(),m=[],g=[]);return m.length&&A(),h.length?h.join(""):null}return f.x=function(e){return arguments.length?(t=n=e,f):n},f.x0=function(e){return arguments.length?(t=e,f):t},f.x1=function(e){return arguments.length?(n=e,f):n},f.y=function(e){return arguments.length?(r=a=e,f):a},f.y0=function(e){return arguments.length?(r=e,f):r},f.y1=function(e){return arguments.length?(a=e,f):a},f.defined=function(e){return arguments.length?(i=e,f):i},f.interpolate=function(e){return arguments.length?(u="function"==typeof e?o=e:(o=Go.get(e)||Xo).key,l=o.reverse||o,s=o.closed?"M":"L",f):u},f.tension=function(e){return arguments.length?(c=e,f):c},f}function pu(e){return e.radius}function du(e){return[e.x,e.y]}function hu(e){return function(){var t=e.apply(this,arguments),n=t[0],r=t[1]-Oe;return[n*Math.cos(r),n*Math.sin(r)]}}function mu(){return 64}function gu(){return"circle"}function vu(e){var t=Math.sqrt(e/Ce);return"M0,"+t+"A"+t+","+t+" 0 1,1 0,"+-t+"A"+t+","+t+" 0 1,1 0,"+t+"Z"}i.svg.line.radial=function(){var e=Ko(cu);return e.radius=e.x,delete e.x,e.angle=e.y,delete e.y,e},Jo.reverse=eu,eu.reverse=Jo,i.svg.area=function(){return fu(I)},i.svg.area.radial=function(){var e=fu(cu);return e.radius=e.x,delete e.x,e.innerRadius=e.x0,delete e.x0,e.outerRadius=e.x1,delete e.x1,e.angle=e.y,delete e.y,e.startAngle=e.y0,delete e.y0,e.endAngle=e.y1,delete e.y1,e},i.svg.chord=function(){var e=Hr,t=Wr,n=pu,r=$o,a=Yo;function i(n,r){var a,i,s=o(this,e,n,r),c=o(this,t,n,r);return"M"+s.p0+u(s.r,s.p1,s.a1-s.a0)+(i=c,((a=s).a0==i.a0&&a.a1==i.a1?l(s.r,s.p1,s.r,s.p0):l(s.r,s.p1,c.r,c.p0)+u(c.r,c.p1,c.a1-c.a0)+l(c.r,c.p1,s.r,s.p0))+"Z")}function o(e,t,i,o){var u=t.call(e,i,o),l=n.call(e,u,o),s=r.call(e,u,o)-Oe,c=a.call(e,u,o)-Oe;return{r:l,a0:s,a1:c,p0:[l*Math.cos(s),l*Math.sin(s)],p1:[l*Math.cos(c),l*Math.sin(c)]}}function u(e,t,n){return"A"+e+","+e+" 0 "+ +(n>Ce)+",1 "+t}function l(e,t,n,r){return"Q 0,0 "+r}return i.radius=function(e){return arguments.length?(n=yt(e),i):n},i.source=function(t){return arguments.length?(e=yt(t),i):e},i.target=function(e){return arguments.length?(t=yt(e),i):t},i.startAngle=function(e){return arguments.length?(r=yt(e),i):r},i.endAngle=function(e){return arguments.length?(a=yt(e),i):a},i},i.svg.diagonal=function(){var e=Hr,t=Wr,n=du;function r(r,a){var i=e.call(this,r,a),o=t.call(this,r,a),u=(i.y+o.y)/2,l=[i,{x:i.x,y:u},{x:o.x,y:u},o];return"M"+(l=l.map(n))[0]+"C"+l[1]+" "+l[2]+" "+l[3]}return r.source=function(t){return arguments.length?(e=yt(t),r):e},r.target=function(e){return arguments.length?(t=yt(e),r):t},r.projection=function(e){return arguments.length?(n=e,r):n},r},i.svg.diagonal.radial=function(){var e=i.svg.diagonal(),t=du,n=e.projection;return e.projection=function(e){return arguments.length?n(hu(t=e)):t},e},i.svg.symbol=function(){var e=gu,t=mu;function n(n,r){return(yu.get(e.call(this,n,r))||vu)(t.call(this,n,r))}return n.type=function(t){return arguments.length?(e=yt(t),n):e},n.size=function(e){return arguments.length?(t=yt(e),n):t},n};var yu=i.map({circle:vu,cross:function(e){var t=Math.sqrt(e/5)/2;return"M"+-3*t+","+-t+"H"+-t+"V"+-3*t+"H"+t+"V"+-t+"H"+3*t+"V"+t+"H"+t+"V"+3*t+"H"+-t+"V"+t+"H"+-3*t+"Z"},diamond:function(e){var t=Math.sqrt(e/(2*xu)),n=t*xu;return"M0,"+-t+"L"+n+",0 0,"+t+" "+-n+",0Z"},square:function(e){var t=Math.sqrt(e)/2;return"M"+-t+","+-t+"L"+t+","+-t+" "+t+","+t+" "+-t+","+t+"Z"},"triangle-down":function(e){var t=Math.sqrt(e/bu),n=t*bu/2;return"M0,"+n+"L"+t+","+-n+" "+-t+","+-n+"Z"},"triangle-up":function(e){var t=Math.sqrt(e/bu),n=t*bu/2;return"M0,"+-n+"L"+t+","+n+" "+-t+","+n+"Z"}});i.svg.symbolTypes=yu.keys();var bu=Math.sqrt(3),xu=Math.tan(30*Ie);G.transition=function(e){for(var t,n,r=Eu||++ku,a=Cu(e),i=[],o=Nu||{time:Date.now(),ease:di,delay:0,duration:250},u=-1,l=this.length;++u<l;){i.push(t=[]);for(var s=this[u],c=-1,f=s.length;++c<f;)(n=s[c])&&Pu(n,c,a,r,o),t.push(n)}return Au(i,a,r)},G.interrupt=function(e){return this.each(null==e?Su:wu(Cu(e)))};var Su=wu(Cu());function wu(e){return function(){var t,n,r;(t=this[e])&&(r=t[n=t.active])&&(r.timer.c=null,r.timer.t=NaN,--t.count?delete t[n]:delete this[e],t.active+=.5,r.event&&r.event.interrupt.call(this,this.__data__,r.index))}}function Au(e,t,n){return Y(e,Mu),e.namespace=t,e.id=n,e}var Eu,Nu,Mu=[],ku=0;function _u(e,t,n,r){var a=e.id,i=e.namespace;return he(e,"function"==typeof n?function(e,o,u){e[i][a].tween.set(t,r(n.call(e,e.__data__,o,u)))}:(n=r(n),function(e){e[i][a].tween.set(t,n)}))}function Tu(e){return null==e&&(e=""),function(){this.textContent=e}}function Cu(e){return null==e?"__transition__":"__transition_"+e+"__"}function Pu(e,t,n,r,a){var i,o,u,l,s,c=e[n]||(e[n]={active:0,count:0}),f=c[r];function p(n){var a=c.active,p=c[a];for(var h in p&&(p.timer.c=null,p.timer.t=NaN,--c.count,delete c[a],p.event&&p.event.interrupt.call(e,e.__data__,p.index)),c)if(+h<r){var m=c[h];m.timer.c=null,m.timer.t=NaN,--c.count,delete c[h]}o.c=d,Mt((function(){return o.c&&d(n||1)&&(o.c=null,o.t=NaN),1}),0,i),c.active=r,f.event&&f.event.start.call(e,e.__data__,t),s=[],f.tween.forEach((function(n,r){(r=r.call(e,e.__data__,t))&&s.push(r)})),l=f.ease,u=f.duration}function d(a){for(var i=a/u,o=l(i),p=s.length;p>0;)s[--p].call(e,o);if(i>=1)return f.event&&f.event.end.call(e,e.__data__,t),--c.count?delete c[r]:delete e[n],1}f||(i=a.time,o=Mt((function(e){var t=f.delay;if(o.t=t+i,t<=e)return p(e-t);o.c=p}),0,i),f=c[r]={tween:new N,time:i,timer:o,delay:a.delay,duration:a.duration,ease:a.ease,index:t},a=null,++c.count)}Mu.call=G.call,Mu.empty=G.empty,Mu.node=G.node,Mu.size=G.size,i.transition=function(e,t){return e&&e.transition?Eu?e.transition(t):e:i.selection().transition(e)},i.transition.prototype=Mu,Mu.select=function(e){var t,n,r,a=this.id,i=this.namespace,o=[];e=X(e);for(var u=-1,l=this.length;++u<l;){o.push(t=[]);for(var s=this[u],c=-1,f=s.length;++c<f;)(r=s[c])&&(n=e.call(r,r.__data__,c,u))?("__data__"in r&&(n.__data__=r.__data__),Pu(n,c,i,a,r[i][a]),t.push(n)):t.push(null)}return Au(o,i,a)},Mu.selectAll=function(e){var t,n,r,a,i,o=this.id,u=this.namespace,l=[];e=Z(e);for(var s=-1,c=this.length;++s<c;)for(var f=this[s],p=-1,d=f.length;++p<d;)if(r=f[p]){i=r[u][o],n=e.call(r,r.__data__,p,s),l.push(t=[]);for(var h=-1,m=n.length;++h<m;)(a=n[h])&&Pu(a,h,u,o,i),t.push(a)}return Au(l,u,o)},Mu.filter=function(e){var t,n,r=[];"function"!=typeof e&&(e=pe(e));for(var a=0,i=this.length;a<i;a++){r.push(t=[]);for(var o,u=0,l=(o=this[a]).length;u<l;u++)(n=o[u])&&e.call(n,n.__data__,u,a)&&t.push(n)}return Au(r,this.namespace,this.id)},Mu.tween=function(e,t){var n=this.id,r=this.namespace;return arguments.length<2?this.node()[r][n].tween.get(e):he(this,null==t?function(t){t[r][n].tween.remove(e)}:function(a){a[r][n].tween.set(e,t)})},Mu.attr=function(e,t){if(arguments.length<2){for(t in e)this.attr(t,e[t]);return this}var n="transform"==e?Ei:ri,r=i.ns.qualify(e);function a(){this.removeAttribute(r)}function o(){this.removeAttributeNS(r.space,r.local)}function u(e){return null==e?a:(e+="",function(){var t,a=this.getAttribute(r);return a!==e&&(t=n(a,e),function(e){this.setAttribute(r,t(e))})})}function l(e){return null==e?o:(e+="",function(){var t,a=this.getAttributeNS(r.space,r.local);return a!==e&&(t=n(a,e),function(e){this.setAttributeNS(r.space,r.local,t(e))})})}return _u(this,"attr."+e,t,r.local?l:u)},Mu.attrTween=function(e,t){var n=i.ns.qualify(e);return this.tween("attr."+e,n.local?function(e,r){var a=t.call(this,e,r,this.getAttributeNS(n.space,n.local));return a&&function(e){this.setAttributeNS(n.space,n.local,a(e))}}:function(e,r){var a=t.call(this,e,r,this.getAttribute(n));return a&&function(e){this.setAttribute(n,a(e))}})},Mu.style=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=""),e)this.style(n,e[n],t);return this}n=""}function a(){this.style.removeProperty(e)}function i(t){return null==t?a:(t+="",function(){var r,a=c(this).getComputedStyle(this,null).getPropertyValue(e);return a!==t&&(r=ri(a,t),function(t){this.style.setProperty(e,r(t),n)})})}return _u(this,"style."+e,t,i)},Mu.styleTween=function(e,t,n){function r(r,a){var i=t.call(this,r,a,c(this).getComputedStyle(this,null).getPropertyValue(e));return i&&function(t){this.style.setProperty(e,i(t),n)}}return arguments.length<3&&(n=""),this.tween("style."+e,r)},Mu.text=function(e){return _u(this,"text",e,Tu)},Mu.remove=function(){var e=this.namespace;return this.each("end.transition",(function(){var t;this[e].count<2&&(t=this.parentNode)&&t.removeChild(this)}))},Mu.ease=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].ease:("function"!=typeof e&&(e=i.ease.apply(i,arguments)),he(this,(function(r){r[n][t].ease=e})))},Mu.delay=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].delay:he(this,"function"==typeof e?function(r,a,i){r[n][t].delay=+e.call(r,r.__data__,a,i)}:(e=+e,function(r){r[n][t].delay=e}))},Mu.duration=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].duration:he(this,"function"==typeof e?function(r,a,i){r[n][t].duration=Math.max(1,e.call(r,r.__data__,a,i))}:(e=Math.max(1,e),function(r){r[n][t].duration=e}))},Mu.each=function(e,t){var n=this.id,r=this.namespace;if(arguments.length<2){var a=Nu,o=Eu;try{Eu=n,he(this,(function(t,a,i){Nu=t[r][n],e.call(t,t.__data__,a,i)}))}finally{Nu=a,Eu=o}}else he(this,(function(a){var o=a[r][n];(o.event||(o.event=i.dispatch("start","end","interrupt"))).on(e,t)}));return this},Mu.transition=function(){for(var e,t,n,r=this.id,a=++ku,i=this.namespace,o=[],u=0,l=this.length;u<l;u++){o.push(e=[]);for(var s,c=0,f=(s=this[u]).length;c<f;c++)(t=s[c])&&Pu(t,c,i,a,{time:(n=t[i][r]).time,ease:n.ease,delay:n.delay+n.duration,duration:n.duration}),e.push(t)}return Au(o,i,a)},i.svg.axis=function(){var e,t=i.scale.linear(),n=Du,r=6,a=6,o=3,l=[10],s=null;function c(u){u.each((function(){var u,c=i.select(this),f=this.__chart__||t,p=this.__chart__=t.copy(),d=null==s?p.ticks?p.ticks.apply(p,l):p.domain():s,h=null==e?p.tickFormat?p.tickFormat.apply(p,l):I:e,m=c.selectAll(".tick").data(d,p),g=m.enter().insert("g",".domain").attr("class","tick").style("opacity",_e),v=i.transition(m.exit()).style("opacity",_e).remove(),y=i.transition(m.order()).style("opacity",1),b=Math.max(r,0)+o,x=xo(p),S=c.selectAll(".domain").data([0]),w=(S.enter().append("path").attr("class","domain"),i.transition(S));g.append("line"),g.append("text");var A,E,N,M,k=g.select("line"),_=y.select("line"),T=m.select("text").text(h),C=g.select("text"),P=y.select("text"),D="top"===n||"left"===n?-1:1;if("bottom"===n||"top"===n?(u=Iu,A="x",N="y",E="x2",M="y2",T.attr("dy",D<0?"0em":".71em").style("text-anchor","middle"),w.attr("d","M"+x[0]+","+D*a+"V0H"+x[1]+"V"+D*a)):(u=zu,A="y",N="x",E="y2",M="x2",T.attr("dy",".32em").style("text-anchor",D<0?"end":"start"),w.attr("d","M"+D*a+","+x[0]+"H0V"+x[1]+"H"+D*a)),k.attr(M,D*r),C.attr(N,D*b),_.attr(E,0).attr(M,D*r),P.attr(A,0).attr(N,D*b),p.rangeBand){var O=p,z=O.rangeBand()/2;f=p=function(e){return O(e)+z}}else f.rangeBand?f=p:v.call(u,p,f);g.call(u,f,p),y.call(u,p,p)}))}return c.scale=function(e){return arguments.length?(t=e,c):t},c.orient=function(e){return arguments.length?(n=e in Ou?e+"":Du,c):n},c.ticks=function(){return arguments.length?(l=u(arguments),c):l},c.tickValues=function(e){return arguments.length?(s=e,c):s},c.tickFormat=function(t){return arguments.length?(e=t,c):e},c.tickSize=function(e){var t=arguments.length;return t?(r=+e,a=+arguments[t-1],c):r},c.innerTickSize=function(e){return arguments.length?(r=+e,c):r},c.outerTickSize=function(e){return arguments.length?(a=+e,c):a},c.tickPadding=function(e){return arguments.length?(o=+e,c):o},c.tickSubdivide=function(){return arguments.length&&c},c};var Du="bottom",Ou={top:1,right:1,bottom:1,left:1};function Iu(e,t,n){e.attr("transform",(function(e){var r=t(e);return"translate("+(isFinite(r)?r:n(e))+",0)"}))}function zu(e,t,n){e.attr("transform",(function(e){var r=t(e);return"translate(0,"+(isFinite(r)?r:n(e))+")"}))}i.svg.brush=function(){var e,t,n=B(p,"brushstart","brush","brushend"),r=null,a=null,o=[0,0],u=[0,0],l=!0,s=!0,f=Ru[0];function p(e){e.each((function(){var e=i.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",g).on("touchstart.brush",g),t=e.selectAll(".background").data([0]);t.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),e.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var n=e.selectAll(".resize").data(f,I);n.exit().remove(),n.enter().append("g").attr("class",(function(e){return"resize "+e})).style("cursor",(function(e){return Lu[e]})).append("rect").attr("x",(function(e){return/[ew]$/.test(e)?-3:null})).attr("y",(function(e){return/^[ns]/.test(e)?-3:null})).attr("width",6).attr("height",6).style("visibility","hidden"),n.style("display",p.empty()?"none":null);var o,u=i.transition(e),l=i.transition(t);r&&(o=xo(r),l.attr("x",o[0]).attr("width",o[1]-o[0]),h(u)),a&&(o=xo(a),l.attr("y",o[0]).attr("height",o[1]-o[0]),m(u)),d(u)}))}function d(e){e.selectAll(".resize").attr("transform",(function(e){return"translate("+o[+/e$/.test(e)]+","+u[+/^s/.test(e)]+")"}))}function h(e){e.select(".extent").attr("x",o[0]),e.selectAll(".extent,.n>rect,.s>rect").attr("width",o[1]-o[0])}function m(e){e.select(".extent").attr("y",u[0]),e.selectAll(".extent,.e>rect,.w>rect").attr("height",u[1]-u[0])}function g(){var f,g,v=this,y=i.select(i.event.target),b=n.of(v,arguments),x=i.select(v),S=y.datum(),w=!/^(n|s)$/.test(S)&&r,A=!/^(e|w)$/.test(S)&&a,E=y.classed("extent"),N=Ee(v),M=i.mouse(v),k=i.select(c(v)).on("keydown.brush",C).on("keyup.brush",P);if(i.event.changedTouches?k.on("touchmove.brush",D).on("touchend.brush",I):k.on("mousemove.brush",D).on("mouseup.brush",I),x.interrupt().selectAll("*").interrupt(),E)M[0]=o[0]-M[0],M[1]=u[0]-M[1];else if(S){var _=+/w$/.test(S),T=+/^n/.test(S);g=[o[1-_]-M[0],u[1-T]-M[1]],M[0]=o[_],M[1]=u[T]}else i.event.altKey&&(f=M.slice());function C(){32==i.event.keyCode&&(E||(f=null,M[0]-=o[1],M[1]-=u[1],E=2),U())}function P(){32==i.event.keyCode&&2==E&&(M[0]+=o[1],M[1]+=u[1],E=0,U())}function D(){var e=i.mouse(v),t=!1;g&&(e[0]+=g[0],e[1]+=g[1]),E||(i.event.altKey?(f||(f=[(o[0]+o[1])/2,(u[0]+u[1])/2]),M[0]=o[+(e[0]<f[0])],M[1]=u[+(e[1]<f[1])]):f=null),w&&O(e,r,0)&&(h(x),t=!0),A&&O(e,a,1)&&(m(x),t=!0),t&&(d(x),b({type:"brush",mode:E?"move":"resize"}))}function O(n,r,a){var i,c,p=xo(r),d=p[0],h=p[1],m=M[a],g=a?u:o,v=g[1]-g[0];if(E&&(d-=m,h-=v+m),i=(a?s:l)?Math.max(d,Math.min(h,n[a])):n[a],E?c=(i+=m)+v:(f&&(m=Math.max(d,Math.min(h,2*f[a]-i))),m<i?(c=i,i=m):c=m),g[0]!=i||g[1]!=c)return a?t=null:e=null,g[0]=i,g[1]=c,!0}function I(){D(),x.style("pointer-events","all").selectAll(".resize").style("display",p.empty()?"none":null),i.select("body").style("cursor",null),k.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),N(),b({type:"brushend"})}x.style("pointer-events","none").selectAll(".resize").style("display",null),i.select("body").style("cursor",y.style("cursor")),b({type:"brushstart"}),D()}return p.event=function(r){r.each((function(){var r=n.of(this,arguments),a={x:o,y:u,i:e,j:t},l=this.__chart__||a;this.__chart__=a,Eu?i.select(this).transition().each("start.brush",(function(){e=l.i,t=l.j,o=l.x,u=l.y,r({type:"brushstart"})})).tween("brush:brush",(function(){var n=ai(o,a.x),i=ai(u,a.y);return e=t=null,function(e){o=a.x=n(e),u=a.y=i(e),r({type:"brush",mode:"resize"})}})).each("end.brush",(function(){e=a.i,t=a.j,r({type:"brush",mode:"resize"}),r({type:"brushend"})})):(r({type:"brushstart"}),r({type:"brush",mode:"resize"}),r({type:"brushend"}))}))},p.x=function(e){return arguments.length?(f=Ru[!(r=e)<<1|!a],p):r},p.y=function(e){return arguments.length?(f=Ru[!r<<1|!(a=e)],p):a},p.clamp=function(e){return arguments.length?(r&&a?(l=!!e[0],s=!!e[1]):r?l=!!e:a&&(s=!!e),p):r&&a?[l,s]:r?l:a?s:null},p.extent=function(n){var i,l,s,c,f;return arguments.length?(r&&(i=n[0],l=n[1],a&&(i=i[0],l=l[0]),e=[i,l],r.invert&&(i=r(i),l=r(l)),l<i&&(f=i,i=l,l=f),i==o[0]&&l==o[1]||(o=[i,l])),a&&(s=n[0],c=n[1],r&&(s=s[1],c=c[1]),t=[s,c],a.invert&&(s=a(s),c=a(c)),c<s&&(f=s,s=c,c=f),s==u[0]&&c==u[1]||(u=[s,c])),p):(r&&(e?(i=e[0],l=e[1]):(i=o[0],l=o[1],r.invert&&(i=r.invert(i),l=r.invert(l)),l<i&&(f=i,i=l,l=f))),a&&(t?(s=t[0],c=t[1]):(s=u[0],c=u[1],a.invert&&(s=a.invert(s),c=a.invert(c)),c<s&&(f=s,s=c,c=f))),r&&a?[[i,s],[l,c]]:r?[i,l]:a&&[s,c])},p.clear=function(){return p.empty()||(o=[0,0],u=[0,0],e=t=null),p},p.empty=function(){return!!r&&o[0]==o[1]||!!a&&u[0]==u[1]},i.rebind(p,n,"on")};var Lu={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Ru=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]],Fu=Lt.format=pn.timeFormat,ju=Fu.utc,Vu=ju("%Y-%m-%dT%H:%M:%S.%LZ");function Uu(e){return e.toISOString()}function qu(e,t,n){function r(t){return e(t)}function a(e,n){var r=(e[1]-e[0])/n,a=i.bisect($u,r);return a==$u.length?[t.year,_o(e.map((function(e){return e/31536e6})),n)[2]]:a?t[r/$u[a-1]<$u[a]/r?a-1:a]:[Wu,_o(e,n)[2]]}return r.invert=function(t){return Bu(e.invert(t))},r.domain=function(t){return arguments.length?(e.domain(t),r):e.domain().map(Bu)},r.nice=function(e,t){var n=r.domain(),i=bo(n),o=null==e?a(i,10):"number"==typeof e&&a(i,e);function u(n){return!isNaN(n)&&!e.range(n,Bu(+n+1),t).length}return o&&(e=o[0],t=o[1]),r.domain(wo(n,t>1?{floor:function(t){for(;u(t=e.floor(t));)t=Bu(t-1);return t},ceil:function(t){for(;u(t=e.ceil(t));)t=Bu(+t+1);return t}}:e))},r.ticks=function(e,t){var n=bo(r.domain()),i=null==e?a(n,10):"number"==typeof e?a(n,e):!e.range&&[{range:e},t];return i&&(e=i[0],t=i[1]),e.range(n[0],Bu(+n[1]+1),t<1?1:t)},r.tickFormat=function(){return n},r.copy=function(){return qu(e.copy(),t,n)},Mo(r,e)}function Bu(e){return new Date(e)}Fu.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?Uu:Vu,Uu.parse=function(e){var t=new Date(e);return isNaN(t)?null:t},Uu.toString=Vu.toString,Lt.second=Vt((function(e){return new Rt(1e3*Math.floor(e/1e3))}),(function(e,t){e.setTime(e.getTime()+1e3*Math.floor(t))}),(function(e){return e.getSeconds()})),Lt.seconds=Lt.second.range,Lt.seconds.utc=Lt.second.utc.range,Lt.minute=Vt((function(e){return new Rt(6e4*Math.floor(e/6e4))}),(function(e,t){e.setTime(e.getTime()+6e4*Math.floor(t))}),(function(e){return e.getMinutes()})),Lt.minutes=Lt.minute.range,Lt.minutes.utc=Lt.minute.utc.range,Lt.hour=Vt((function(e){var t=e.getTimezoneOffset()/60;return new Rt(36e5*(Math.floor(e/36e5-t)+t))}),(function(e,t){e.setTime(e.getTime()+36e5*Math.floor(t))}),(function(e){return e.getHours()})),Lt.hours=Lt.hour.range,Lt.hours.utc=Lt.hour.utc.range,Lt.month=Vt((function(e){return(e=Lt.day(e)).setDate(1),e}),(function(e,t){e.setMonth(e.getMonth()+t)}),(function(e){return e.getMonth()})),Lt.months=Lt.month.range,Lt.months.utc=Lt.month.utc.range;var $u=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Yu=[[Lt.second,1],[Lt.second,5],[Lt.second,15],[Lt.second,30],[Lt.minute,1],[Lt.minute,5],[Lt.minute,15],[Lt.minute,30],[Lt.hour,1],[Lt.hour,3],[Lt.hour,6],[Lt.hour,12],[Lt.day,1],[Lt.day,2],[Lt.week,1],[Lt.month,1],[Lt.month,3],[Lt.year,1]],Hu=Fu.multi([[".%L",function(e){return e.getMilliseconds()}],[":%S",function(e){return e.getSeconds()}],["%I:%M",function(e){return e.getMinutes()}],["%I %p",function(e){return e.getHours()}],["%a %d",function(e){return e.getDay()&&1!=e.getDate()}],["%b %d",function(e){return 1!=e.getDate()}],["%B",function(e){return e.getMonth()}],["%Y",Xn]]),Wu={range:function(e,t,n){return i.range(Math.ceil(e/n)*n,+t,n).map(Bu)},floor:I,ceil:I};Yu.year=Lt.year,Lt.scale=function(){return qu(i.scale.linear(),Yu,Hu)};var Qu=Yu.map((function(e){return[e[0].utc,e[1]]})),Ku=ju.multi([[".%L",function(e){return e.getUTCMilliseconds()}],[":%S",function(e){return e.getUTCSeconds()}],["%I:%M",function(e){return e.getUTCMinutes()}],["%I %p",function(e){return e.getUTCHours()}],["%a %d",function(e){return e.getUTCDay()&&1!=e.getUTCDate()}],["%b %d",function(e){return 1!=e.getUTCDate()}],["%B",function(e){return e.getUTCMonth()}],["%Y",Xn]]);function Gu(e){return JSON.parse(e.responseText)}function Xu(e){var t=l.createRange();return t.selectNode(l.body),t.createContextualFragment(e.responseText)}Qu.year=Lt.year.utc,Lt.scale.utc=function(){return qu(i.scale.linear(),Qu,Ku)},i.text=bt((function(e){return e.responseText})),i.json=function(e,t){return xt(e,"application/json",Gu,t)},i.html=function(e,t){return xt(e,"text/html",Xu,t)},i.xml=bt((function(e){return e.responseXML})),this.d3=i,void 0===(a="function"==typeof(r=i)?r.call(t,n,t,e):r)||(e.exports=a)}()},function(e){e.exports=JSON.parse('[{"name":"Kobe Bryant","nickname":"kobe","age":{"first":18,"last":37},"awards":{"1997":[],"1998":["AS"],"1999":["AN3"],"2000":["AS","AD1","AN2"],"2001":["AS","AD2","AN2"],"2002":["AS","AD2","AN1"],"2003":["AS","AD1","AN1"],"2004":["AS","AD1","AN1"],"2005":["AS","AN3"],"2006":["AS","AD1","AN1"],"2007":["AS","AD1","AN1"],"2008":["AS","AD1","AN1","MVP"],"2009":["AS","AD1","AN1"],"2010":["AS","AD1","AN1"],"2011":["AS","AD1","AN1"],"2012":["AS","AD2","AN1"],"2013":["AS","AN1"],"2014":["AS"],"2015":["AS"],"2016":["AS"]},"pics":["kobetrans1.png","kobetrans2.png","kobetrans3.png"],"teams":[{"team":"lakers","start":1997,"end":2016,"careerStart":1,"careerEnd":20}],"totals":{"MVP":"1","AN":"15","AD":"12","AS":"18"},"championships":[2000,2001,2002,2009,2010]},{"name":"Michael Jordan","nickname":"jordan","age":{"first":21,"last":39},"awards":{"1985":["AS","AN2"],"1986":["AS"],"1987":["AS","AN1"],"1988":["AS","AD1","AN1","MVP"],"1989":["AS","AD1","AN1"],"1990":["AS","AD1","AN1"],"1991":["AS","AD1","AN1","MVP"],"1992":["AS","AD1","AN1","MVP"],"1993":["AS","AD1","AN1"],"1995":[],"1996":["AS","AD1","AN1","MVP"],"1997":["AS","AD1","AN1"],"1998":["AS","AD1","AN1","MVP"],"2002":["AS"],"2003":["AS"]},"pics":["jordantrans1.png","jordantrans2.png","jordantrans3.png"],"teams":[{"team":"bulls","start":1985,"end":1993,"careerStart":1,"careerEnd":9},{"team":"bulls","start":1995,"end":1998,"careerStart":10,"careerEnd":13},{"team":"wizards","start":2002,"end":2003,"careerStart":14,"careerEnd":15}],"totals":{"MVP":"5","AN":"11","AD":"9","AS":"14"},"championships":[1991,1992,1993,1996,1997,1998]},{"name":"Earvin \'Magic\' Johnson","nickname":"magic","age":{"first":20,"last":36},"awards":{"1980":["AS"],"1981":[],"1982":["AS","AN2"],"1983":["AS","AN1"],"1984":["AS","AN1"],"1985":["AS","AN1"],"1986":["AS","AN1"],"1987":["AS","AN1","MVP"],"1988":["AS","AN1"],"1989":["AS","AN1","MVP"],"1990":["AS","AN1","MVP"],"1991":["AS","AN1"],"1996":[]},"pics":["magictrans1.png","magictrans2.png"],"teams":[{"team":"lakers","start":1980,"end":1991,"careerStart":1,"careerEnd":12},{"team":"lakers","start":1996,"end":1996,"careerStart":13,"careerEnd":13}],"totals":{"MVP":"3","AN":"10","AD":"0","AS":"11"},"championships":[1980,1982,1985,1987,1988]},{"name":"Tim Duncan","nickname":"duncan","age":{"first":21,"last":39},"awards":{"1998":["AS","AD2"],"1999":["AD1","AN1"],"2000":["AS","AD1","AN1"],"2001":["AS","AD1","AN1"],"2002":["AS","AD1","AN1","MVP"],"2003":["AS","AD1","AN1","MVP"],"2004":["AS","AD2","AN1"],"2005":["AS","AD1","AN1"],"2006":["AS","AD2","AN2"],"2007":["AS","AD1","AN1"],"2008":["AS","AD1","AN2"],"2009":["AS","AD2","AN2"],"2010":["AS","AD2","AN3"],"2011":["AS"],"2012":[],"2013":["AS","AD2","AN1"],"2014":[],"2015":["AS","AD2","AN3"],"2016":[]},"pics":["duncantrans1.png","duncantrans2.png","duncantrans3.png"],"teams":[{"team":"spurs","start":1998,"end":2016,"careerStart":1,"careerEnd":19}],"totals":{"MVP":"2","AN":"14","AD":"15","AS":"15"},"championships":[1999,2003,2005,2007,2014]},{"name":"Larry Bird","nickname":"bird","age":{"first":23,"last":35},"awards":{"1980":["AS","AN1"],"1981":["AS","AN1"],"1982":["AS","AD2","AN1"],"1983":["AS","AD2","AN1"],"1984":["AS","AD2","AN1","MVP"],"1985":["AS","AN1","MVP"],"1986":["AS","AN1","MVP"],"1987":["AS","AN1"],"1988":["AS","AN1"],"1989":[],"1990":["AS","AN2"],"1991":["AS"],"1992":["AS"]},"pics":["birdtrans1.png","birdtrans2.png","birdtrans3.png"],"teams":[{"team":"celtics","start":1980,"end":1992,"careerStart":1,"careerEnd":13}],"totals":{"MVP":"3","AN":"10","AD":"3","AS":"12"},"championships":[1981,1984,1986]},{"name":"LeBron James","nickname":"lebron","age":{"first":19,"last":35},"awards":{"2004":[],"2005":["AS","AN2"],"2006":["AS","AN1"],"2007":["AS","AN2"],"2008":["AS","AN1"],"2009":["AS","AD1","AN1","MVP"],"2010":["AS","AD1","AN1","MVP"],"2011":["AS","AD1","AN1"],"2012":["AS","AD1","AN1","MVP"],"2013":["AS","AD1","AN1","MVP"],"2014":["AS","AD2","AN1"],"2015":["AS","AN1"],"2016":["AS","AN1"],"2017":["AS","AN1"],"2018":["AS","AN1"],"2019":["AS","AN3"],"2020":["AS"]},"pics":["lebrontrans1.png","lebrontrans2.png","lebrontrans3.png","lebrontrans4.png"],"teams":[{"team":"cavaliers","start":2004,"end":2010,"careerStart":1,"careerEnd":7},{"team":"heat","start":2011,"end":2014,"careerStart":8,"careerEnd":11},{"team":"cavaliers","start":2015,"end":2018,"careerStart":12,"careerEnd":15},{"team":"lakers","start":2019,"end":2020,"careerStart":16,"careerEnd":17}],"totals":{"MVP":"4","AN":"15","AD":"6","AS":"15"},"championships":[2012,2013,2016]},{"name":"Stephen Curry","nickname":"steph","age":{"first":21,"last":31},"awards":{"2010":[],"2011":[],"2012":[],"2013":[],"2014":["AS","AN2"],"2015":["AS","AN1","MVP"],"2016":["AS","AN1","MVP"],"2017":["AS","AN2"],"2018":["AS","AN3"],"2019":["AS","AN1"],"2020":[]},"pics":["stephtrans1.png","stephtrans2.png","stephtrans3.png"],"teams":[{"team":"warriors","start":2010,"end":2020,"careerStart":1,"careerEnd":11}],"totals":{"MVP":"2","AN":"6","AD":"0","AS":"6"},"championships":[2015,2017,2018]},{"name":"Kevin Garnett","nickname":"kg","age":{"first":19,"last":39},"awards":{"1996":[],"1997":["AS"],"1998":["AS"],"1999":["AN3"],"2000":["AS","AD1","AN1"],"2001":["AS","AD1","AN2"],"2002":["AS","AD1","AN2"],"2003":["AS","AD1","AN1"],"2004":["AS","AD1","AN1","MVP"],"2005":["AS","AD1","AN2"],"2006":["AS","AD2"],"2007":["AS","AD2","AN3"],"2008":["AS","AD1","AN1"],"2009":["AS","AD1"],"2010":["AS"],"2011":["AS","AD1"],"2012":["AD2"],"2013":["AS"],"2014":[],"2015":[],"2016":[]},"pics":["kgtrans1.png","kgtrans2.png","kgtrans3.png"],"teams":[{"team":"timberwolves","start":1996,"end":2007,"careerStart":1,"careerEnd":12},{"team":"celtics","start":2008,"end":2013,"careerStart":13,"careerEnd":18},{"team":"nets","start":2014,"end":2014,"careerStart":19,"careerEnd":19},{"team":"timberwolves","start":2015,"end":2016,"careerStart":20,"careerEnd":21}],"totals":{"MVP":"1","AN":"9","AD":"12","AS":"15"},"championships":[2008]},{"name":"Bill Russell","nickname":"russell","age":{"first":22,"last":34},"awards":{"1957":[],"1958":["AS","AN2","MVP"],"1959":["AS","AN1"],"1960":["AS","AN2"],"1961":["AS","AN2","MVP"],"1962":["AS","AN2","MVP"],"1963":["AS","AN1","MVP"],"1964":["AS","AN2"],"1965":["AS","AN1","MVP"],"1966":["AS","AN2"],"1967":["AS","AN2"],"1968":["AS","AN2"],"1969":["AS","AD1","AN1"]},"pics":["russelltrans1.png","russelltrans2.png","russelltrans3.png"],"teams":[{"team":"celtics","start":1957,"end":1969,"careerStart":1,"careerEnd":13}],"totals":{"MVP":"5","AN":"12","AD":"1","AS":"12"},"championships":[1957,1959,1960,1961,1962,1963,1964,1965,1966,1968,1969]},{"name":"Kareem Abdul-Jabbar","nickname":"kareem","age":{"first":22,"last":41},"awards":{"1970":["AS","AD2","AN2"],"1971":["AS","AD2","AN1","MVP"],"1972":["AS","AN1","MVP"],"1973":["AS","AN1"],"1974":["AS","AD1","AN1","MVP"],"1975":["AS","AD1"],"1976":["AS","AD1","AN1","MVP"],"1977":["AS","AD2","AN1","MVP"],"1978":["AD2","AN2"],"1979":["AS","AD1","AN2"],"1980":["AS","AD1","AN1","MVP"],"1981":["AS","AD1","AN1"],"1982":["AS"],"1983":["AS","AN2"],"1984":["AS","AD2","AN1"],"1985":["AS","AN2"],"1986":["AS","AN1"],"1987":["AS"],"1988":["AS"],"1989":["AS"]},"pics":["kareemtrans1.png","kareemtrans2.png","kareemtrans3.png"],"teams":[{"team":"bucks","start":1970,"end":1975,"careerStart":1,"careerEnd":6},{"team":"lakers","start":1976,"end":1989,"careerStart":7,"careerEnd":20}],"totals":{"MVP":"6","AN":"15","AD":"11","AS":"19"},"championships":[1971,1980,1982,1985,1987,1988]},{"name":"Karl Malone","nickname":"mailman","age":{"first":22,"last":40},"awards":{"1986":[],"1987":[],"1988":["AS","AD2","AN2"],"1989":["AS","AN1"],"1990":["AS","AN1"],"1991":["AS","AN1"],"1992":["AS","AN1"],"1993":["AS","AN1"],"1994":["AS","AN1"],"1995":["AS","AN1"],"1996":["AS","AN1"],"1997":["AS","AD1","AN1","MVP"],"1998":["AS","AD1","AN1"],"1999":["AD1","AN1","MVP"],"2000":["AS","AN2"],"2001":["AS","AN3"],"2002":["AS"],"2003":[],"2004":[]},"pics":["mailmantrans1.png","mailmantrans2.png","mailmantrans3.png"],"teams":[{"team":"jazz","start":1986,"end":2003,"careerStart":1,"careerEnd":18},{"team":"lakers","start":2004,"end":2004,"careerStart":19,"careerEnd":19}],"totals":{"MVP":"2","AN":"14","AD":"4","AS":"14"},"championships":[]},{"name":"Shaquille O\'Neal","nickname":"shaq","age":{"first":20,"last":38},"awards":{"1993":["AS"],"1994":["AS","AN3"],"1995":["AS","AN2"],"1996":["AS","AN3"],"1997":["AS","AN3"],"1998":["AS","AN1"],"1999":["AN2"],"2000":["AS","AD2","AN1","MVP"],"2001":["AS","AD2","AN1"],"2002":["AS","AN1"],"2003":["AS","AD2","AN1"],"2004":["AS","AN1"],"2005":["AS","AN1"],"2006":["AS","AN1"],"2007":["AS"],"2008":[],"2009":["AS","AN3"],"2010":[],"2011":[]},"pics":["shaqtrans1.png","shaqtrans2.png","shaqtrans3.png"],"teams":[{"team":"magic","start":1993,"end":1997,"careerStart":1,"careerEnd":4},{"team":"lakers","start":1997,"end":2004,"careerStart":5,"careerEnd":12},{"team":"heat","start":2005,"end":2007,"careerStart":13,"careerEnd":15},{"team":"suns","start":2008,"end":2009,"careerStart":16,"careerEnd":17},{"team":"cavaliers","start":2010,"end":2010,"careerStart":18,"careerEnd":18},{"team":"celtics","start":2011,"end":2011,"careerStart":19,"careerEnd":19}],"totals":{"MVP":"1","AN":"14","AD":"3","AS":"15"},"championships":[2000,2001,2002,2006]},{"name":"Wilt Chamberlain","nickname":"wilt","age":{"first":23,"last":36},"awards":{"1960":["AS","AN1","MVP"],"1961":["AS","AN1"],"1962":["AS","AN1"],"1963":["AS","AN2"],"1964":["AS","AN1"],"1965":["AS","AN2"],"1966":["AS","AN1","MVP"],"1967":["AS","AN1","MVP"],"1968":["AS","AN1","MVP"],"1969":["AS"],"1970":["AS"],"1971":["AS"],"1972":["AS","AD1","AN2"],"1973":["AS","AD1"]},"pics":["wilttrans1.png","wilttrans2.png","wilttrans3.png"],"teams":[{"team":"warriors","start":1960,"end":1965,"careerStart":1,"careerEnd":6},{"team":"76ers","start":1966,"end":1968,"careerStart":7,"careerEnd":9},{"team":"lakers","start":1969,"end":1973,"careerStart":10,"careerEnd":14}],"totals":{"MVP":"4","AN":"10","AD":"2","AS":"14"},"championships":[1967,1972]},{"name":"Jerry West","nickname":"west","age":{"first":22,"last":35},"awards":{"1961":["AS","AN1"],"1962":["AS","AN1"],"1963":["AS","AN1"],"1964":["AS","AN1"],"1965":["AS","AN1"],"1966":["AS","AN1"],"1967":["AS","AN1"],"1968":["AS","AN2"],"1969":["AS","AD2","AN2"],"1970":["AS","AD1","AN1"],"1971":["AS","AD1","AN1"],"1972":["AS","AD1","AN1"],"1973":["AS","AD1","AN1"],"1974":["AS"]},"pics":["westtrans1.png","westtrans2.png","westtrans3.png"],"teams":[{"team":"lakers","start":1961,"end":1974,"careerStart":1,"careerEnd":14}],"totals":{"MVP":"0","AN":"13","AD":"5","AS":"14"},"championships":[1972]},{"name":"Oscar Robertson","nickname":"oscar","age":{"first":22,"last":35},"awards":{"1961":["AS","AN1"],"1962":["AS","AN1"],"1963":["AS","AN1"],"1964":["AS","AN1","MVP"],"1965":["AS","AN1"],"1966":["AS","AN1"],"1967":["AS","AN1"],"1968":["AS","AN1"],"1969":["AS","AN1"],"1970":["AS","AN2"],"1971":["AS","AN2"],"1972":["AS"],"1973":[],"1974":[]},"pics":["oscartrans1.png","oscartrans2.png","oscartrans3.png"],"teams":[{"team":"royals","start":1961,"end":1970,"careerStart":1,"careerEnd":10},{"team":"bucks","start":1971,"end":1974,"careerStart":11,"careerEnd":14}],"totals":{"MVP":"1","AN":"11","AD":"0","AS":"12"},"championships":[1971]},{"name":"Hakeem Olajuwon","nickname":"hakeem","age":{"first":22,"last":39},"awards":{"1985":["AS","AD2"],"1986":["AS","AN2"],"1987":["AS","AD1","AN1"],"1988":["AS","AD1","AN1"],"1989":["AS","AN1"],"1990":["AS","AD1","AN2"],"1991":["AD2","AN3"],"1992":["AS"],"1993":["AS","AD1","AN1"],"1994":["AS","AD1","AN1","MVP"],"1995":["AS","AN3"],"1996":["AS","AD2","AN2"],"1997":["AS","AD2","AN1"],"1998":[],"1999":["AN3"],"2000":[],"2001":[],"2002":[]},"pics":["hakeemtrans1.png","hakeemtrans2.png","hakeemtrans3.png"],"teams":[{"team":"rockets","start":1985,"end":2001,"careerStart":1,"careerEnd":17},{"team":"raptors","start":2002,"end":2002,"careerStart":18,"careerEnd":18}],"totals":{"MVP":"1","AN":"12","AD":"9","AS":"12"},"championships":[1994,1995]},{"name":"Steve Nash","nickname":"nash","age":{"first":22,"last":40},"awards":{"1997":[],"1998":[],"1999":[],"2000":[],"2001":[],"2002":["AS","AN3"],"2003":["AS","AN3"],"2004":[],"2005":["AS","AN1","MVP"],"2006":["AS","AN1","MVP"],"2007":["AS","AN1"],"2008":["AS","AN2"],"2009":[],"2010":["AS","AN2"],"2011":[],"2012":["AS"],"2013":[],"2014":[],"2015":[]},"pics":["nashtrans1.png","nashtrans2.png","nashtrans3.png"],"teams":[{"team":"suns","start":1997,"end":1998,"careerStart":1,"careerEnd":2},{"team":"mavericks","start":1999,"end":2004,"careerStart":3,"careerEnd":8},{"team":"suns","start":2005,"end":2012,"careerStart":9,"careerEnd":16},{"team":"lakers","start":2013,"end":2015,"careerStart":17,"careerEnd":19}],"totals":{"MVP":"2","AN":"7","AD":"0","AS":"8"},"championships":[]},{"name":"Dirk Nowitzki","nickname":"dirk","age":{"first":20,"last":40},"awards":{"1999":[],"2000":[],"2001":["AN3"],"2002":["AS","AN2"],"2003":["AS","AN2"],"2004":["AS","AN3"],"2005":["AS","AN1"],"2006":["AS","AN1"],"2007":["AS","AN1","MVP"],"2008":["AS","AN2"],"2009":["AS","AN1"],"2010":["AS","AN2"],"2011":["AS","AN2"],"2012":["AS","AN3"],"2013":[],"2014":["AS"],"2015":["AS"],"2016":[],"2017":[],"2018":[],"2019":["AS"]},"pics":["dirktrans1.png","dirktrans2.png","dirktrans3.png"],"teams":[{"team":"mavericks","start":1999,"end":2019,"careerStart":1,"careerEnd":21}],"totals":{"MVP":"1","AN":"12","AD":"0","AS":"14"},"championships":[2011]},{"name":"Elgin Baylor","nickname":"elgin","age":{"first":24,"last":37},"awards":{"1959":["AS","AN1"],"1960":["AS","AN1"],"1961":["AS","AN1"],"1962":["AS","AN1"],"1963":["AS","AN1"],"1964":["AS","AN1"],"1965":["AS","AN1"],"1966":[],"1967":["AS","AN1"],"1968":["AS","AN1"],"1969":["AS","AN1"],"1970":["AS"],"1971":[],"1972":[]},"pics":["elgintrans1.png","elgintrans2.png","elgintrans3.png"],"teams":[{"team":"lakers","start":1959,"end":1972,"careerStart":1,"careerEnd":14}],"totals":{"MVP":"0","AN":"10","AD":"0","AS":"11"},"championships":[]},{"name":"Dwyane Wade","nickname":"dwade","age":{"first":22,"last":37},"awards":{"2004":[],"2005":["AS","AD2","AN2"],"2006":["AS","AN2"],"2007":["AS","AN3"],"2008":["AS"],"2009":["AS","AD2","AN1"],"2010":["AS","AD2","AN1"],"2011":["AS","AN2"],"2012":["AS","AN3"],"2013":["AS","AN3"],"2014":["AS"],"2015":["AS"],"2016":["AS"],"2017":[],"2018":[],"2019":["AS"]},"pics":["dwadetrans1.png","dwadetrans2.png","dwadetrans3.png"],"teams":[{"team":"heat","start":2004,"end":2016,"careerStart":1,"careerEnd":13},{"team":"bulls","start":2017,"end":2017,"careerStart":14,"careerEnd":14},{"team":"cavaliers","start":2018,"end":2018,"careerStart":15,"careerEnd":15},{"team":"heat","start":2019,"end":2019,"careerStart":16,"careerEnd":16}],"totals":{"MVP":"0","AN":"8","AD":"3","AS":"13"},"championships":[2006,2012,2013]},{"name":"Moses Malone","nickname":"moses","age":{"first":21,"last":39},"awards":{"1977":[],"1978":["AS"],"1979":["AS","AD2","AN1","MVP"],"1980":["AS","AN1"],"1981":["AS","AN1"],"1982":["AS","AN1","MVP"],"1983":["AS","AD1","AN2","MVP"],"1984":["AS","AN2"],"1985":["AS","AN1"],"1986":["AS"],"1987":["AS","AN2"],"1988":["AS"],"1989":["AS"],"1990":[],"1991":[],"1992":[],"1993":[],"1994":[],"1995":[]},"pics":["mosestrans1.png","mosestrans2.png","mosestrans3.png"],"teams":[{"team":"rockets","start":1977,"end":1982,"careerStart":1,"careerEnd":6},{"team":"76ers","start":1983,"end":1986,"careerStart":7,"careerEnd":10},{"team":"wizards","start":1987,"end":1988,"careerStart":11,"careerEnd":12},{"team":"hawks","start":1989,"end":1991,"careerStart":13,"careerEnd":15},{"team":"bucks","start":1992,"end":1993,"careerStart":16,"careerEnd":17},{"team":"76ers","start":1994,"end":1994,"careerStart":18,"careerEnd":18},{"team":"spurs","start":1995,"end":1995,"careerStart":19,"careerEnd":19}],"totals":{"MVP":"3","AN":"8","AD":"2","AS":"13"},"championships":[1983]},{"name":"Kevin Durant","nickname":"durant","age":{"first":19,"last":31},"awards":{"2008":[],"2009":[],"2010":["AS","AN1"],"2011":["AS","AN1"],"2012":["AS","AN1"],"2013":["AS","AN1"],"2014":["AS","AN1","MVP"],"2015":["AS"],"2016":["AS","AN2"],"2017":["AS","AN2"],"2018":["AS","AN1"],"2019":["AS","AN2"],"2020":[]},"pics":["duranttrans1.png","duranttrans2.png","duranttrans3.png"],"teams":[{"team":"sonics","start":2008,"end":2008,"careerStart":1,"careerEnd":1},{"team":"thunder","start":2009,"end":2016,"careerStart":2,"careerEnd":9},{"team":"warriors","start":2017,"end":2019,"careerStart":10,"careerEnd":12},{"team":"nets","start":2020,"end":2020,"careerStart":13,"careerEnd":13}],"totals":{"MVP":"1","AN":"10","AD":"0","AS":"10"},"championships":[2017,2018]}]')},function(e,t,n){},function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(2),o=n.n(i),u=n(5),l=n.n(u);class s extends a.a.Component{constructor(e){super(e),["onSelectMode"].map(e=>this[e]=this[e].bind(this)),this.state={career:"menuLeft selected",calendar:"",age:"menuRight "}}onSelectMode(e){e.preventDefault();({career:"menuLeft ",calendar:" ",age:"menuRight "})[e.target.value]+="selected",this.props.changeViewMode(e.target.attributes.value.value)}render(){const e=Object.entries({career:"NBA Seasons",calendar:"Calendar Year",age:"Player's Age"}).map(([e,t])=>{const n=l()({menuLeft:"career"===e,menuRight:"age"===e,selected:e===this.props.selected});return a.a.createElement("div",{className:n,onClick:this.onSelectMode,value:e}," ",t," ")});return a.a.createElement("div",{id:"menu"},e)}}class c extends a.a.Component{constructor(e){super(e),["selectPlayer","getPlayerInitials"].map(e=>this[e]=this[e].bind(this)),this.state={}}componentDidMount(){this.setState({selected:this.props.isSelected})}selectPlayer(e){this.props.onPlayerSelect(this.props.player)}getPlayerInitials(e){const t=e.split(" ");return t[0].substr(0,1)+t[1].substr(0,1)}render(){const e="img/"+this.props.player.nickname+"jerseysmallX.png";return a.a.createElement("div",{className:"playerNames",id:this.props.player.nickname,onClick:this.selectPlayer},a.a.createElement("img",{src:e,className:this.props.isSelected}))}}var f=n(6),p=n.n(f);class d extends a.a.Component{render(){const e=Math.floor(Math.random()*this.props.pics.length);let t=this.props.images[this.props.nickname][e];return console.log(this.props.images),console.log(t),a.a.createElement("div",{className:"profilePic"},a.a.createElement("img",{src:t}))}}class h extends a.a.Component{render(){return a.a.createElement("div",{className:"playerAwards"},a.a.createElement("div",{className:"titles"},a.a.createElement("img",{src:"img/nbatrophy1.png"}),a.a.createElement("h2",null,this.props.championships),a.a.createElement("span",null,"NBA Titles")),a.a.createElement("div",{className:"selections"},a.a.createElement("div",{className:"mvp"},a.a.createElement("h2",null,this.props.totals.MVP),a.a.createElement("span",null,"MVP")),a.a.createElement("div",{className:"alldefensive"},a.a.createElement("h2",null,this.props.totals.AD),a.a.createElement("span",null,"All Defensive")),a.a.createElement("div",{className:"allnba"},a.a.createElement("h2",null,this.props.totals.AN),a.a.createElement("span",null,"All NBA")),a.a.createElement("div",{className:"allstar"},a.a.createElement("h2",null,this.props.totals.AS),a.a.createElement("span",null,"All Star"))))}}class m extends a.a.Component{constructor(e){super(e),["getPlayerCalendarYears","getPlayerAgeYears","getPlayerCareerYears"].map(e=>this[e]=this[e].bind(this)),this.state={playerCalendarYears:[],playerAgeYears:[],playerCareerYears:[]}}componentWillMount(){this.setState({playerCalendarYears:this.getPlayerCalendarYears(Object.keys(this.props.playerData.awards)),playerAgeYears:this.getPlayerAgeYears(this.props.rookieYear,this.props.debutAge,Object.keys(this.props.playerData.awards)),playerCareerYears:this.getPlayerCareerYears(Object.keys(this.props.playerData.awards))})}getPlayerCalendarYears(e){let t=[],n=e[e.length-1];for(let r=e[0];r<=n;r++)t.push(parseInt(r));return t}getPlayerAgeYears(e,t,n){let r=[],a=0,i=n[n.length-1];for(var o=e;o<=i;o++)a=t+(o-e),r.push(a);return r}getPlayerCareerYears(e){for(var t=[],n=1;n<=e.length;n++)t.push(n);return t}render(){var e=this,t=d3.scale.ordinal().domain(this.props.yearsPlayed).rangeBands([10,455],.1),n=this.props.championships.map((function(n,r){var i,o=t.rangeBand();if("career"===e.props.mode){var u=Object.keys(e.props.playerData.awards);i=t(u.indexOf(n.toString())+1)}else if("age"===e.props.mode){var l=e.props.debutAge+e.state.playerCalendarYears.indexOf(n);i=t(l)}else i=t(n);var s=o>17?15:o;return r>0&&(i-=r*s),a.a.createElement("div",{className:"nbaTrophy",style:{left:i+"px"},width:o},a.a.createElement("img",{src:"img/nbatrophy1.png",width:s}))}));return a.a.createElement("div",{className:"playerTrophies"},n)}}class g extends a.a.Component{render(){var e=this;let t,n=this.props.yearsPlayed;"career"===this.props.mode?t=this.props.dataByCareerYear:"age"===this.props.mode&&(t=this.props.dataByAge);var r=d3.scale.ordinal().domain(n).rangeBands([10,455],.1),i=this.props.teams.map((function(t,n){var i,o="img/"+t.team+".png",u=r.rangeBand();if("career"===e.props.mode)i=r(t.careerStart);else if("age"===e.props.mode){var l=e.props.debutAge+(t.start-e.props.rookieYear);i=r(l)}else i=r(t.start);var s=u>17?15:u;return n>0&&(i-=n*s),a.a.createElement("div",{className:"teamLogo",style:{left:i+"px"},width:u},a.a.createElement("img",{src:o,width:s}))}));return a.a.createElement("div",{className:"playerTimeline"},i)}}var v=n(32);class y extends a.a.Component{constructor(e){super(e),["getAwardFill","getTeamsPlayed","createPlayerVisualization","getPlayerInitials"].map(e=>this[e]=this[e].bind(this)),this.state={playerAwards:[],yearsPlayed:[],dataByCareerYear:[],dataByCalendarYear:[],dataByAge:[],teamsPlayed:[],rookieYear:0,debutAge:0}}componentDidMount(){this.setState({playerAwards:this.props.playerAwards,yearsPlayed:this.props.yearsPlayed,playerData:this.props.playerData,teamsPlayed:this.getTeamsPlayed(this.props.playerData.teams),rookieYear:Object.keys(this.props.playerAwards)[0],debutAge:this.props.playerData.age.first})}getAwardFill(e){let t=e.substr(0,2),n=e.substr(2,1),r="award ";return r+="AS"===t?"allstar":"AD"===t?"alldefensive":"AN"===t?"allnba":"mvp",r+="2"===n?" secondteam":"3"===n?" thirdteam":" firstteam",r}getTeamsPlayed(e){return e.map((function(e){return e}))}createPlayerVisualization(e){let t=this,n=(t.props.mode,500-10-10),r=160-10-10,a=p.a.createElement("svg"),i=this.props.playerStats,o=this.props.yearsPlayed,u=["All Star","All Defensive","All NBA","MVP"],l=["AS","AD","AN","MVP"];var s=v.scale.ordinal().domain(o).rangeBands([10,n-25],.1),c=v.scale.ordinal().domain(l).rangeBands([r-40,0],.05),f=v.svg.axis().scale(s).tickSize(1).orient("bottom");v.svg.axis().scale(c).tickSize(0).tickValues(l).tickFormat((function(e,t){return u[t]})).orient("right");return v.select(a).append("g").attr("class","x axis").attr("transform","translate(0,"+(r-39)+")").call(f),"calendar"===this.props.mode&&v.select(a).selectAll("g.x.axis .tick text").style("text-anchor","end").attr("transform","translate(-6,5) rotate(-90)"),v.select(a).attr({height:r,width:n}).selectAll(".awardGroup").data(i).enter().append("g").attr({class:"awardGroup",transform:function(e){return"translate("+s(e.year)+","+("MVP"===e.award?c(e.award):c(e.award.substr(0,2)))+")"}}).on("mouseover",(function(){v.select(this).select("text").style("display",null)})).on("mouseout",(function(){v.select(this).select("text").style("display","none")})),v.select(a).selectAll("g.awardGroup").append("rect").attr({height:c.rangeBand(),width:s.rangeBand(),class:function(e){return t.getAwardFill(e.award)}}),v.select(a).selectAll("g.awardGroup").append("text").attr({dx:s.rangeBand()/4,dy:"17px"}).text((function(e){if("MVP"!==e.award&&"AS"!==e.award)return e.award.substr(2,1)})).style("display","none"),v.select(a).selectAll(".playerTeam").data(this.state.teamsPlayed).enter().append("rect").attr({class:function(e){return"playerTeam "+e.team},x:function(e){if("calendar"===t.props.mode)return s(e.start);if("age"===t.props.mode){var n=t.state.debutAge+(e.start-t.state.rookieYear);return s(n)}return s(e.careerStart)},y:r-15,width:function(e){if("calendar"===t.props.mode)return s(e.end)-s(e.start)+s.rangeBand();if("age"===t.props.mode){var n=t.props.timespan.age[0]+(e.careerStart-1),r=e.careerEnd-e.careerStart+n;return s(r)-s(n)+s.rangeBand()}return s(e.careerEnd+1-e.careerStart)+(s.rangeBand()/2-2)},height:4,fill:"black"}),a.toReact()}getPlayerInitials(e){let t=e.split(" ");return t[0].substr(0,1)+t[1].substr(0,1)}render(){return a.a.createElement("div",{className:"individualPlayerViz"},a.a.createElement(d,{player:this.props.playerData.name,nickname:this.props.playerData.nickname,pics:this.props.playerData.pics,images:this.props.images}),a.a.createElement("div",{className:"individualPlayerVizInfo"},this.createPlayerVisualization(this.props.playerData),a.a.createElement(h,{totals:this.props.playerData.totals,championships:this.props.playerData.championships.length}),a.a.createElement(g,{teams:this.props.playerData.teams,mode:this.props.mode,timespan:this.props.timespan,dataByCareerYear:this.state.dataByCareerYear,rookieYear:this.state.rookieYear,debutAge:this.state.debutAge,yearsPlayed:this.props.yearsPlayed}),a.a.createElement(m,{championships:this.props.playerData.championships,dataByCalendarYear:this.state.dataByCalendarYear,dataByCareerYear:this.state.dataByCareerYear,dataByAge:this.state.dataByAge,mode:this.props.mode,timespan:this.props.timespan,rookieYear:this.state.rookieYear,debutAge:this.state.debutAge,playerData:this.props.playerData,yearsPlayed:this.props.yearsPlayed})),a.a.createElement("h3",null,this.props.playerData.name))}}class b extends a.a.Component{constructor(e){super(e),["getYearsRange","getPlayerData","getPlayerDataByCalendarYear","getPlayerDataByCareerYear","getPlayerDataByAge"].map(e=>this[e]=this[e].bind(this)),this.state={}}getYearsRange(){for(var e=[],t=[],n=[],r=this.props.timespan.start;r<=this.props.timespan.end;r++)e.push(r);for(var a=1;a<=this.props.timespan.years;a++)t.push(a);if(void 0!==this.props.timespan.age)for(var i=this.props.timespan.age.first;i<=this.props.timespan.age.last;i++)n.push(i);return{calendar:e,year:t,age:n}}getPlayerData(e){for(var t=0;t<this.props.data.length;t++)if(this.props.data[t].nickname===e)return this.props.data[t];return{}}getPlayerDataByCalendarYear(e){let t=[];return Object.keys(e).forEach(n=>{e[n].forEach(e=>{t.push({year:parseInt(n),award:e})})}),t}getPlayerDataByCareerYear(e){var t=[];return Object.keys(e).forEach((n,r)=>{e[n].forEach(e=>{t.push({year:r+1,award:e})})}),t}getPlayerDataByAge(e,t){const n=Object.keys(e);let r=[],a=parseInt(n[0]);return n.forEach(n=>{const i=t+parseInt(n)-a;e[n].forEach(e=>{r.push({year:i,award:e})})}),r}render(){const e=this.getYearsRange();let t=this.props.players.map(t=>{let n,r=this.getPlayerData(t);"career"===this.props.mode?n=this.getPlayerDataByCareerYear(r.awards):"calendar"===this.props.mode?n=this.getPlayerDataByCalendarYear(r.awards):"age"===this.props.mode&&(n=this.getPlayerDataByAge(r.awards,r.age.first));const i="career"===this.props.mode?"year":this.props.mode;return a.a.createElement(y,{playerAwards:r.awards,mode:this.props.mode,key:t,timespan:e,yearsPlayed:e[i],images:this.props.images,playerStats:n,playerData:r})});return a.a.createElement("div",{id:"visualization"},t)}}class x extends a.a.Component{constructor(e){super(e),["changeViewMode","getTimeSpan","handlePlayerSelect","closeImage","getPlayerList"].map(e=>this[e]=this[e].bind(this));const t=["jordan","lebron","kobe"];this.state={selected:t,vizMode:"career",timespan:this.getTimeSpan(t),popup:"hide",img:""}}changeViewMode(e){this.setState({vizMode:e})}getTimeSpan(e){let t,n,r=2017,a=1,i=[],o=60,u=1,l=0,s=[];return s=this.props.data.filter(t=>-1!==e.indexOf(t.nickname)),s.forEach((e,s)=>{i=Object.keys(e.awards),t=Math.min.apply(Math,i),n=Math.max.apply(Math,i),t<r&&(r=t),n>a&&(a=n),i.length>l&&(l=i.length),o>e.age.first&&(o=e.age.first),u<e.age.last&&(u=e.age.last)}),{start:r,end:a,years:l,age:{first:o,last:u}}}handlePlayerSelect(e){const t=this.state.selected.indexOf(e.nickname);t<0?this.state.selected.unshift(e.nickname):this.state.selected.splice(t,1);const n=this.getTimeSpan(this.state.selected);this.setState({selected:this.state.selected,timespan:n})}closeImage(){this.setState({popup:"hide"})}getPlayerList(){const e=this.props.data.map(e=>{const t=-1!==this.state.selected.indexOf(e.nickname)?"selected":"";return a.a.createElement(c,{key:e.nickname+"-key",player:e,onPlayerSelect:this.handlePlayerSelect,isSelected:t})});return a.a.createElement("div",{id:"jerseys"},e)}render(){const e=0!==this.state.selected.length?"hide":"";return a.a.createElement("div",{id:"app"},a.a.createElement("div",{id:"header"},a.a.createElement("div",{id:"updated"},"v2.0 (04/18/2020)"),a.a.createElement("img",{src:"img/nbaLogo.png"}),a.a.createElement("h1",null," Comparing Greatness")," ",a.a.createElement("a",{href:"http://www.parvizu.com",target:"_blank",id:"madeby"},"by Pablo Arvizu")," ",a.a.createElement("a",{href:"https://twitter.com/arvizualization",target:"_blank",id:"twitterLink"},a.a.createElement("img",{src:"img/twitter-256.png"})),a.a.createElement("div",{className:"addthis_sharing_toolbox"})),a.a.createElement("div",{id:"blurb"},a.a.createElement("p",null,"Not all Basketball players are the same. Only a few of them have the drive and talent to rise to heights never seen before. Those we call the 'Great Ones'. But the path to greatness was different for each one. Some peaked very early, some took time to find their groove, others redefined the words longevity and success, while some were otherworldly throughout. Explore how some of the best players in NBA history stack up against each other. See how their careers unfolded by looking at when the awards and titles were won, and how maturity and experience played a part in their success. Get a chance to compare the greatest this game has ever seen, whether they be past or rising stars.")),this.getPlayerList(),a.a.createElement(s,{changeViewMode:this.changeViewMode,selected:this.state.vizMode}),a.a.createElement("div",{id:"vizLegend"},a.a.createElement("div",{id:"legendSection"},a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",{className:"selectionType"},"Most Valuable Player")),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null," "),a.a.createElement("div",{className:"mvp firstteam"})),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",{className:"selectionType"},"All NBA Team")),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null,"1st"),a.a.createElement("div",{className:"allnba firstteam"})),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null,"2nd"),a.a.createElement("div",{className:"allnba secondteam"})),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null,"3rd"),a.a.createElement("div",{className:"allnba thirdteam"})),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",{className:"selectionType"},"All Defensive Team")),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null,"1st"),a.a.createElement("div",{className:"alldefensive firstteam"})),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null,"2nd"),a.a.createElement("div",{className:"alldefensive secondteam"})),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",{className:"selectionType"},"All Star")),a.a.createElement("div",{className:"legendScale"},a.a.createElement("h5",null," "),a.a.createElement("div",{className:"allstar firstteam"})))),a.a.createElement(b,{players:this.state.selected,data:this.props.data,mode:this.state.vizMode,timespan:this.state.timespan,images:this.props.images}),a.a.createElement("div",{className:e,id:"instructions"},a.a.createElement("h1",null,"To compare, select one or more players by clicking on their jerseys above")),a.a.createElement("div",{className:"footer"},a.a.createElement("a",{href:"https://twitter.com/arvizualization",className:"twitter-follow-button","data-show-count":"false"},"Follow @sirgalahad88"),"  ",a.a.createElement("span",{className:"vertBar"},"|"),"  ",a.a.createElement("a",{className:"footer-link",href:"http://www.parvizu.com",target:"_blank"},"www.parvizu.com"),"  ",a.a.createElement("span",{className:"vertBar"},"|"),"  ",a.a.createElement("a",{className:"footer-link",href:"http://www.morethanjustsports.com",target:"_blank"},"www.morethanjustsports.com"),"   ",a.a.createElement("span",{className:"vertBar"},"|"),"  ",a.a.createElement("a",null,"Image Credits: Logos and Jerseys are property of the ©NBA ")))}}var S,w,A,E,N,M;n(34);S=window,w=document,A="script",E="ga",S.GoogleAnalyticsObject=E,S.ga=S.ga||function(){(S.ga.q=S.ga.q||[]).push(arguments)},S.ga.l=1*new Date,N=w.createElement(A),M=w.getElementsByTagName(A)[0],N.async=1,N.src="https://www.google-analytics.com/analytics.js",M.parentNode.insertBefore(N,M),ga("create","UA-77692823-1","auto"),ga("send","pageview");const k=n(33);let _={};k.sort((function(e,t){var n=e.name.split(" ")[1],r=t.name.split(" ")[1];return"'Magic'"===n&&(n="Johnson"),"'Magic'"===r&&(r="Johnson"),n<r?-1:n>r?1:0})),k.forEach((function(e){var t=[];e.pics.forEach((function(e){var n="img/"+e;t.push(n)})),_[e.nickname]=t})),o.a.render(a.a.createElement(x,{data:k,images:_}),document.getElementById("app"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,